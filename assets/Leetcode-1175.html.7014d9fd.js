import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as t,o as p,c as o,a as n,d as c,F as l,b as s,e as i}from"./app.d174a24d.js";const u={},r=n("h2",{id:"\u9898\u76EE",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE","aria-hidden":"true"},"#"),s(" \u9898\u76EE")],-1),d=n("h3",{id:"\u94FE\u63A5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u94FE\u63A5","aria-hidden":"true"},"#"),s(" \u94FE\u63A5")],-1),k={href:"https://leetcode.cn/problems/prime-arrangements/",target:"_blank",rel:"noopener noreferrer"},v=s("Leetcode-1175 \u8D28\u6570\u6392\u5217"),m=i(`<h3 id="\u9898\u610F" tabindex="-1"><a class="header-anchor" href="#\u9898\u610F" aria-hidden="true">#</a> \u9898\u610F</h3><ul><li><p>\u8BF7\u4F60\u5E2E\u5FD9\u7ED9\u4ECE <code>1</code> \u5230 <code>n</code> \u7684\u6570\u8BBE\u8BA1\u6392\u5217\u65B9\u6848\uFF0C\u4F7F\u5F97\u6240\u6709\u7684\u300C\u8D28\u6570\u300D\u90FD\u5E94\u8BE5\u88AB\u653E\u5728\u300C\u8D28\u6570\u7D22\u5F15\u300D\uFF08\u7D22\u5F15\u4ECE 1 \u5F00\u59CB\uFF09\u4E0A\uFF1B\u4F60\u9700\u8981\u8FD4\u56DE\u53EF\u80FD\u7684\u65B9\u6848\u603B\u6570\u3002</p></li><li><p>\u8BA9\u6211\u4EEC\u4E00\u8D77\u6765\u56DE\u987E\u4E00\u4E0B\u300C\u8D28\u6570\u300D\uFF1A\u8D28\u6570\u4E00\u5B9A\u662F\u5927\u4E8E 1 \u7684\uFF0C\u5E76\u4E14\u4E0D\u80FD\u7528\u4E24\u4E2A\u5C0F\u4E8E\u5B83\u7684\u6B63\u6574\u6570\u7684\u4E58\u79EF\u6765\u8868\u793A\u3002</p></li><li><p>\u7531\u4E8E\u7B54\u6848\u53EF\u80FD\u4F1A\u5F88\u5927\uFF0C\u6240\u4EE5\u8BF7\u4F60\u8FD4\u56DE\u7B54\u6848 \u6A21 mod <code>10^9 + 7</code> \u4E4B\u540E\u7684\u7ED3\u679C\u5373\u53EF\u3002</p></li></ul><h3 id="\u63D0\u793A" tabindex="-1"><a class="header-anchor" href="#\u63D0\u793A" aria-hidden="true">#</a> \u63D0\u793A</h3><ul><li><code>1 &lt;= n &lt;= 100</code></li></ul><h3 id="\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a> \u793A\u4F8B</h3><ul><li><p>\u793A\u4F8B\u4E00\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1An = 5
\u8F93\u51FA\uFF1A12
\u89E3\u91CA\uFF1A\u4E3E\u4E2A\u4F8B\u5B50\uFF0C[1,2,5,4,3] \u662F\u4E00\u4E2A\u6709\u6548\u7684\u6392\u5217\uFF0C\u4F46 [5,2,3,4,1] \u4E0D\u662F\uFF0C\u56E0\u4E3A\u5728\u7B2C\u4E8C\u79CD\u60C5\u51B5\u91CC\u8D28\u6570 5 \u88AB\u9519\u8BEF\u5730\u653E\u5728\u7D22\u5F15\u4E3A 1 \u7684\u4F4D\u7F6E\u4E0A\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u793A\u4F8B\u4E8C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1An = 100
\u8F93\u51FA\uFF1A682289015
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u5206\u6790" aria-hidden="true">#</a> \u5206\u6790</h2><ul><li>\u9898\u76EE\u53EF\u4EE5\u7406\u89E3\u4E3A <code>1~n</code> \u4E2D\uFF0C\u5206\u522B\u5BF9\u8D28\u6570\u8FDB\u884C\u5168\u6392\u5217\uFF0C\u518D\u5BF9\u975E\u8D28\u6570\u8FDB\u884C\u5168\u6392\u5217\uFF0C\u6700\u540E\u5C06\u4E24\u4E2A\u7ED3\u679C\u8FDB\u884C\u76F8\u4E58\u5373\u4E3A\u7ED3\u679C</li><li>\u6C42\u89E3\u8D28\u6570\uFF0C\u53EF\u4EE5\u7528<strong>\u8D28\u6570\u7B5B</strong>\u7684\u65B9\u6CD5\u6C42\u89E3</li><li>\u975E\u8D28\u6570\u4E2A\u6570\u5373\u603B\u6570\u51CF\u53BB\u8D28\u6570\u7684\u4E2A\u6570</li><li>\u6CE8\u610F\uFF1A <ul><li>\u6C42\u89E3\u8FC7\u7A0B\u4E2D\u4F1A\u7206 <code>int</code>\uFF0C\u6240\u4EE5\u8BA1\u7B97\u8FC7\u7A0B\u4E2D\u9700\u8981\u7528 <code>long</code> \u627F\u8F7D\uFF0C\u6700\u540E\u518D\u5C06\u7ED3\u679C\u8F6C\u4E3A <code>int</code></li></ul></li></ul><h2 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h2><h3 id="java\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#java\u4EE3\u7801" aria-hidden="true">#</a> Java\u4EE3\u7801</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> mod <span class="token operator">=</span> <span class="token number">1000000000</span> <span class="token operator">+</span> <span class="token number">7</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">numPrimeArrangements</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> st <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>st<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>st<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                cnt <span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> j <span class="token operator">*</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> j <span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    st<span class="token punctuation">[</span>j <span class="token operator">*</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">getKth</span><span class="token punctuation">(</span>cnt<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token function">getKth</span><span class="token punctuation">(</span>n <span class="token operator">-</span> cnt<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> mod<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">long</span> <span class="token function">getKth</span><span class="token punctuation">(</span><span class="token keyword">int</span> numk<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">long</span> temp <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> numk<span class="token punctuation">;</span> i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            temp <span class="token operator">=</span> <span class="token punctuation">(</span>temp <span class="token operator">*</span> i<span class="token punctuation">)</span> <span class="token operator">%</span> mod<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> temp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function h(b,f){const a=t("ExternalLinkIcon");return p(),o(l,null,[r,d,n("p",null,[n("a",k,[v,c(a)])]),m],64)}var w=e(u,[["render",h],["__file","Leetcode-1175.html.vue"]]);export{w as default};
