import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{o as e,c as o,a as n,d as c,e as s,b as a,r as l}from"./app.006ed22f.js";const i={},u=s(`<h1 id="\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8BED\u6CD5" aria-hidden="true">#</a> \u8BED\u6CD5</h1><h2 id="\u533A\u5206\u5927\u5C0F\u5199" tabindex="-1"><a class="header-anchor" href="#\u533A\u5206\u5927\u5C0F\u5199" aria-hidden="true">#</a> \u533A\u5206\u5927\u5C0F\u5199</h2><p>ES \u4E2D\u4E00\u5207\u90FD\u533A\u5206\u5927\u5C0F\u5199\u3002\u53D8\u91CF test \u548C \u53D8\u91CF Test \u662F\u4E24\u4E2A\u4E0D\u540C\u7684\u53D8\u91CF\u3002typeof \u4E0D\u80FD\u4F5C\u4E3A\u51FD\u6570\u540D\uFF0C\u800C Typeof \u662F\u4E00\u4E2A\u5B8C\u5168\u6709\u6548\u7684\u51FD\u6570\u540D</p><ul><li>\u5173\u952E\u5B57\u3001\u4FDD\u7559\u5B57\u3001true\u3001false \u548C null \u4E0D\u80FD\u4F5C\u4E3A\u6807\u8BC6\u7B26\u3002</li></ul><h2 id="\u4E25\u683C\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u4E25\u683C\u6A21\u5F0F" aria-hidden="true">#</a> \u4E25\u683C\u6A21\u5F0F</h2><ul><li><p>\u6574\u4E2A\u811A\u672C\u542F\u52A8\u4E25\u683C\u6A21\u5F0F\uFF0C\u5728\u811A\u672C\u5F00\u5934\u52A0\u4E0A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>\u4E5F\u53EF\u4EE5\u7ED9\u5355\u72EC\u4E00\u4E2A\u51FD\u6570\u6307\u5B9A\u4E25\u683C\u6A21\u5F0F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">doSomeThing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">// \u51FD\u6570\u4F53</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="\u8BED\u53E5" tabindex="-1"><a class="header-anchor" href="#\u8BED\u53E5" aria-hidden="true">#</a> \u8BED\u53E5</h2><p>\u5206\u53F7\u4E0D\u662F\u5FC5\u987B\u7684\uFF0C\u4F46\u6700\u597D\u4E0D\u8981\u7701\u7565\u3002\u52A0\u5206\u53F7\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\u80FD\u63D0\u5347\u6027\u80FD\uFF0C\u56E0\u4E3A\u89E3\u6790\u5668\u4F1A\u5C1D\u8BD5\u5728\u5408\u9002\u7684\u4F4D\u7F6E\u8865\u4E0A\u5206\u53F7\u6765\u7EA0\u6B63\u8BED\u6CD5\u9519\u8BEF\u3002</p><ul><li>\u5173\u4E8E\u5206\u53F7\u662F\u5426\u7701\u7565\uFF0C\u6700\u597D\u8FD8\u662F\u4E0D\u8981\u7701\u7565\uFF0C\u6211\u4E4B\u524D\u9047\u5230\u8FC7\u4E00\u4E2A\u4F8B\u5B50\u{1F447}\u3002\u5982\u679C\u4E0D\u5728<code>const a = 1</code>\u540E\u9762\u52A0\u5206\u53F7\uFF0C\u4F1A\u5BFC\u81F4\u89E3\u6790\u5668\u8BA4\u4E3A1\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u629B\u51FA<code>VM51:2 Uncaught TypeError: 1 is not a function</code>\u7684\u9519\u8BEF\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Uncaught TypeError: 1 is not a function</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;IFEE&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// ok\uFF01</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;IFEE&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u53D8\u91CF" aria-hidden="true">#</a> \u53D8\u91CF</h1><p>\u6709\u4E09\u4E2A\u5173\u952E\u5B57\u53EF\u4EE5\u58F0\u660E\u53D8\u91CF\uFF1Avar\u3001let \u548C const\u3002var \u5728 ES \u7684\u6240\u6709\u7248\u672C\u4E2D\u90FD\u53EF\u4EE5\u7528\uFF0C\u800C let \u548C const \u53EA\u80FD\u5728 ES6 \u4EE5\u53CA\u66F4\u9AD8\u7248\u672C\u4E2D\u4F7F\u7528\u3002</p><h2 id="var-\u5173\u952E\u5B57" tabindex="-1"><a class="header-anchor" href="#var-\u5173\u952E\u5B57" aria-hidden="true">#</a> var \u5173\u952E\u5B57</h2><p><code>var message</code>\u5B9A\u4E49\u4E86\u4E00\u4E2A\u540D\u4E3A message \u7684\u53D8\u91CF\uFF0C\u53EF\u4EE5\u4FDD\u5B58\u4EFB\u4F55\u7C7B\u578B\u7684\u503C\uFF0C\u5728\u6CA1\u6709\u521D\u59CB\u5316\u7684\u60C5\u51B5\u4E0B\uFF0C<code>console.log(message)</code>\u7684\u7ED3\u679C\u4E3A undefined\u3002</p><h3 id="var-\u58F0\u660E\u4F5C\u7528\u57DF" tabindex="-1"><a class="header-anchor" href="#var-\u58F0\u660E\u4F5C\u7528\u57DF" aria-hidden="true">#</a> var \u58F0\u660E\u4F5C\u7528\u57DF</h3><ul><li><p>\u4F7F\u7528 var \u5B9A\u4E49\u7684\u53D8\u91CF\u4F1A\u6210\u4E3A\u5305\u542B\u4ED6\u7684\u51FD\u6570\u7684\u5C40\u90E8\u53D8\u91CF\uFF0C\u5728\u51FD\u6570\u9000\u51FA\u7684\u65F6\u5019\u4F1A\u88AB\u9500\u6BC1\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> message <span class="token operator">=</span> <span class="token string">&quot;hi&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span> <span class="token comment">//\u51FA\u9519</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5728\u51FD\u6570\u5185\u5B9A\u4E49\u53D8\u91CF\u7684\u65F6\u5019\u7701\u7565 var \u64CD\u4F5C\u7B26\uFF0C\u53EF\u4EE5\u521B\u5EFA\u4E00\u4E2A\u5168\u5C40\u53D8\u91CF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	message <span class="token operator">=</span> <span class="token string">&quot;hi&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span> <span class="token comment">//hi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="var-\u58F0\u660E\u63D0\u5347" tabindex="-1"><a class="header-anchor" href="#var-\u58F0\u660E\u63D0\u5347" aria-hidden="true">#</a> var \u58F0\u660E\u63D0\u5347</h3><ul><li><p>\u4F7F\u7528 var \u65F6\uFF0C\u4E0B\u9762\u7684\u4EE3\u7801\u4E0D\u4F1A\u62A5\u9519\uFF0C\u5E94\u4E3A\u4F7F\u7528\u8FD9\u4E2A\u5173\u952E\u5B57\u58F0\u660E\u7684\u53D8\u91CF\u4F1A\u81EA\u52A8\u63D0\u5347\u5230\u51FD\u6570\u4F5C\u7528\u57DF\u7684\u9876\u90E8(\u4F46\u662F\u4F18\u5148\u7EA7\u5C0F\u4E8E\u51FD\u6570\u58F0\u660E)</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> age <span class="token operator">=</span> <span class="token number">26</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//undefined</span>

\u7B49\u4EF7\u4E8E\uFF1A
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> age<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
    age <span class="token operator">=</span> <span class="token number">26</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u53CD\u590D\u591A\u6B21\u4F7F\u7528 var \u58F0\u660E\u540C\u4E00\u4E2A\u53D8\u91CF\u4E5F\u6CA1\u6709\u95EE\u9898\u3002</p></li></ul><hr><h2 id="let-\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#let-\u58F0\u660E" aria-hidden="true">#</a> let \u58F0\u660E</h2><p>let \u548C var \u7684\u4F5C\u7528\u5DEE\u4E0D\u591A\uFF0C\u4F46\u6700\u660E\u663E\u7684\u533A\u522B\u662F\uFF1Avar \u58F0\u660E\u7684\u8303\u56F4\u662F\u51FD\u6570\u4F5C\u7528\u57DF\uFF0C\u800C let \u58F0\u660E\u7684\u8303\u56F4\u662F\u5757\u4F5C\u7528\u57DF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&#39;Matt&#39;</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Matt</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Matt</span>

<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">26</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//26</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//ReferenceError: age \u6CA1\u6709\u5B9A\u4E49</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>let \u4E0D\u5141\u8BB8\u5728\u540C\u4E00\u4E2A\u5757\u4F5C\u7528\u57DF\u4E2D\u51FA\u73B0\u5197\u6742\uFF08\u91CD\u590D\uFF09\u58F0\u660E\uFF0C\u5426\u5219\u4F1A\u9020\u6210\u62A5\u9519\uFF1A<code>SyntaxError:\u6807\u8BC6\u7B26 xx \u5DF2\u7ECF\u58F0\u660E\u8FC7\u4E86</code>\u3002</p></li><li><p>let \u548C var \u662F\u540C\u4E00\u79CD\u7C7B\u578B\u7684\u53D8\u91CF\uFF0C\u4ED6\u4EEC\u4E4B\u95F4\u7684\u4E0D\u540C\u4E3B\u8981\u662F\u6307\u51FA\u53D8\u91CF\u7684\u76F8\u5173\u4F5C\u7528\u57DF\u5982\u4F55\u5B58\u5728</p></li><li><p>let \u58F0\u660E\u7684\u53D8\u91CF\u4E0D\u4F1A\u5728\u4F5C\u7528\u57DF\u4E2D\u88AB\u63D0\u5347</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//ReferenceError: age \u6CA1\u6709\u5B9A\u4E49</span>
int age <span class="token operator">=</span> <span class="token number">26</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u4F7F\u7528 let \u5728\u5168\u5C40\u4F5C\u7528\u57DF\u4E2D\u58F0\u660E\u7684\u53D8\u91CF\u4E0D\u4F1A\u6210\u4E3A window \u5BF9\u8C61\u7684\u5C5E\u6027\uFF0C\u800C var \u58F0\u660E\u7684\u53D8\u91CF\u4F1A\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&quot;Matt&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Matt</span>
<span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">26</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>js \u4F1A\u4E3A for \u5FAA\u73AF\u4E2D\u7684 let \u58F0\u660E\u5206\u522B\u521B\u5EFA\u72EC\u7ACB\u7684\u53D8\u91CF\u5B9E\u4F8B\uFF0C\u5728 let \u51FA\u73B0\u4E4B\u524D\uFF0Cfor \u5FAA\u73AF\u5B9A\u4E49\u7684\u8FED\u4EE3\u53D8\u91CF\u4F1A\u6E17\u900F\u5230\u5FAA\u73AF\u4F53\u5916\u90E8\uFF0C\u5728\u4F7F\u7528 let \u540E\u8FED\u4EE3\u53D8\u91CF\u7684\u4F5C\u7528\u57DF\u53EA\u5B58\u5728\u4E8E\u51FD\u6570\u5185\u90E8\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//5</span>

<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">setTimeOut</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//5,5,5,5,5</span>
<span class="token punctuation">}</span>

\u4F7F\u7528 <span class="token keyword">let</span> \u5728<span class="token keyword">for</span>\u5FAA\u73AF\u4E2D\u5B9A\u4E49\u8FED\u4EE3\u53D8\u91CF\u4E4B\u540E\uFF1A

<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//ReferenceError: i \u6CA1\u6709\u5B9A\u4E49</span>

<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">setTimeOut</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//0,1,2,3,4</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><hr><h2 id="const-\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#const-\u58F0\u660E" aria-hidden="true">#</a> const \u58F0\u660E</h2><ul><li><p>const \u7684\u884C\u4E3A\u4E0E let \u57FA\u672C\u76F8\u540C\uFF0C\u552F\u4E00\u4E00\u4E2A\u91CD\u8981\u7684\u533A\u522B\u662F\u7528\u5B83\u58F0\u660E\u53D8\u91CF\u7684\u540C\u65F6\u5FC5\u987B\u5BF9\u53D8\u91CF\u8FDB\u884C\u521D\u59CB\u5316\uFF0C\u4E14\u5C1D\u8BD5\u4FEE\u6539 const \u58F0\u660E\u7684\u53D8\u91CF\u7684\u65F6\u5019\u4F1A\u5BFC\u81F4\u8FD0\u884C\u65F6\u7684\u9519\u8BEF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> age <span class="token operator">=</span> <span class="token number">26</span><span class="token punctuation">;</span>
age <span class="token operator">=</span> <span class="token number">36</span><span class="token punctuation">;</span> <span class="token comment">// TypeError: \u7ED9\u5E38\u91CF\u8D4B\u503C</span>

<span class="token comment">// const \u4E5F\u4E0D\u5141\u8BB8\u91CD\u590D\u58F0\u660E</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;Matt&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;Nicholas&#39;</span> <span class="token comment">// SyntaxError</span>

<span class="token comment">// const \u58F0\u660E\u7684\u4F5C\u7528\u57DF\u4E5F\u662F\u5757</span>
<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;Matt&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;Nicholas&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Matt</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>const \u58F0\u660E\u7684\u9650\u5236\u503C\u9002\u7528\u4E8E\u5B83\u6307\u5411\u7684\u53D8\u91CF\u7684\u5F15\u7528\uFF0C\u5982\u679C const \u53D8\u91CF\u5F15\u7528\u7684\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u90A3\u4E48\u4FEE\u6539\u5BF9\u8C61\u54EA\u4E0D\u7684\u5C5E\u6027\u4E0D\u8FDD\u53CD const \u7684\u9650\u5236\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
person<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Matt&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u4E0D\u80FD\u7528 const \u6765\u58F0\u660E for \u5FAA\u73AF\u4E2D\u7684\u8FED\u4EE3\u53D8\u91CF\uFF0C\u56E0\u4E3A for \u5FAA\u73AF\u4E2D\u4F1A\u5B58\u5728\u53D8\u91CF\u7684\u81EA\u589E\u3002</p></li></ul><hr><h1 id="\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> \u6570\u636E\u7C7B\u578B</h1><h2 id="typeof-\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#typeof-\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> typeof \u64CD\u4F5C\u7B26</h2><p>\u5BF9\u4E00\u4E2A\u503C\u4F7F\u7528 typeof \u4F1A\u8FD4\u56DE\u4EE5\u4E0B\u516D\u79CD\u7C7B\u578B\u4E4B\u4E00</p><ul><li>undefinde\uFF1A\u8868\u793A\u503C\u4E3A\u5B9A\u4E49</li><li>boolean\uFF1A\u8868\u793A\u503C\u4E3A\u5E03\u5C14\u503C</li><li>string\uFF1A\u8868\u793A\u503C\u4E3A\u5B57\u7B26\u4E32</li><li>object\uFF1A\u8868\u793A\u503C\u4E3A\u5BF9\u8C61\uFF08\u800C\u4E0D\u662F\u51FD\u6570\uFF09\u6216 null</li><li>function\uFF1A\u8868\u793A\u503C\u4E3A\u51FD\u6570</li><li>symbol\uFF1A\u8868\u793A\u503C\u4E3A\u7B26\u53F7</li></ul><p>\u4E25\u683C\u6765\u8BF4\uFF0C\u51FD\u6570\u5728 ES \u4E2D\u88AB\u8BA4\u5B9A\u4E3A\u662F\u5BF9\u8C61\uFF0C\u5E76\u4E0D\u4EE3\u8868\u4E00\u79CD\u6570\u636E\u7C7B\u578B\u3002\u4F46\u662F\u51FD\u6570\u4E5F\u6709\u81EA\u5DF1\u7279\u6B8A\u7684\u5C5E\u6027\u3002\u6240\u4EE5\u6709\u5FC5\u8981\u901A\u8FC7 typeof \u64CD\u4F5C\u7B26\u6765\u533A\u5206\u51FD\u6570\u548C\u5176\u4ED6\u5BF9\u8C61\u3002</p><hr><h2 id="undefined-\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#undefined-\u7C7B\u578B" aria-hidden="true">#</a> Undefined \u7C7B\u578B</h2><ul><li><p>Undefined\u7C7B\u578B\u53EA\u6709\u4E00\u4E2A\u503C\uFF0C\u5C31\u662Fundefined\u3002\u5F53\u4F7F\u7528var\u6216let\u58F0\u660E\u4E86\u53D8\u91CF\u4F46\u6CA1\u6709\u521D\u59CB\u5316\u65F6\uFF0C\u5C31\u76F8\u5F53\u4E8E\u7ED9\u53D8\u91CF\u8D4B\u4E88\u4E86undefined \u503C\u3002</p></li><li><p>\u6CE8\u610F\u7B49\u4E8E undefined \u7684\u53D8\u91CF\uFF0C\u548C\u672A\u58F0\u660E\u53D8\u91CF\u7684\u533A\u522B\u3002\u4F7F\u7528 typeof \u65F6\uFF0Cundefined \u4F1A\u8FD4\u56DE undefined\uFF0C\u672A\u58F0\u660E\u53D8\u91CF\u540C\u6837\u4F1A\u8FD4\u56DEundefined\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> message<span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u62A5\u9519</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u4E25\u683C\u6765\u8BF4\u672A\u521D\u59CB\u5316\u7684\u53D8\u91CF\u548C\u672A\u5B9A\u4E49\u7684\u53D8\u91CF\u5B58\u5728\u6839\u672C\u6027\u5DEE\u5F02\uFF0C\u4F46\u662F\u5B83\u4EEC\u90FD\u65E0\u6CD5\u8FDB\u884C\u5B9E\u9645\u64CD\u4F5C\uFF0C\u6240\u4EE5\u4F7F\u7528 typeof \u64CD\u4F5C\u7B26\u5F97\u5230\u7684\u503C\u90FD\u4E3A undefined\u3002</p></li></ul><hr><h2 id="null-\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#null-\u7C7B\u578B" aria-hidden="true">#</a> Null \u7C7B\u578B</h2><p>Null\u7C7B\u578B\u540C\u6837\u53EA\u6709\u4E00\u4E2A\u503C\uFF0C\u5373 null\u3002null \u503C\u8868\u793A\u4E00\u4E2A\u7A7A\u5BF9\u8C61\u6307\u9488\uFF0C\u6240\u4EE5 typeof null \u4F1A\u8FD4\u56DE &quot;object&quot;\u3002undefined \u503C\u662F\u7531 null \u503C\u6D3E\u751F\u800C\u6765\u7684\u3002\u6240\u4EE5 <code>null == undefined</code> \u8FD4\u56DEtrue</p><hr><h2 id="boolean-\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#boolean-\u7C7B\u578B" aria-hidden="true">#</a> Boolean \u7C7B\u578B</h2><p>Boolean\u7C7B\u578B\uFF0C\u6709\u4E24\u4E2A\u5B57\u9762\u503Ctrue\u548Cfalse\u3002\u867D\u7136\u5E03\u5C14\u503C\u53EA\u6709\u4E24\u4E2A\uFF0C\u4F46\u6240\u6709\u5176\u4ED6ECMAScript\u7C7B\u578B\u7684\u503C\u90FD\u6709\u76F8\u5E94\u5E03\u5C14\u503C\u7684\u7B49\u4EF7\u5F62\u5F0F\u3002\u8981\u5C06\u4E00\u4E2A\u5176\u4ED6\u7C7B\u578B\u7684\u503C\u8F6C\u6362\u4E3A\u5E03\u5C14\u503C\uFF0C\u53EF\u4EE5\u4F7F\u7528Boolean()\uFF0CBoolean()\u53EF\u4EE5\u5728\u4EFB\u610F\u7C7B\u578B\u7684\u6570\u636E\u4E0A\u8C03\u7528\uFF0C\u800C\u4E14\u59CB\u7EC8\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002</p><table><thead><tr><th style="text-align:center;">\u6570\u636E\u7C7B\u578B</th><th style="text-align:center;">\u8F6C\u6362\u4E3A true \u7684\u503C</th><th style="text-align:center;">\u8F6C\u5316\u4E3Afalse\u7684\u503C</th></tr></thead><tbody><tr><td style="text-align:center;">Boolean</td><td style="text-align:center;">true</td><td style="text-align:center;">false</td></tr><tr><td style="text-align:center;">String</td><td style="text-align:center;">\u975E\u7A7A\u5B57\u7B26\u4E32</td><td style="text-align:center;">&quot;&quot;\uFF08\u7A7A\u5B57\u7B26\u4E32\uFF09</td></tr><tr><td style="text-align:center;">Number</td><td style="text-align:center;">\u975E\u96F6\u6570\u503C\uFF08\u5305\u62EC\u65E0\u7A77\u503C\uFF09</td><td style="text-align:center;">0\u3001NaN</td></tr><tr><td style="text-align:center;">Object</td><td style="text-align:center;">\u4EFB\u610F\u5BF9\u8C61</td><td style="text-align:center;">null</td></tr><tr><td style="text-align:center;">Undefined</td><td style="text-align:center;">N/A\uFF08\u4E0D\u5B58\u5728\uFF09</td><td style="text-align:center;">undefined</td></tr></tbody></table><ul><li>if \u7B49\u6D41\u63A7\u5236\u8BED\u53E5\u4F1A\u81EA\u52A8\u6267\u884C\u5176\u4ED6\u7C7B\u578B\u503C\u5230\u5E03\u5C14\u503C\u7684\u8F6C\u6362</li></ul><hr><h2 id="number-\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#number-\u7C7B\u578B" aria-hidden="true">#</a> Number \u7C7B\u578B</h2><h3 id="\u6574\u6570" tabindex="-1"><a class="header-anchor" href="#\u6574\u6570" aria-hidden="true">#</a> \u6574\u6570</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> intNum <span class="token operator">=</span> <span class="token number">59</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> octalNum1 <span class="token operator">=</span> <span class="token number">070</span><span class="token punctuation">;</span> <span class="token comment">// \u516B\u8FDB\u5236\u768456</span>
<span class="token keyword">let</span> octalNum2 <span class="token operator">=</span> <span class="token number">08</span><span class="token punctuation">;</span> <span class="token comment">// \u65E0\u6548\u7684\u516B\u8FDB\u5236\uFF0C\u63098\u5904\u7406</span>

<span class="token keyword">let</span> hexNum1 <span class="token operator">=</span> <span class="token number">0xA</span><span class="token punctuation">;</span> <span class="token comment">// \u5341\u516D\u8FDB\u5236\u768410</span>

<span class="token comment">//\u5982\u679C\u5B57\u9762\u91CF\u8D85\u51FA\u4E86\u5E94\u6709\u7684\u8303\u56F4\uFF0C\u5C31\u4F1A\u5FFD\u7565\u524D\u7F00\uFF0C\u5F53\u4F5C\u5341\u8FDB\u5236\u5904\u7406</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u79D1\u5B66\u8BA1\u6570\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u79D1\u5B66\u8BA1\u6570\u6CD5" aria-hidden="true">#</a> \u79D1\u5B66\u8BA1\u6570\u6CD5</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B49\u4E8E31250000, 3.125 \u4F5C\u4E3A\u7CFB\u6570\uFF0C\u4E58\u4EE5 10 \u7684 7 \u6B21\u5E42</span>
<span class="token keyword">let</span> num1 <span class="token operator">=</span> <span class="token number">3.125e7</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B49\u4E8E0.000 000 3 </span>
<span class="token keyword">let</span> num2 <span class="token operator">=</span> <span class="token number">3e-7</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,49),r=n("li",null,"ECMAScript\u7531\u4E8E\u4F7F\u7528\u4E86IEEE754\u6570\u503C\uFF0C\u6240\u4EE5\u6D6E\u70B9\u6570\u8BA1\u7B97\u5B58\u5728\u504F\u5DEE\uFF0C\u4F8B\u5982\uFF0C0.1\u52A00.2\u5F97\u5230\u7684\u4E0D\u7B49\u4E8E0.3\u3002\uFF08\u8FD9\u79CD\u9519\u8BEF\u5E76\u975EECMAScript \u6240\u72EC\u6709\u3002\u5176\u4ED6\u4F7F\u7528\u76F8\u540C\u683C\u5F0F\u7684\u8BED\u8A00\u4E5F\u6709\u8FD9\u4E2A\u95EE\u9898\uFF09",-1),k=a("\u5982\u4F55\u907F\u514D\u8FD9\u79CD\u7CBE\u5EA6\u95EE\u9898 "),d=n("li",null,"\u5C06\u6D6E\u70B9\u6570\u53D8\u4E3A\u6574\u6570\u8BA1\u7B97\u540E\u5728\u8F6C\u5316\u4E3A\u6D6E\u70B9\u6570\u3002",-1),m={href:"https://javascript.plainenglish.io/why-0-1-0-2-0-3-in-javascript-d7e218224a72?gi=2b1ed4703bd4",target:"_blank",rel:"noopener noreferrer"},v=a("\u6216\u8005\u4F7F\u7528\u73B0\u6210\u7684\u7C7B\u5E93"),b=s(`<h3 id="nan" tabindex="-1"><a class="header-anchor" href="#nan" aria-hidden="true">#</a> NaN</h3><ul><li><p>\u7528 0 \u9664\u4EE5\u4EFB\u4F55\u6570\u503C\u5728\u5176\u4ED6\u8BED\u8A00\u4E2D\u901A\u5E38\u90FD\u4F1A\u5BFC\u81F4\u9519\u8BEF\uFF0C\u4ECE\u800C\u7EC8\u6B62\u4EE3\u7801\u3002\u4F46\u5728<strong>ECMAScript</strong>\u4E2D\uFF0C0\u3001+0 \u6216\u8005 -0 \u76F8\u9664\u4F1A\u8FD4\u56DE NaN</p></li><li><p>\u5982\u679C\u5206\u5B50\u662F\u975E 0 \u503C\uFF0C\u5206\u6BCD\u662F\u6709\u7B26\u53F7 0 \u6216\u8005\u65E0\u7B26\u53F7 0\uFF0C\u5219\u4F1A\u8FD4\u56DE <strong>Infinity</strong> \u6216\u8005 <strong>-Infinity</strong></p></li><li><p>\u4EFB\u4F55\u6D89\u53CA NaN \u7684\u64CD\u4F5C\u90FD\u4F1A\u8FD4\u56DE NaN\uFF08\u4F8B\u5982 NaN/10\uFF09</p></li><li><p>NaN \u4E0D\u7B49\u4E8E \u5305\u62EC NaN \u5728\u5185\u7684\u4EFB\u4F55\u7684\u503C</p></li><li><p>isNaN \u51FD\u6570\u53EF\u4EE5\u5224\u65AD\u4F20\u5165\u7684\u53C2\u6570\u662F\u5426\u4E3A\u6570\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>		  <span class="token comment">// false\uFF0C10\u662F\u6570\u503C</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">&quot;10&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	  <span class="token comment">// false\uFF0C\u53EF\u4EE5\u8F6C\u5316\u4E3A\u6570\u503C10</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">&quot;blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	  <span class="token comment">// true\uFF0C\u4E0D\u53EF\u4EE5\u8F6C\u5316\u4E3A\u6570\u503C</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	  <span class="token comment">// false\uFF0C\u53EF\u4EE5\u8F6C\u5316\u4E3A\u6570\u503C1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>isNaN \u51FD\u6570\u53EF\u4EE5\u7528\u4E8E\u6D4B\u8BD5\u5BF9\u8C61\uFF0C\u9996\u5148\u4F1A\u8C03\u7528\u5BF9\u8C61\u7684 valueOf() \u65B9\u6CD5\uFF0C\u7136\u540E\u5728\u786E\u5B9A\u8FD4\u56DE\u7684\u503C\u662F\u5426\u53EF\u4EE5\u8F6C\u5316\u4E3A\u6570\u503C\u3002\u5982\u679C\u4E0D\u80FD\uFF0C\u518D\u8C03\u7528 toString() \u65B9\u6CD5\uFF0C\u7136\u540E\u518D\u786E\u5B9A\u8FD4\u56DE\u503C\u3002</p></li></ul><h3 id="\u6570\u503C\u8F6C\u6362" tabindex="-1"><a class="header-anchor" href="#\u6570\u503C\u8F6C\u6362" aria-hidden="true">#</a> \u6570\u503C\u8F6C\u6362</h3><p>\u6709\u4E09\u4E2A\u51FD\u6570\u53EF\u4EE5\u5C06\u975E\u6570\u503C\u8F6C\u5316\u4E3A\u6570\u503C\uFF1ANumber()\uFF0CparseFloat() \u548C parseInt()\u3002\u7B2C\u4E00\u4E2A\u53EF\u4EE5\u7528\u4E8E\u4EFB\u4F55\u6570\u636E\u7C7B\u578B\u3002\u540E\u4E24\u4E2A\u51FD\u6570\u4E3B\u8981\u7528\u4E8E\u5C06\u5B57\u7B26\u4E32\u8F6C\u5316\u4E3A\u6570\u503C</p><ul><li><p>Number() \u51FD\u6570\u57FA\u4E8E\u5982\u4E0B\u89C4\u5219\u6267\u884C\u8F6C\u6362</p><ul><li>\u5E03\u5C14\u503C\uFF0Ctrue \u8F6C\u6362\u4E3A 1\uFF0Cfalse \u8F6C\u6362\u4E3A 0\u3002</li><li>\u6570\u503C\uFF0C\u76F4\u63A5\u8FD4\u56DE</li><li>null\uFF0C\u8FD4\u56DE 0</li><li>undefined\uFF0C\u8FD4\u56DE NaN</li><li>\u5B57\u7B26\u4E32\uFF0C\u5E94\u7528\u5982\u4E0B\u89C4\u5219\uFF1A <ul><li>\u5982\u679C\u5B57\u7B26\u4E32\u5305\u542B\u6570\u503C\u5B57\u7B26\uFF0C\u5305\u62EC\u6570\u503C\u5B57\u7B26\u524D\u9762\u5E26\u52A0\u3001\u51CF\u53F7\u7684\u60C5\u51B5\uFF0C\u5219\u8F6C\u6362\u4E3A\u4E00\u4E2A\u5341\u8FDB\u5236\u6570\u503C\u3002</li><li>\u5982\u679C\u5B57\u7B26\u4E32\u5305\u542B\u6709\u6548\u7684\u6D6E\u70B9\u503C\u683C\u5F0F\u5982\u201C1.1\u201D\uFF0C\u5219\u4F1A\u8F6C\u5316\u4E3A\u76F8\u5E94\u7684\u6D6E\u70B9\u503C</li><li>\u5982\u679C\u5B57\u7B26\u4E32\u4E2D\u5305\u542B\u6709\u6548\u7684\u5341\u516D\u8FDB\u5236\u683C\u5F0F\u5982\u201C0xf\u201D\uFF0C\u5219\u4F1A\u8F6C\u5316\u4E3A\u4E0E\u8BE5\u5341\u516D\u8FDB\u5236\u503C\u5BF9\u5E94\u7684\u5341\u8FDB\u5236\u6570\u503C\u3002</li><li>\u5982\u679C\u662F\u7A7A\u5B57\u7B26\u4E32\uFF0C\u5219\u8FD4\u56DE0.</li><li>\u5982\u679C\u5B57\u7B26\u4E32\u4E2D\u5305\u542B\u9664\u4E0A\u8FF0\u60C5\u51B5\u4E4B\u5916\u7684\u5176\u4ED6\u5B57\u7B26\uFF0C\u5219\u8FD4\u56DE NaN</li></ul></li><li>\u5BF9\u8C61\uFF0C\u9996\u5148\u4F1A\u8C03\u7528\u5BF9\u8C61\u7684 valueOf() \u65B9\u6CD5\uFF0C\u7136\u540E\u5728\u786E\u5B9A\u8FD4\u56DE\u7684\u503C\u662F\u5426\u53EF\u4EE5\u8F6C\u5316\u4E3A\u6570\u503C\u3002\u5982\u679C\u4E0D\u80FD\uFF0C\u518D\u8C03\u7528 toString() \u65B9\u6CD5\uFF0C\u7136\u540E\u518D\u786E\u5B9A\u8FD4\u56DE\u503C\u3002</li></ul></li><li><p>parseInt() \u51FD\u6570\u66F4\u4E13\u6CE8\u4E8E\u5B57\u7B26\u4E32\u662F\u5426\u5305\u542B\u6570\u503C\u6A21\u5F0F\u3002\u5B57\u7B26\u4E32\u6700\u524D\u9762\u7684\u7A7A\u683C\u4F1A\u88AB\u5FFD\u7565\uFF0C\u4ECE\u7B2C\u4E00\u4E2A\u975E\u7A7A\u5B57\u7B26\u5F00\u59CB\u8F6C\u6362\uFF0C\u5982\u679C\u68C0\u6D4B\u5230\u7684\u7B2C\u4E00\u4E2A\u5B57\u7B26\u4E0D\u4E3A\u6570\u503C\u3001\u52A0\u53F7\u6216\u51CF\u53F7\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE NaN\uFF0C\u5219\u8BF4\u660E\u7A7A\u5B57\u7B26\u4E32\u4E5F\u4F1A\u8FD4\u56DE NaN\u3002\u5982\u679C\u7B2C\u4E00\u4E2A\u5B57\u7B26\u4E3A\u6570\u503C\u3001\u52A0\u53F7\u6216\u51CF\u53F7\uFF0C\u5219\u7EE7\u7EED\u4EE5\u6B64\u68C0\u6D4B\u6BCF\u4E2A\u5B57\u7B26\uFF0C\u77E5\u9053\u5B57\u7B26\u4E32\u672B\u5C3E\u6216\u68C0\u6D4B\u5230\u975E\u6570\u503C\u5B57\u7B26\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> num1 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&quot;1234blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>			<span class="token comment">// 1234</span>
<span class="token keyword">let</span> num2 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>					<span class="token comment">// NaN</span>
<span class="token keyword">let</span> num3 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token number">22.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>					<span class="token comment">// 22</span>
<span class="token keyword">let</span> num4 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&quot;0xA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>					<span class="token comment">// 10\uFF0C\u8F6C\u5316\u4E3A\u5341\u516D\u8FDB\u5236\u6574\u6570</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>parseInt() \u4E5F\u63A5\u6536\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u4F5C\u4E3A\u6307\u5B9A\u7684\u8FDB\u5236\u6570</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> num1 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>			<span class="token comment">// 2</span>
<span class="token keyword">let</span> num2 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>			<span class="token comment">// 8</span>
<span class="token keyword">let</span> num3 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>			<span class="token comment">// 10</span>
<span class="token keyword">let</span> num4 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>			<span class="token comment">// 16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>parseFloat() \u51FD\u6570\u548C parseInt() \u51FD\u6570\u7C7B\u4F3C\uFF0C\u90FD\u662F\u4ECE\u7B2C\u4E00\u4E2A\u975E\u7A7A\u5B57\u7B26\u5F00\u59CB\u8F6C\u6362\uFF0C\u8F6C\u6362\u5230\u5B57\u7B26\u4E32\u672B\u5C3E\u6216\u8005\u68C0\u6D4B\u5230\u975E\u6570\u503C\u5B57\u7B26\u5219\u505C\u6B62\uFF0C\u4E5F\u5C31\u662F\u8BF4\u68C0\u6D4B\u5230\u7684\u7B2C\u4E00\u4E2A\u5C0F\u6570\u70B9\u662F\u6709\u6548\u7684\uFF0C\u7B2C\u4E8C\u6B21\u68C0\u6D4B\u5230\u7684\u5C0F\u6570\u70B9\u662F\u65E0\u6548\u7684\u3002</p><ul><li>\u8FD9\u4E2A\u51FD\u6570\u53EF\u4EE5\u8BC6\u522B\u6240\u6709\u7684\u6D6E\u70B9\u683C\u5F0F\u4EE5\u53CA\u5341\u8FDB\u5236\u683C\u5F0F\uFF0C\u5341\u516D\u8FDB\u5236\u6570\u503C\u59CB\u7EC8\u4F1A\u8FD4\u56DE 0\uFF0C\u4E14\u65E0\u6CD5\u6307\u5B9A\u5E95\u6570\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> num1 <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">&quot;1234blue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>			<span class="token comment">// 1234</span>
<span class="token keyword">let</span> num2 <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">&quot;0xA&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>				<span class="token comment">// 0</span>
<span class="token keyword">let</span> num3 <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">&quot;22.5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>				<span class="token comment">// 22.5</span>
<span class="token keyword">let</span> num4 <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">&quot;22.34.5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>			<span class="token comment">// 22.34</span>
<span class="token keyword">let</span> num5 <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">&quot;0908.5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>			<span class="token comment">// 908.5</span>
<span class="token keyword">let</span> num6 <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">&quot;3.125e7&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>			<span class="token comment">// 31250000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><hr><h2 id="string-\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#string-\u7C7B\u578B" aria-hidden="true">#</a> String \u7C7B\u578B</h2><p>\u4EE5\u4E0B\u4EE3\u7801\u7684\u5B58\u5728\u90FD\u662F\u5408\u6CD5\u7684</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> firstName <span class="token operator">=</span> <span class="token string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> lastName <span class="token operator">=</span> <span class="token string">&#39;Jacob&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> laseName <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Jingleheimerschmidt</span><span class="token template-punctuation string">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B57\u7B26\u4E32\u7684\u7279\u70B9" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u7684\u7279\u70B9" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u7684\u7279\u70B9</h3><p>ECMAScript \u4E2D\u7684\u5B57\u7B26\u4E32\u662F\u4E0D\u53EF\u53D8\u7684\uFF0C\u8981\u4FEE\u6539\u67D0\u4E2A\u53D8\u91CF\u4E2D\u7684\u5B57\u7B26\u4E32\u503C\uFF0C\u5FC5\u987B\u9500\u6BC1\u539F\u6709\u7684\u5B57\u7B26\u4E32\uFF0C\u7136\u540E\u5C06\u5305\u542B\u65B0\u503C\u7684\u53E6\u4E00\u4E2A\u5B57\u7B26\u4E32\u4FDD\u5B58\u5230\u8BE5\u53D8\u91CF\u4E2D</p><h3 id="\u8F6C\u5316\u4E3A\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u8F6C\u5316\u4E3A\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u8F6C\u5316\u4E3A\u5B57\u7B26\u4E32</h3><ul><li><p>toString() \u65B9\u6CD5\u53EF\u89C1\u4E8E\u6570\u503C\u3001\u5E03\u5C14\u503C\u3001\u5BF9\u8C61\u548C\u5B57\u7B26\u4E32\u503C\uFF0C\u552F\u4E00\u7684\u7528\u9014\u5C31\u662F\u8FD4\u56DE\u5F53\u524D\u503C\u7684\u5B57\u7B26\u4E32\u7B49\u4EF7\u7269\u3002null \u548Cundefined \u503C\u6CA1\u6709\u8FD9\u4E2A\u65B9\u6CD5\u3002</p><ul><li>\u591A\u6570\u60C5\u51B5\u4E0B toString() \u65B9\u6CD5\u4E0D\u63A5\u53D7\u53C2\u6570\uFF0C\u4F46\u5F53\u6570\u503C\u8C03\u7528\u8FD9\u4E2A\u65B9\u6CD5\u7684\u65F6\u5019\uFF0C\u53EF\u4EE5\u4F20\u5165\u4E00\u4E2A\u5E95\u6570\u53C2\u6570\uFF0C\u8868\u793A\u4EE5\u4EC0\u4E48\u5E95\u6570\u6765\u8F93\u51FA\u6570\u503C\u7684\u5B57\u7B26\u4E32\u8868\u793A\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  			<span class="token comment">// &quot;10&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  			<span class="token comment">// &quot;1010&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  			<span class="token comment">// &quot;12&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  		<span class="token comment">// &quot;10&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 			<span class="token comment">// &quot;a&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5F53\u4E0D\u786E\u5B9A\u503C\u662F\u5426\u4E3A null \u6216 undefined \u7684\u65F6\u5019\u53EF\u4EE5\u4F7F\u7528 String() \u8F6C\u578B\u51FD\u6570\uFF0C\u59CB\u7EC8\u4F1A\u8FD4\u56DE\u8868\u793A\u76F8\u5E94\u7C7B\u578B\u503C\u7684\u5B57\u7B26\u4E32\uFF0C\u8BE5\u51FD\u6570\u9075\u5FAA\u4EE5\u4E0B\u89C4\u5219</p><ul><li>\u5982\u679C\u503C\u6709 toString() \u65B9\u6CD5\uFF0C\u5219\u8C03\u7528\u8BE5\u65B9\u6CD5\uFF08\u4E0D\u4F20\u53C2\u6570\uFF09\u5E76\u8FD4\u56DE\u7ED3\u679C\u3002</li><li>\u5982\u679C\u503C\u662F null\uFF0C\u8FD4\u56DE&quot;null&quot;</li><li>\u5982\u679C\u503C\u662F undefined\uFF0C\u8FD4\u56DE\u201Cundefined\u201D</li></ul></li><li><p>\u7528\u52A0\u53F7\u64CD\u4F5C\u7B26\u7ED9\u4E00\u4E2A\u503C\u52A0\u4E0A\u4E00\u4E2A\u7A7A\u5B57\u7B26\u4E32\u201C\u201D\uFF0C\u4E5F\u53EF\u4EE5\u5C06\u5176\u8F6C\u5316\u4E3A\u5B57\u7B26\u4E32\u3002</p></li></ul><h3 id="\u6A21\u7248\u5B57\u9762\u91CF" tabindex="-1"><a class="header-anchor" href="#\u6A21\u7248\u5B57\u9762\u91CF" aria-hidden="true">#</a> \u6A21\u7248\u5B57\u9762\u91CF</h3><p>\u4E0E\u4F7F\u7528\u5355\u5F15\u53F7\u6216\u53CC\u5F15\u53F7\u4E0D\u540C\uFF0C\u6A21\u7248\u5B57\u9762\u91CF\u4FDD\u7559\u6362\u884C\u5B57\u7B26\uFF0C\u53EF\u4EE5\u8DE8\u884C\u5B9A\u4E49\u5B57\u7B26\u4E32</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> myMultiLineString <span class="token operator">=</span> <span class="token string">&#39;first line\\nsecoend line&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> myMultiLineTemplateLiteral <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">first line
second line</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myMultiLineString<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// first line</span>
<span class="token comment">// second line</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myMultiLineTemplateLiteral<span class="token punctuation">)</span>
<span class="token comment">// first line</span>
<span class="token comment">// second line</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myMultiLineString <span class="token operator">===</span> myMultiLineTemplateLiteral<span class="token punctuation">)</span><span class="token punctuation">;</span>		<span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u4E8E\u6A21\u7248\u5B57\u9762\u91CF\u4F1A\u4FDD\u6301\u53CD\u5F15\u53F7\u5185\u90E8\u7684\u7A7A\u683C\uFF0C\u6240\u4EE5\u683C\u5F0F\u6B63\u786E\u7684\u6A21\u7248\u5B57\u7B26\u53EF\u80FD\u770B\u8D77\u6765\u4F1A\u7F29\u8FDB\u4E0D\u5F53\uFF0C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8FD9\u4E2A\u6A21\u677F\u5B57\u9762\u91CF\u5728\u6362\u884C\u7B26\u4E4B\u540E\u6709 25 \u4E2A\u7A7A\u683C\u7B26 </span>
<span class="token keyword">let</span> myTemplateLiteral <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">first line
                         second line</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>myTemplateLiteral<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span> 			<span class="token comment">// 47</span>

<span class="token comment">// \u8FD9\u4E2A\u6A21\u7248\u5B57\u9762\u91CF\u4EE5\u4E00\u4E2A\u6362\u884C\u7B26\u5F00\u5934</span>
<span class="token keyword">let</span> secondTemplateLiteral <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
first line
second line</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>secondTemplateLiteral<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token comment">// true</span>

<span class="token comment">// \u8FD9\u4E2A\u6A21\u7248\u5B57\u9762\u91CF\u6CA1\u6709\u610F\u6599\u4E4B\u5916\u7684\u5B57\u7B26</span>
<span class="token keyword">let</span> thirdTemplateLiteral <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">first line
second line</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>thirdTemplateLiteral<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// first line</span>
<span class="token comment">// second line</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B57\u7B26\u4E32\u63D2\u503C" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u63D2\u503C" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u63D2\u503C</h3><p>\u6A21\u7248\u5B57\u9762\u91CF\u5728\u5B9A\u4E49\u7684\u65F6\u5019\u7ACB\u5373\u6C42\u503C\u5E76\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\u5B9E\u4F8B\uFF0C\u4EFB\u4F55\u63D2\u5165\u7684\u53D8\u91CF\u4E5F\u4F1A\u4ECE\u5B83\u4EEC\u6700\u63A5\u8FD1\u7684\u4F5C\u7528\u57DF\u4E2D\u53D6\u503C\u3002\u5B57\u7B26\u4E32\u63D2\u503C\u901A\u8FC7\u5728 \${} \u4E2D\u4F7F\u7528\u4E00\u4E2A JavaScript \u8868\u8FBE\u5F0F\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> exponent <span class="token operator">=</span> <span class="token string">&#39;second&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// \u4EE5\u524D\uFF0C\u5B57\u7B26\u4E32\u63D2\u503C\u662F\u8FD9\u6837\u5B9E\u73B0\u7684</span>
<span class="token keyword">let</span> interpolatedString <span class="token operator">=</span> value <span class="token operator">+</span> <span class="token string">&#39;to the&#39;</span> <span class="token operator">+</span> exponent <span class="token operator">+</span> <span class="token string">&#39;power is&#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>value <span class="token operator">*</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u73B0\u5728\uFF0C\u53EF\u4EE5\u7528\u5B57\u9762\u91CF\u8FD9\u6837\u5B9E\u73B0</span>
<span class="token keyword">let</span> interpolatdTemplateLieral <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> to the </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>exponent<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> power is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value <span class="token operator">*</span> value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>interpolatedString<span class="token punctuation">)</span><span class="token punctuation">;</span>			<span class="token comment">// 5 to the second power is 25</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>interpolatdTemplateLieral<span class="token punctuation">)</span><span class="token punctuation">;</span>		<span class="token comment">// 5 to the second power is 25</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6A21\u677F\u5B57\u9762\u91CF\u6807\u7B7E\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u6A21\u677F\u5B57\u9762\u91CF\u6807\u7B7E\u51FD\u6570" aria-hidden="true">#</a> \u6A21\u677F\u5B57\u9762\u91CF\u6807\u7B7E\u51FD\u6570</h3><p>\u6A21\u677F\u5B57\u9762\u91CF\u4E5F\u652F\u6301\u5B9A\u4E49\u6807\u7B7E\u51FD\u6570(tag function)\uFF0C\u800C\u901A\u8FC7\u6807\u7B7E\u51FD\u6570\u53EF\u4EE5\u81EA\u5B9A\u4E49\u63D2\u503C\u884C\u4E3A\u3002\u6807\u7B7E\u51FD\u6570\u4F1A\u63A5\u6536\u88AB\u63D2\u503C\u8BB0\u53F7\u5206\u9694\u540E\u7684\u6A21\u677F\u548C\u5BF9\u6BCF\u4E2A\u8868\u8FBE\u5F0F\u6C42\u503C\u7684\u7ED3\u679C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>

<span class="token comment">// \u53EF\u4EE5\u81EA\u5B9A\u4E49\u6807\u7B7E\u5982\u4F55\u7EC4\u5408\u7684\u884C\u4E3A</span>
<span class="token keyword">function</span> <span class="token function">simpleTag</span><span class="token punctuation">(</span><span class="token parameter">strings<span class="token punctuation">,</span> <span class="token operator">...</span>expressions</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>strings<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> expression <span class="token keyword">of</span> expressions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>expression<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token string">&#39;foobar&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> taggedResult <span class="token operator">=</span> simpleTag<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span> a <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> + </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span> b <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span> a <span class="token operator">+</span> b <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>


<span class="token comment">// [&quot;&quot;, &quot; + &quot;, &quot; = &quot;, &quot;&quot;] simpleTag\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570</span>
<span class="token comment">// simpleTag\u5269\u4F59\u7684\u53C2\u6570</span>
<span class="token comment">// 6</span>
<span class="token comment">// 9</span>
<span class="token comment">// 15</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>taggedResult<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;foobar&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u539F\u59CB\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u539F\u59CB\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u539F\u59CB\u5B57\u7B26\u4E32</h3><p>\u4F7F\u7528 String.raw \u6807\u7B7E\u51FD\u6570\u53EF\u4EE5\u76F4\u63A5\u83B7\u53D6\u539F\u59CB\u7684\u6A21\u7248\u5B57\u9762\u91CF\u5185\u5BB9\uFF0C\u82E5\u4E0D\u662F\u88AB\u8F6C\u4E49\u4E4B\u540E\u7684\u5B57\u7B26\u4E32\u5185\u5BB9</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span>raw<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\u00A9</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// \\u00A9, \u4E0D\u4F1A\u5BF9\\u00A9\u8F6C\u4E49</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span>raw<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">first line\\nsecond line</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// &quot;first line\\nsecond line&quot;\uFF0C\u4E0D\u4F1A\u5BF9\\n\u8F6C\u4E49</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E5F\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32\u6570\u7EC4\u7684 .raw \u5C5E\u6027\u83B7\u53D6\u6BCF\u4E2A\u5B57\u7B26\u4E32\u7684\u539F\u59CB\u5185\u5BB9</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">printRaw</span><span class="token punctuation">(</span><span class="token parameter">strings</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> string <span class="token keyword">of</span> strrings<span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> rawString <span class="token keyword">in</span> strings<span class="token punctuation">.</span>raw<span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>rawString<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

printRaw<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\\u00A9</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span> <span class="token string">&#39;and&#39;</span> <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n</span><span class="token template-punctuation string">\`</span></span>
<span class="token comment">// (\u5546\u6807\u7B26\u53F7)</span>
<span class="token comment">// (\u6362\u884C\u7B26)</span>

<span class="token comment">// \\u00A9</span>
<span class="token comment">// \\n</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="symbol-\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#symbol-\u7C7B\u578B" aria-hidden="true">#</a> Symbol \u7C7B\u578B</h2><p>Symbol(\u7B26\u53F7)\u662FECMAScript6\u65B0\u589E\u7684\u6570\u636E\u7C7B\u578B\u3002\u7B26\u53F7\u7684\u7528\u9014\u662F\u786E\u4FDD\u5BF9\u8C61\u5C5E\u6027\u4F7F\u7528\u552F\u4E00\u6807\u8BC6\u7B26\uFF0C\u4E0D\u4F1A\u53D1\u751F\u5C5E\u6027\u51B2\u7A81\u7684\u5371\u9669\u3002</p><h3 id="\u7B26\u53F7\u7684\u57FA\u672C\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7B26\u53F7\u7684\u57FA\u672C\u7528\u6CD5" aria-hidden="true">#</a> \u7B26\u53F7\u7684\u57FA\u672C\u7528\u6CD5</h3><p>\u7B26\u53F7\u9700\u8981\u7528 Symbol() \u51FD\u6570\u521D\u59CB\u5316\uFF0Ctypeof \u5BF9\u7B26\u53F7\u7684\u8FD4\u56DE\u503C\u662F symbol\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u521B\u5EFA Symbol</span>
<span class="token keyword">let</span> sym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span>sym<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>		<span class="token comment">// symbol</span>
<span class="token comment">// \u4E5F\u53EF\u4EE5\u4F20\u5165\u4E00\u4E2A\u5B57\u7B26\u4E32\u53C2\u6570\u4F5C\u4E3A\u5BF9\u7B26\u53F7\u7684\u63CF\u8FF0\uFF0C\u8FD9\u4E2A\u5B57\u7B26\u4E32\u53C2\u6570\u4E0E\u7B26\u53F7\u7684\u5B9A\u4E49\u6216\u6807\u8BC6\u5B8C\u5168\u65E0\u5173</span>
<span class="token keyword">let</span> fooSymbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5168\u5C40\u7B26\u53F7\u6CE8\u518C\u8868" tabindex="-1"><a class="header-anchor" href="#\u5168\u5C40\u7B26\u53F7\u6CE8\u518C\u8868" aria-hidden="true">#</a> \u5168\u5C40\u7B26\u53F7\u6CE8\u518C\u8868</h3><p>\u4F7F\u7528 Symbol.for() \u521B\u5EFA\u7B26\u53F7\uFF0C\u5B83\u4F1A\u68C0\u67E5\u5168\u5C40\u8FD0\u884C\u65F6\u6CE8\u518C\u8868\uFF0C\u53D1\u73B0\u4E0D\u5B58\u5728\u5BF9\u5E94\u7684\u7B26\u53F7\uFF0C\u4E8E\u662F\u5C31\u4F1A\u751F\u6210\u4E00\u4E2A\u65B0\u7B26\u53F7\u5B9E\u4F8B\u5E76\u6DFB\u52A0\u5230\u6CE8\u518C\u8868\u4E2D\u3002\u540E\u7EED\u4F7F\u7528\u76F8\u540C \u5B57\u7B26\u4E32\u7684\u8C03\u7528\u540C\u6837\u4F1A\u68C0\u67E5\u6CE8\u518C\u8868\uFF0C\u53D1\u73B0\u5B58\u5728\u4E0E\u8BE5\u5B57\u7B26\u4E32\u5BF9\u5E94\u7684\u7B26\u53F7\uFF0C\u7136\u540E\u5C31\u4F1A\u8FD4\u56DE\u8BE5\u7B26\u53F7\u5B9E\u4F8B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> fooGlobalSymbol <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>			<span class="token comment">// \u521B\u5EFA\u65B0\u7B26\u53F7</span>
<span class="token keyword">let</span> otherFooGlobalSymbol <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>		<span class="token comment">// \u91CD\u7528\u5DF2\u6709\u7B26\u53F7</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fooGlobalSymbol <span class="token operator">===</span> otherFooGlobalSymbol<span class="token punctuation">)</span><span class="token punctuation">;</span>		<span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u5373\u4F7F\u91C7\u7528\u76F8\u540C\u7684\u7B26\u53F7\u63CF\u8FF0\uFF0C\u5728\u5168\u5C40\u6CE8\u518C\u8868\u4E2D\u5B9A\u4E49\u7684\u7B26\u53F7\u8DDF\u4F7F\u7528 Symbol() \u5B9A\u4E49\u7684\u7B26\u53F7\u4E5F\u5E76\u4E0D\u7B49\u540C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> localSymbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> globalSymbol <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>localSymbol <span class="token operator">===</span> globalSymbol<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5168\u5C40\u6CE8\u518C\u8868\u4E2D\u7684\u7B26\u53F7\u5FC5\u987B\u4F7F\u7528\u5B57\u7B26\u4E32\u952E\u6765\u521B\u5EFA\uFF0C\u56E0\u6B64\u4F5C\u4E3A\u53C2\u6570\u4F20\u7ED9 Symbol.for() \u7684\u4EFB\u4F55\u503C\u90FD\u4F1A\u88AB\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> emptyGlobalSymbol <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>emptyGlobalSymbol<span class="token punctuation">)</span><span class="token punctuation">;</span> 	<span class="token comment">// Symbol(undefined) </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u8FD8\u53EF\u4EE5\u4F7F\u7528 Symbol.keyFor() \u6765\u67E5\u8BE2\u5168\u5C40\u6CE8\u518C\u8868\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u63A5\u6536\u7B26\u53F7\uFF0C\u8FD4\u56DE\u8BE5\u5168\u5C40\u7B26\u53F7\u5BF9\u5E94\u7684\u5B57 \u7B26\u4E32\u952E\u3002\u5982\u679C\u67E5\u8BE2\u7684\u4E0D\u662F\u5168\u5C40\u7B26\u53F7\uFF0C\u5219\u8FD4\u56DE undefined\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u521B\u5EFA\u5168\u5C40\u7B26\u53F7</span>
<span class="token keyword">let</span> s <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// foo</span>
<span class="token comment">// \u521B\u5EFA\u666E\u901A\u7B26\u53F7</span>
<span class="token keyword">let</span> s2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined </span>

<span class="token comment">//\u5982\u679C\u4F20\u7ED9 Symbol.keyFor()\u7684\u4E0D\u662F\u7B26\u53F7\uFF0C\u5219\u8BE5\u65B9\u6CD5\u629B\u51FA TypeError\uFF1A</span>
Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 		<span class="token comment">// TypeError: 123 is not a symbol </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="\u4F7F\u7528\u7B26\u53F7\u4F5C\u4E3A\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u7B26\u53F7\u4F5C\u4E3A\u5C5E\u6027" aria-hidden="true">#</a> \u4F7F\u7528\u7B26\u53F7\u4F5C\u4E3A\u5C5E\u6027</h3><p>\u51E1\u662F\u53EF\u4EE5\u4F7F\u7528\u5B57\u7B26\u4E32\u6216\u6570\u503C\u4F5C\u4E3A\u5C5E\u6027\u7684\u5730\u65B9\uFF0C\u90FD\u53EF\u4EE5\u4F7F\u7528\u7B26\u53F7\u3002\u8FD9\u5C31\u5305\u62EC\u4E86\u5BF9\u8C61\u5B57\u9762\u91CF\u5C5E\u6027\u548C Object.defineProperty()\u3001Object.defineProperties() \u5B9A\u4E49\u7684\u5C5E\u6027\u3002\u5BF9\u8C61\u5B57\u9762\u91CF\u53EA\u80FD\u5728\u8BA1\u7B97\u5C5E\u6027\u8BED\u6CD5\u4E2D\u4F7F\u7528\u7B26\u53F7\u4F5C\u4E3A\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> s1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> s2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> o <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>s1<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;foo val&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;bar val&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {Symbol(foo): foo val, Symbol(bar): bar val}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Object.getOwnPropertyNames() \u4F1A\u8FD4\u56DE\u5BF9\u8C61\u5E38\u89C4\u5C5E\u6027\u7684\u6570\u7EC4, Object.getOwnPropertySymbols() \u8FD4\u56DE\u5BF9\u8C61\u5B9E\u4F8B\u7684\u7B26\u53F7\u5C5E\u6027\u6570\u7EC4</strong>, \u8FD9\u4E24\u4E2A\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u5F7C\u6B64\u4E92\u65A5\u3002<strong>Object.getOwnPropertyDescriptors() \u4F1A\u8FD4\u56DE\u540C\u65F6\u5305\u542B\u5E38\u89C4\u548C\u7B26\u53F7\u5C5E\u6027\u63CF\u8FF0\u7B26\u7684\u5BF9\u8C61\uFF0CReflect.ownKeys() \u4F1A\u8FD4\u56DE\u4E24\u79CD\u7C7B\u578B\u7684\u952E</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> s1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> s2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> o <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>s1<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;foo val&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>s2<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;bar val&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">baz</span><span class="token operator">:</span> <span class="token string">&#39;baz val&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">qux</span><span class="token operator">:</span> <span class="token string">&#39;qux val&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getOwnPropertySymbols</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [Symbol(foo), Symbol(bar)]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;baz&quot;, &quot;qux&quot;]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptors</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {baz: {...}, qux: {...}, Symbol(foo): {...}, Symbol(bar): {...}}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&quot;baz&quot;, &quot;qux&quot;, Symbol(foo), Symbol(bar)]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5728\u63D0\u5230 ECMAScript \u89C4\u8303\u65F6\uFF0C\u7ECF\u5E38\u4F1A\u5F15\u7528\u7B26\u53F7\u5728\u89C4\u8303\u4E2D\u7684\u540D\u79F0\uFF0C\u524D\u7F00\u4E3A @@\u3002\u6BD4\u5982\uFF0C @@iterator \u6307\u7684\u5C31\u662F Symbol.iterator\u3002</li></ul><h3 id="symbol-asynciterator" tabindex="-1"><a class="header-anchor" href="#symbol-asynciterator" aria-hidden="true">#</a> Symbol.asyncIterator</h3><p>\u4F5C\u4E3A\u4E00\u4E2A\u5C5E\u6027\u8FD4\u56DE\u5BF9\u8C61\u9ED8\u8BA4\u7684 AsyncIterator\uFF0C\u7531 for-await-of \u5FAA\u73AF\u4F7F\u7528\u3002\u8FD9\u4E2A\u7B26\u53F7\u8868\u793A\u5B9E\u73B0\u5F02\u6B65\u8FED\u4EE3\u5668 API \u7684\u51FD\u6570\u3002\u5FAA\u73AF\u65F6\uFF0C\u5B83\u4EEC\u4F1A\u8C03\u7528\u4EE5 Symbol.asyncIterator \u4E3A\u952E\u7684\u51FD\u6570\uFF0C\u5E76\u671F\u671B\u8FD9\u4E2A\u51FD\u6570\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u5B9E\u73B0\u8FED\u4EE3\u5668 API \u7684\u5BF9\u8C61\u3002\u5F88\u591A\u65F6\u5019\uFF0C\u8FD4\u56DE\u7684\u5BF9\u8C61\u662F\u5B9E\u73B0\u8BE5 API \u7684 AsyncGenerator\uFF08\u7C7B\u4F3C\u4E8E Symbol.Iterator \u7684\u5F02\u6B65\u7248\u672C\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
 async <span class="token operator">*</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>asyncIterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>asyncIterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// AsyncGenerator {&lt;suspended&gt;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6280\u672F\u4E0A\uFF0C\u8FD9\u4E2A\u7531 Symbol.asyncIterator \u51FD\u6570\u751F\u6210\u7684\u5BF9\u8C61\u5E94\u8BE5\u901A\u8FC7\u5176 next() \u65B9\u6CD5\u9646\u7EED\u8FD4\u56DE Promise \u5B9E\u4F8B\u3002\u53EF\u4EE5\u901A\u8FC7\u663E\u5F0F\u5730\u8C03\u7528 next() \u65B9\u6CD5\u8FD4\u56DE\uFF0C\u4E5F\u53EF\u4EE5\u9690\u5F0F\u5730\u901A\u8FC7\u5F02\u6B65\u751F\u6210\u5668\u51FD\u6570\u8FD4\u56DE\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Emitter</span> <span class="token punctuation">{</span>
 <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">max</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">this</span><span class="token punctuation">.</span>max <span class="token operator">=</span> max<span class="token punctuation">;</span>
 <span class="token keyword">this</span><span class="token punctuation">.</span>asyncIdx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 async <span class="token operator">*</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>asyncIterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>asyncIdx <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">yield</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>asyncIdx<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">asyncCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">let</span> emitter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Emitter</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">for</span> <span class="token keyword">await</span><span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> emitter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">asyncCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 0</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
<span class="token comment">// 4 </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u81EA\u5B9A\u4E49\u5F02\u6B65\u53EF\u8FED\u4EE3\u5BF9\u8C61</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
obj<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>asyncIterator<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1, 2, 3</span>
        <span class="token function">alert</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="for-await-of" tabindex="-1"><a class="header-anchor" href="#for-await-of" aria-hidden="true">#</a> for...await...of</h4><p>for\u2026await\u2026of \u8BED\u53E5\u521B\u5EFA\u4E00\u4E2A\u5FAA\u73AF\uFF0C\u8BE5\u5FAA\u73AF\u904D\u5386\u5F02\u6B65\u53EF\u8FED\u4EE3\u5BF9\u8C61\u4EE5\u53CA\u540C\u6B65\u53EF\u8FED\u4EE3\u5BF9\u8C61\u3002\u8BE5\u5FAA\u73AF\u904D\u5386\u5F02\u6B65\u53EF\u8FED\u4EE3\u5BF9\u8C61\u4EE5\u53CA\u540C\u6B65\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF0C\u5305\u62EC: \u5185\u7F6E\u7684 String\uFF0CArray\uFF0C\u7C7B\u4F3C\u6570\u7EC4\u5BF9\u8C61 (\u4F8B\u5982 arguments \u6216 NodeList )\u3002</p><p>for\u2026await\u2026of \u4E5F\u53EF\u4EE5\u8FED\u4EE3\u5B9E\u73B0\u4E86 Symbol.asyncIterator \u5C5E\u6027\u7684\u5BF9\u8C61.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">generatePromise</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">generatePromise</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">generatePromise</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">generatePromise</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">init</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token keyword">await</span><span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1, 2, 3</span>
        <span class="token function">alert</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="symbol-hasinstance" tabindex="-1"><a class="header-anchor" href="#symbol-hasinstance" aria-hidden="true">#</a> Symbol.hasInstance</h3><p>Symbol.hasInstance\u5C5E\u6027\u8868\u793A\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u51B3\u5B9A\u4E00\u4E2A\u6784\u9020\u5668\u5BF9\u8C61\u662F\u5426\u8BA4\u53EF\u4E00\u4E2A\u5BF9\u8C61\u662F\u5B83\u7684\u5B9E\u4F8B\u3002\u7531instanceof\u64CD\u4F5C\u7B26\u4F7F\u7528\u3002instanceof\u64CD\u4F5C\u7B26\u53EF\u4EE5\u7528\u6765\u786E\u5B9A\u4E00\u4E2A\u5BF9\u8C61 \u5B9E\u4F8B\u7684\u539F\u578B\u94FE\u4E0A\u662F\u5426\u6709\u539F\u578B\u3002instanceof \u7684\u5178\u578B\u4F7F\u7528\u573A\u666F\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f <span class="token keyword">instanceof</span> <span class="token class-name">Foo</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 			<span class="token comment">// true</span>

<span class="token keyword">class</span> <span class="token class-name">Bae</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b <span class="token keyword">instanceof</span> <span class="token class-name">Bar</span><span class="token punctuation">)</span><span class="token punctuation">;</span>			<span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 ES6 \u4E2D\uFF0Cinstanceof \u64CD\u4F5C\u7B26\u4F1A\u4F7F\u7528 Symbol.hasInstance \u51FD\u6570\u6765\u786E\u5B9A\u5173\u7CFB\u3002\u4EE5 Symbol. hasInstance \u4E3A\u952E\u7684\u51FD\u6570\u4F1A\u6267\u884C\u540C\u6837\u7684\u64CD\u4F5C\uFF0C\u53EA\u662F\u64CD\u4F5C\u6570\u5BF9\u8C03\u4E86\u4E00\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Foo<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">]</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token keyword">class</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Bar<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">]</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u5C5E\u6027\u5B9A\u4E49\u5728 Function \u7684\u539F\u578B\u4E0A\uFF0C\u56E0\u6B64\u9ED8\u8BA4\u5728\u6240\u6709\u51FD\u6570\u548C\u7C7B\u4E0A\u90FD\u53EF\u4EE5\u8C03\u7528\u3002\u7531\u4E8E instanceof \u64CD\u4F5C\u7B26\u4F1A\u5728\u539F\u578B\u94FE\u4E0A\u5BFB\u627E\u8FD9\u4E2A\u5C5E\u6027\u5B9A\u4E49\uFF0C\u5C31\u8DDF\u5728\u539F\u578B\u94FE\u4E0A\u5BFB\u627E\u5176\u4ED6\u5C5E\u6027\u4E00\u6837\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5728\u7EE7\u627F\u7684\u7C7B\u4E0A\u901A \u8FC7\u9759\u6001\u65B9\u6CD5\u91CD\u65B0\u5B9A\u4E49\u8FD9\u4E2A\u51FD\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Baz</span> <span class="token keyword">extends</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span>
	<span class="token keyword">static</span> <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 	<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
 	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Bar<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">]</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b <span class="token keyword">instanceof</span> <span class="token class-name">Bar</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Baz<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">]</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b <span class="token keyword">instanceof</span> <span class="token class-name">Baz</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="symbol-isconcatspreadable" tabindex="-1"><a class="header-anchor" href="#symbol-isconcatspreadable" aria-hidden="true">#</a> Symbol.isConcatSpreadable</h3><p>\u8FD9\u4E2A\u7B26\u53F7\u4F5C\u4E3A\u4E00\u4E2A\u5C5E\u6027\u8868\u793A, \u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u5982\u679C\u662Ftrue\uFF0C\u5219\u610F\u5473\u7740\u5BF9\u8C61\u5E94\u8BE5\u7528 Array.prototype.concat() \u6253\u5E73\u5176\u6570\u7EC4\u5143\u7D20\u3002ES6 \u4E2D\u7684 Array.prototype.concat() \u65B9\u6CD5\u4F1A\u6839\u636E\u63A5\u6536\u5230\u7684\u5BF9\u8C61\u7C7B\u578B\u9009\u62E9\u5982\u4F55\u5C06\u4E00\u4E2A\u7C7B\u6570\u7EC4\u5BF9\u8C61\u62FC\u63A5\u6210\u6570\u7EC4\u5B9E\u4F8B\u3002\u8986\u76D6 Symbol.isConcatSpreadable \u7684\u503C\u53EF\u4EE5\u4FEE\u6539\u8FD9\u4E2A\u884C\u4E3A\u3002</p><p>\u5982\u679C\u662Ffalse\uFF0C\u6574\u4E2A\u5BF9\u8C61\u88AB\u8FFD\u52A0\u5230\u6570\u7EC4\u672B\u5C3E\u3002\u7C7B\u6570\u7EC4\u5BF9\u8C61\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u4F1A\u88AB\u8FFD\u52A0\u5230\u6570\u7EC4\u672B\u5C3E\uFF0Ctrue \u6216\u771F\u503C\u4F1A\u5BFC\u81F4\u8FD9\u4E2A\u7C7B\u6570\u7EC4\u5BF9\u8C61\u88AB\u6253\u5E73\u5230\u6570\u7EC4\u5B9E\u4F8B\u3002\u5176\u4ED6\u4E0D\u662F\u7C7B\u6570\u7EC4\u5BF9\u8C61\u7684\u5BF9\u8C61\u5728 Symbol.isConcatSpreadable \u88AB\u8BBE\u7F6E\u4E3A true \u7684\u60C5\u51B5\u4E0B\u5C06\u88AB\u5FFD\u7565\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> initial <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>isConcatSpreadable<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>				<span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>initial<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>aray<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>							<span class="token comment">// [&#39;foo&#39;,&#39;bar&#39;]</span>
array<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>isConcatSpreadable<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>initial<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>							<span class="token comment">// [&#39;foo&#39;,Array(1)]</span>

<span class="token comment">// \u7C7B\u6570\u7EC4\u5BF9\u8C61</span>
<span class="token keyword">let</span> arrayLikeObject <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token string">&#39;baz&#39;</span><span class="token punctuation">}</span>\uFF1B
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arrayLikeObject<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>isConcatSpreadable<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>initial<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arrayLikeObject<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>				<span class="token comment">// [&#39;foo&#39;,{...}]</span>
arrayLikeObject<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>isConcatSpreadable<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>initial<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arrayLikeObject<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>				<span class="token comment">// [&#39;foo&#39;,&#39;baz&#39;]</span>

<span class="token comment">// \u975E\u7C7B\u6570\u7EC4\u5BF9\u8C61\u5728\u4E3A true \u7684\u60C5\u51B5\u4E0B\u88AB\u5FFD\u7565</span>
<span class="token keyword">let</span> otherObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;qux&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>otherObject<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>isConcatSpreadable<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>		<span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>initial<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>otherObject<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>					<span class="token comment">// [&#39;foo&#39;,Set(1)]</span>
otherObject<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>isConcatSpreadable<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>initial<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>otherObject<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>					<span class="token comment">// [&#39;foo&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="symbol-iterator" tabindex="-1"><a class="header-anchor" href="#symbol-iterator" aria-hidden="true">#</a> Symbol.iterator</h3><p>Symbol.iterator \u4F5C\u4E3A\u4E00\u4E2A\u5C5E\u6027\u8868\u793A\u201C\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u8FD4\u56DE\u5BF9\u8C61\u9ED8\u8BA4\u7684\u8FED\u4EE3\u5668\u3002\u7531 for-of \u8BED\u53E5\u4F7F\u7528\u3002</p><p>\u8FD9\u4E2A\u7B26\u53F7\u8868\u793A\u5B9E\u73B0\u8FED\u4EE3\u5668 API \u7684\u51FD\u6570\u3002</p><p>for-of \u5FAA\u73AF\u8FD9\u6837\u7684\u8BED\u8A00\u7ED3\u6784\u4F1A\u5229\u7528\u8FD9\u4E2A\u51FD\u6570\u6267\u884C\u8FED\u4EE3\u64CD\u4F5C\u3002\u5FAA\u73AF\u65F6\uFF0C\u5B83\u4EEC\u4F1A\u8C03\u7528\u4EE5 Symbol.iterator \u4E3A\u952E\u7684\u51FD\u6570\uFF0C\u5E76\u9ED8\u8BA4\u8FD9\u4E2A\u51FD\u6570\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u5B9E\u73B0\u8FED\u4EE3\u5668 API \u7684\u5BF9\u8C61\u3002\u5F88\u591A\u65F6\u5019\uFF0C\u8FD4\u56DE\u7684\u5BF9\u8C61\u662F\u5B9E\u73B0\u8BE5 API \u7684 Generator\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
 <span class="token operator">*</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Generator {&lt;suspended&gt;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Symbol.iterator()\u4F1A\u8FD4\u56DE\u5B9E\u73B0\u4E86\u8FED\u4EE3\u5668API\u7684\u5BF9\u8C61\uFF08\u7C7B\u4F3C <code>{ done: true, value: &#39;data&#39; }</code>\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
obj<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1, 2, 3</span>
        <span class="token function">alert</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="symbol-match" tabindex="-1"><a class="header-anchor" href="#symbol-match" aria-hidden="true">#</a> Symbol.match</h3><p>Symbol.match \u4F5C\u4E3A\u4E00\u4E2A\u5C5E\u6027\u8868\u793A \u201C\u4E00\u4E2A\u6B63\u5219\u8868\u8FBE\u5F0F\u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u7528\u6B63\u5219\u8868\u8FBE\u5F0F\u53BB\u5339\u914D\u5B57\u7B26\u4E32\u3002\u7531 String.prototype.match() \u65B9\u6CD5\u4F7F\u7528\u201C</p><p>String.prototype.match()\u65B9\u6CD5\u4F1A\u4F7F \u7528\u4EE5 Symbol.match \u4E3A\u952E\u7684\u51FD\u6570\u6765\u5BF9\u6B63\u5219\u8868\u8FBE\u5F0F\u6C42\u503C\u3002\u6B63\u5219\u8868\u8FBE\u5F0F\u7684\u539F\u578B\u4E0A\u9ED8\u8BA4\u6709\u8FD9\u4E2A\u51FD\u6570\u7684\u5B9A\u4E49\uFF0C \u56E0\u6B64\u6240\u6709\u6B63\u5219\u8868\u8FBE\u5F0F\u5B9E\u4F8B\u9ED8\u8BA4\u662F\u8FD9\u4E2A String \u65B9\u6CD5\u7684\u6709\u6548\u53C2\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">RegExp</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>match<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u0192 [Symbol.match]() { [native code] }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;foobar&#39;</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">bar</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [&quot;bar&quot;, index: 3, input: &quot;foobar&quot;, groups: undefined] </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED9\u8FD9\u4E2A\u65B9\u6CD5\u4F20\u5165\u975E\u6B63\u5219\u8868\u8FBE\u5F0F\u503C\u4F1A\u5BFC\u81F4\u8BE5\u503C\u88AB\u8F6C\u6362\u4E3A RegExp \u5BF9\u8C61\u3002\u5982\u679C\u60F3\u6539\u53D8\u8FD9\u79CD\u884C\u4E3A\uFF0C\u8BA9\u65B9\u6CD5\u76F4\u63A5\u4F7F\u7528\u53C2\u6570\uFF0C\u5219\u53EF\u4EE5\u91CD\u65B0\u5B9A\u4E49 Symbol.match \u51FD\u6570\u4EE5\u53D6\u4EE3\u9ED8\u8BA4\u5BF9\u6B63\u5219\u8868\u8FBE\u5F0F\u6C42\u503C\u7684\u884C\u4E3A\uFF0C\u4ECE\u800C\u8BA9 match() \u65B9\u6CD5\u4F7F\u7528\u975E\u6B63\u5219\u8868\u8FBE\u5F0F\u5B9E\u4F8B\u3002Symbol.match \u51FD\u6570\u63A5\u6536\u4E00\u4E2A\u53C2\u6570\uFF0C\u5C31\u662F\u8C03\u7528 match() \u65B9\u6CD5\u7684\u5B57\u7B26\u4E32\u5B9E\u4F8B\u3002\u8FD4\u56DE\u7684\u503C\u6CA1\u6709\u9650\u5236\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">FooMatcher</span> <span class="token punctuation">{</span>
	<span class="token keyword">static</span> <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>match<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 		<span class="token keyword">return</span> target<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;foobar&#39;</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>FooMatcher<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;barbaz&#39;</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>FooMatcher<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token keyword">class</span> <span class="token class-name">StringMatcher</span> <span class="token punctuation">{</span>
 	<span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 		<span class="token keyword">this</span><span class="token punctuation">.</span>str <span class="token operator">=</span> str<span class="token punctuation">;</span>
 	<span class="token punctuation">}</span>
 	<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>match<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 		<span class="token keyword">return</span> target<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
 	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;foobar&#39;</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringMatcher</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;barbaz&#39;</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringMatcher</span><span class="token punctuation">(</span><span class="token string">&#39;qux&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container note"><p class="custom-container-title">\u4E2A\u4EBA\u7406\u89E3</p><p>\u200B \u5982\u679C\u80FD\u5728\u76EE\u6807\u4E2D\u627E\u5230\u4F20\u5165\u7684\u53D8\u91CF\uFF0C\u5219\u8FD4\u56DE true</p></div><h3 id="symbol-replace" tabindex="-1"><a class="header-anchor" href="#symbol-replace" aria-hidden="true">#</a> Symbol.replace</h3><p>Symbol.replace \u4F5C\u4E3A\u4E00\u4E2A\u5C5E\u6027\u8868\u793A \u201C\u4E00\u4E2A\u6B63\u5219\u8868\u8FBE\u5F0F\u65B9\u6CD5\uFF0C</p>`,82);function g(f,y){const t=l("ExternalLinkIcon");return e(),o("div",null,[u,n("ul",null,[r,n("li",null,[k,n("ul",null,[d,n("li",null,[n("a",m,[v,c(t)])])])])]),b])}var j=p(i,[["render",g],["__file","\u8BED\u8A00\u57FA\u7840.html.vue"]]);export{j as default};
