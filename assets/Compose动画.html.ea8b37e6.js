import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";import{r as p,o as i,c,a as n,d as e,F as l,b as s,e as a}from"./app.7889e42c.js";const u={},r=n("h2",{id:"\u53EF\u89C1\u6027\u52A8\u753B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u53EF\u89C1\u6027\u52A8\u753B","aria-hidden":"true"},"#"),s(" \u53EF\u89C1\u6027\u52A8\u753B")],-1),d=a(`<li><p>\u5728\u4EE5\u5F80\u7684 Android \u5F00\u53D1\u4E2D\uFF0C\u5982\u679C\u6211\u4EEC\u9700\u8981\u63A7\u5236\u67D0\u4E2A\u63A7\u4EF6\u7684\u53EF\u89C1\u6027\uFF0C\u5219\u5F80\u5F80\u9700\u8981\u4ECE\u5176 alpha\u3001transition\u3001scale\u7B49\u914D\u5408\u6765\u5B9E\u73B0\uFF0C\u4F46\u5728 Compose \u4E2D\uFF0C\u5219\u53EF\u4EE5\u7528\u5176\u63D0\u4F9B\u7684 <code>AnimatedVisibility()</code>\u53EF\u7EC4\u5408\u9879\u6765\u5B9E\u73B0</p></li><li><p>\u4E0B\u9762\u7ED9\u51FA\u5176\u7B80\u5355\u7684\u4F7F\u7528\u793A\u4F8B\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Preview</span>
<span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> <span class="token function">AnimationTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">val</span> visible <span class="token operator">=</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token function">Column</span> <span class="token punctuation">(</span>modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">360</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">Button</span><span class="token punctuation">(</span>onClick <span class="token operator">=</span> <span class="token punctuation">{</span>visible<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token operator">!</span>visible<span class="token punctuation">.</span>value<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;\u53EF\u89C1\u6027\u52A8\u753B&quot;</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token function">AnimatedVisibility</span><span class="token punctuation">(</span>visible <span class="token operator">=</span> visible<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">Text</span><span class="token punctuation">(</span>
                text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;\u4E09\u751F\u4E09\u4E16\u5341\u91CC\u6843\u82B1&quot;</span></span><span class="token punctuation">,</span>
                modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">.</span>dp
                <span class="token punctuation">)</span>
            <span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6765\u770B\u770B\u6548\u679C\uFF1A</p><p><img src="https://raw.githubusercontent.com/CoderWDD/myImages/main/blog_images/VeryCapture_20220608161718.gif" alt="" loading="lazy"></p><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u901A\u8FC7\u70B9\u51FB\u6309\u94AE\uFF0C\u5B9E\u73B0\u4E86 <code>Text</code> \u7684\u6E10\u5165\u6E10\u51FA\u6548\u679C\u3002</p></li><li><p>\u6765\u770B\u770B<code>AnimatedVisibility()</code>\u65B9\u6CD5\u7684\u5B9A\u4E49\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> ColumnScope<span class="token punctuation">.</span><span class="token function">AnimatedVisibility</span><span class="token punctuation">(</span>
    visible<span class="token operator">:</span> Boolean<span class="token punctuation">,</span>	<span class="token comment">// \u662F\u5426\u53EF\u89C1</span>
    modifier<span class="token operator">:</span> Modifier <span class="token operator">=</span> Modifier<span class="token punctuation">,</span>
    enter<span class="token operator">:</span> EnterTransition <span class="token operator">=</span> <span class="token function">fadeIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">expandVertically</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>	<span class="token comment">// \u663E\u793A\u7684\u52A8\u753B\uFF0C\u9ED8\u8BA4\u4E3A\u6E10\u5165</span>
    exit<span class="token operator">:</span> ExitTransition <span class="token operator">=</span> <span class="token function">fadeOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">shrinkVertically</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>	<span class="token comment">// \u9000\u51FA\u7684\u52A8\u753B\uFF0C\u9ED8\u8BA4\u4E3A\u6E10\u51FA</span>
    label<span class="token operator">:</span> String <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;AnimatedVisibility&quot;</span></span><span class="token punctuation">,</span>
    content<span class="token operator">:</span> <span class="token annotation builtin">@Composable</span> AnimatedVisibilityScope<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> transition <span class="token operator">=</span> <span class="token function">updateTransition</span><span class="token punctuation">(</span>visible<span class="token punctuation">,</span> label<span class="token punctuation">)</span>
    <span class="token function">AnimatedEnterExitImpl</span><span class="token punctuation">(</span>transition<span class="token punctuation">,</span> <span class="token punctuation">{</span> it <span class="token punctuation">}</span><span class="token punctuation">,</span> modifier<span class="token punctuation">,</span> enter<span class="token punctuation">,</span> exit<span class="token punctuation">,</span> content<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u53EA\u6709\u53C2\u6570 enter \u548C exit \u7684\u7C7B\u578B\u662F\u4E4B\u524D\u6CA1\u9047\u5230\u8FC7\u7684\uFF0C\u5206\u522B\u4E3A <code>EnterTransition</code> \u548C <code>ExitTransition</code></p></li><li><p>\u63A5\u4E0B\u6765\u5C31\u770B\u770B <code>EnterTransition</code> \u7684\u6E90\u7801\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Immutable</span>
<span class="token keyword">sealed</span> <span class="token keyword">class</span> EnterTransition <span class="token punctuation">{</span>
    <span class="token keyword">internal</span> <span class="token keyword">abstract</span> <span class="token keyword">val</span> <span class="token keyword">data</span><span class="token operator">:</span> TransitionData

    <span class="token comment">// \u7EC4\u5408\u4E0D\u540C\u7684\u8F93\u5165\u52A8\u753B</span>
    <span class="token annotation builtin">@Stable</span>
    <span class="token keyword">operator</span> <span class="token keyword">fun</span> <span class="token function">plus</span><span class="token punctuation">(</span>enter<span class="token operator">:</span> EnterTransition<span class="token punctuation">)</span><span class="token operator">:</span> EnterTransition <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">EnterTransitionImpl</span><span class="token punctuation">(</span>
            <span class="token function">TransitionData</span><span class="token punctuation">(</span>
                fade <span class="token operator">=</span> <span class="token keyword">data</span><span class="token punctuation">.</span>fade <span class="token operator">?:</span> enter<span class="token punctuation">.</span>data<span class="token punctuation">.</span>fade<span class="token punctuation">,</span>
                slide <span class="token operator">=</span> <span class="token keyword">data</span><span class="token punctuation">.</span>slide <span class="token operator">?:</span> enter<span class="token punctuation">.</span>data<span class="token punctuation">.</span>slide<span class="token punctuation">,</span>
                changeSize <span class="token operator">=</span> <span class="token keyword">data</span><span class="token punctuation">.</span>changeSize <span class="token operator">?:</span> enter<span class="token punctuation">.</span>data<span class="token punctuation">.</span>changeSize<span class="token punctuation">,</span>
                scale <span class="token operator">=</span> <span class="token keyword">data</span><span class="token punctuation">.</span>scale <span class="token operator">?:</span> enter<span class="token punctuation">.</span>data<span class="token punctuation">.</span>scale
            <span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">equals</span><span class="token punctuation">(</span>other<span class="token operator">:</span> Any<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">{</span>
        <span class="token keyword">return</span> other <span class="token keyword">is</span> EnterTransition <span class="token operator">&amp;&amp;</span> other<span class="token punctuation">.</span>data <span class="token operator">==</span> <span class="token keyword">data</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Int <span class="token operator">=</span> <span class="token keyword">data</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">companion</span> <span class="token keyword">object</span> <span class="token punctuation">{</span>
        <span class="token keyword">val</span> None<span class="token operator">:</span> EnterTransition <span class="token operator">=</span> <span class="token function">EnterTransitionImpl</span><span class="token punctuation">(</span><span class="token function">TransitionData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7531\u6E90\u7801\u53EF\u4EE5\u770B\u51FA\uFF0C\u8FD9\u662F\u4E00\u4E2A<strong>\u5BC6\u5C01\u7C7B</strong>\uFF0C\u4E14\u5176\u91CD\u8F7D\u4E86 <code>+</code> \u8FD0\u7B97\u7B26\uFF0C\u7528\u4E8E\u5C06\u4E0D\u540C\u7684\u52A8\u753B\u7EC4\u5408\u5230\u4E00\u8D77</p></li><li><p>\u518D\u6765\u770B\u770B <code>ExitTransition</code> \u7684\u6E90\u7801\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Immutable</span>
<span class="token keyword">sealed</span> <span class="token keyword">class</span> ExitTransition <span class="token punctuation">{</span>
    <span class="token keyword">internal</span> <span class="token keyword">abstract</span> <span class="token keyword">val</span> <span class="token keyword">data</span><span class="token operator">:</span> TransitionData

    <span class="token comment">// \u7EC4\u5408\u4E0D\u540C\u7684\u8F93\u5165\u52A8\u753B</span>
    <span class="token annotation builtin">@Stable</span>
    <span class="token keyword">operator</span> <span class="token keyword">fun</span> <span class="token function">plus</span><span class="token punctuation">(</span>exit<span class="token operator">:</span> ExitTransition<span class="token punctuation">)</span><span class="token operator">:</span> ExitTransition <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">ExitTransitionImpl</span><span class="token punctuation">(</span>
            <span class="token function">TransitionData</span><span class="token punctuation">(</span>
                fade <span class="token operator">=</span> <span class="token keyword">data</span><span class="token punctuation">.</span>fade <span class="token operator">?:</span> exit<span class="token punctuation">.</span>data<span class="token punctuation">.</span>fade<span class="token punctuation">,</span>
                slide <span class="token operator">=</span> <span class="token keyword">data</span><span class="token punctuation">.</span>slide <span class="token operator">?:</span> exit<span class="token punctuation">.</span>data<span class="token punctuation">.</span>slide<span class="token punctuation">,</span>
                changeSize <span class="token operator">=</span> <span class="token keyword">data</span><span class="token punctuation">.</span>changeSize <span class="token operator">?:</span> exit<span class="token punctuation">.</span>data<span class="token punctuation">.</span>changeSize<span class="token punctuation">,</span>
                scale <span class="token operator">=</span> <span class="token keyword">data</span><span class="token punctuation">.</span>scale <span class="token operator">?:</span> exit<span class="token punctuation">.</span>data<span class="token punctuation">.</span>scale
            <span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">equals</span><span class="token punctuation">(</span>other<span class="token operator">:</span> Any<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">{</span>
        <span class="token keyword">return</span> other <span class="token keyword">is</span> ExitTransition <span class="token operator">&amp;&amp;</span> other<span class="token punctuation">.</span>data <span class="token operator">==</span> <span class="token keyword">data</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Int <span class="token operator">=</span> <span class="token keyword">data</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">companion</span> <span class="token keyword">object</span> <span class="token punctuation">{</span>
        <span class="token keyword">val</span> None<span class="token operator">:</span> ExitTransition <span class="token operator">=</span> <span class="token function">ExitTransitionImpl</span><span class="token punctuation">(</span><span class="token function">TransitionData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0E <code>EnterTransition</code> \u7C7B\u4F3C\uFF0C<code>ExitTransition</code> \u4E5F\u662F\u4E00\u4E2A<strong>\u5BC6\u5C01\u7C7B</strong>\uFF0C\u4E5F\u91CD\u8F7D\u4E86 <code>+</code> \u8FD0\u7B97\u7B26\uFF0C\u4E5F\u662F\u7528\u4E8E\u5C06\u4E0D\u540C\u7684\u52A8\u753B\u7EC4\u5408\u5230\u4E00\u8D77</p></li>`,5),k=s("\u65E2\u7136\u662F\u52A8\u753B\uFF0C\u90A3\u5C31\u80AF\u5B9A\u4E0D\u6B62\u4E00\u79CD\u52A8\u753B\u4E86\uFF0C\u4E0B\u9762\u5C31\u6765\u770B\u770B "),v=n("code",null,"EnterTransition",-1),m=s(" \u548C "),b=n("code",null,"ExitTransition",-1),g=s(" \u90FD\u5206\u522B\u652F\u6301\u54EA\u4E9B\u52A8\u753B\uFF0C\u5982\u679C\u60F3\u770B\u66F4\u5177\u4F53\u7684\u5B9A\u4E49\uFF0C\u53EF\u4EE5\u5230 "),f=n("code",null,"EnterExitTransition.kt",-1),h=s(" \u6587\u4EF6\u4E2D\u67E5\u770B\uFF0C\u5177\u4F53\u7684\u52A8\u753B\u6548\u679C\uFF0C\u53EF\u4EE5\u53C2\u8003"),y={href:"https://developer.android.google.cn/jetpack/compose/animation?authuser=0#entertransition",target:"_blank",rel:"noopener noreferrer"},w=s("\u5B98\u65B9\u793A\u4F8B"),_=s("\uFF0C\u503C\u5F97\u6CE8\u610F\u7684\u662F\uFF0C\u8FD9\u4E9B\u52A8\u753B\uFF0C\u90FD\u662F\u53EF\u4EE5\u968F\u610F\u7EC4\u5408\u7684\uFF1A"),S=a("<ul><li><code>EnterTransition</code>: <ul><li>fade: <code>fadeIn</code></li><li>scale: <code>scaleIn</code></li><li>slide: <code>slideIn</code>, <code>slideInHorizontally</code>, <code>slideInVertically</code></li><li>expand: <code>expandIn</code>, <code>expandHorizontally</code>, <code>expandVertically</code></li></ul></li><li><code>ExitTransition</code>: <ul><li>fade: <code>fadeOut</code></li><li>scale: <code>scaleOut</code></li><li>slide: <code>slideOut</code>, <code>slideOutHorizontally</code>, <code>slideOutVertically</code></li><li>shrink: <code>shrinkOut</code>, <code>shrinkHorizontally</code>,<code>shrinkVertically</code></li></ul></li></ul>",1),x=n("p",null,"\u4E3A\u5B50\u9879\u6DFB\u52A0\u8FDB\u5165\u548C\u9000\u51FA\u52A8\u753B\u6548\u679C",-1),T=n("code",null,"AnimatedVisibility",-1),C=s("\uFF08\u76F4\u63A5\u6216\u95F4\u63A5\u5B50\u9879\uFF09\u4E2D\u7684\u5185\u5BB9\u53EF\u4EE5\u4F7F\u7528 "),A={href:"https://developer.android.google.cn/reference/kotlin/androidx/compose/animation/AnimatedVisibilityScope?authuser=0#(androidx.compose.ui.Modifier).animateEnterExit(androidx.compose.animation.EnterTransition,androidx.compose.animation.ExitTransition,kotlin.String)",target:"_blank",rel:"noopener noreferrer"},D=n("code",null,"animateEnterExit",-1),V=s(" \u4FEE\u9970\u7B26\u4E3A\u6BCF\u4E2A\u5B50\u9879\u6307\u5B9A\u4E0D\u540C\u7684\u52A8\u753B\u884C\u4E3A\u3002\u5176\u4E2D\u6BCF\u4E2A\u5B50\u9879\u7684\u89C6\u89C9\u6548\u679C\u5747\u7531 "),M=n("code",null,"AnimatedVisibility",-1),I=s(" \u53EF\u7EC4\u5408\u9879\u4E2D\u6307\u5B9A\u7684\u52A8\u753B\u4E0E\u5B50\u9879\u81EA\u5DF1\u7684\u8FDB\u5165\u548C\u9000\u51FA\u52A8\u753B\u6784\u6210\u3002"),z=a(`<div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Preview</span>
<span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> <span class="token function">AnimationTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">val</span> visible <span class="token operator">=</span> remember <span class="token punctuation">{</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
    <span class="token function">AnimatedVisibility</span><span class="token punctuation">(</span>
        visible <span class="token operator">=</span> visible<span class="token punctuation">,</span>
        enter <span class="token operator">=</span> <span class="token function">fadeIn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        exit <span class="token operator">=</span> <span class="token function">fadeOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Fade in/out the background and the foreground.</span>
        <span class="token function">Box</span><span class="token punctuation">(</span>Modifier<span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>DarkGray<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">Box</span><span class="token punctuation">(</span>
                Modifier
                    <span class="token punctuation">.</span><span class="token function">align</span><span class="token punctuation">(</span>Alignment<span class="token punctuation">.</span>Center<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">animateEnterExit</span><span class="token punctuation">(</span>
                        <span class="token comment">// Slide in/out the inner box.</span>
                        enter <span class="token operator">=</span> <span class="token function">slideInVertically</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                        exit <span class="token operator">=</span> <span class="token function">slideOutVertically</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">sizeIn</span><span class="token punctuation">(</span>minWidth <span class="token operator">=</span> <span class="token number">256</span><span class="token punctuation">.</span>dp<span class="token punctuation">,</span> minHeight <span class="token operator">=</span> <span class="token number">64</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Red<span class="token punctuation">)</span>
            <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// Content of the notification\u2026</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),E=a(`<h2 id="\u5E03\u5C40\u5927\u5C0F\u52A8\u753B" tabindex="-1"><a class="header-anchor" href="#\u5E03\u5C40\u5927\u5C0F\u52A8\u753B" aria-hidden="true">#</a> \u5E03\u5C40\u5927\u5C0F\u52A8\u753B</h2><ul><li><p>\u5F15\u5165\uFF1A\u5982\u679C\u6211\u4EEC\u5E0C\u671B\u5728\u4E00\u4E2A\u5E03\u5C40\u5927\u5C0F\u53D1\u751F\u6539\u53D8\u65F6\uFF0C\u53EF\u4EE5\u6709\u4E00\u4E2A\u52A8\u753B\u4F5C\u4E3A\u8FC7\u6E21\uFF0C\u6B64\u65F6\u5C31\u9700\u8981\u6211\u4EEC\u7684\u5E03\u5C40\u5927\u5C0F\u52A8\u753B\u4E86\uFF0C\u5176\u4F5C\u7528\u662F\uFF0C\u5F53\u5E03\u5C40\u7684\u5927\u5C0F\u53D1\u751F\u6539\u53D8\u65F6\uFF0C\u80FD\u6709\u4E00\u4E2A\u8FC7\u6E21\u7684\u52A8\u753B\u6548\u679C\uFF1A</p><ul><li><p>\u5148\u6765\u770B\u770B\u6CA1\u6709\u8FC7\u6E21\u52A8\u753B\u7684\u4F8B\u5B50\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Preview</span>
<span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> <span class="token function">AnimationTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">val</span> expand <span class="token operator">=</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token function">Column</span><span class="token punctuation">(</span>
        modifier <span class="token operator">=</span> Modifier
            <span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">Text</span><span class="token punctuation">(</span>
            text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u521D\u59CB\u5185\u5BB9\u6DE1\u51FA\uFF0C\u7136\u540E\u76EE\u6807\u5185\u5BB9\u6DE1\u5165\uFF08\u6B64\u884C\u4E3A\u79F0\u4E3A\u6DE1\u51FA\u540E\u6DE1\u5165\uFF09\u3002&quot;</span></span> <span class="token operator">+</span>
                    <span class="token string-literal singleline"><span class="token string">&quot;\u60A8\u53EF\u4EE5\u4E3A transitionSpec \u53C2\u6570\u6307\u5B9A ContentTransform \u5BF9\u8C61\uFF0C\u4EE5\u81EA&quot;</span></span> <span class="token operator">+</span>
                    <span class="token string-literal singleline"><span class="token string">&quot;\u5B9A\u4E49\u6B64\u52A8\u753B\u884C\u4E3A\u3002\u60A8\u53EF\u4EE5\u4F7F\u7528 with infix \u51FD\u6570\u6765\u7EC4\u5408 EnterTransition \u4E0E &quot;</span></span> <span class="token operator">+</span>
                    <span class="token string-literal singleline"><span class="token string">&quot;ExitTransition\uFF0C\u4EE5\u521B\u5EFA ContentTransform\u3002\u60A8\u53EF\u4EE5\u5C06 SizeTransform &quot;</span></span> <span class="token operator">+</span>
                    <span class="token string-literal singleline"><span class="token string">&quot;\u5E94\u7528\u4E8E ContentTransform\uFF0C\u65B9\u6CD5\u662F\u4F7F\u7528 using infix \u51FD\u6570\u9644\u52A0\u8BE5\u4FEE\u9970\u7B26\u3002&quot;</span></span><span class="token punctuation">,</span>
            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">//.animateContentSize(), // \u5173\u952E\u5C5E\u6027\uFF0C\u7ED9\u5185\u5BB9\u53D8\u5316\u6DFB\u52A0\u52A8\u753B</span>
            maxLines <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>expand<span class="token punctuation">.</span>value<span class="token punctuation">)</span> Int<span class="token punctuation">.</span>MAX_VALUE <span class="token keyword">else</span> <span class="token number">1</span> <span class="token comment">// \u6839\u636E\u662F\u5426\u5C55\u5F00\u8BBE\u7F6E\u6700\u5927\u884C\u6570</span>
        <span class="token punctuation">)</span>

        <span class="token function">Button</span><span class="token punctuation">(</span>onClick <span class="token operator">=</span> <span class="token punctuation">{</span> expand<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token operator">!</span>expand<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">Text</span><span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span>expand<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token string-literal singleline"><span class="token string">&quot;\u6536\u8D77&quot;</span></span> <span class="token keyword">else</span> <span class="token string-literal singleline"><span class="token string">&quot;\u5168\u6587&quot;</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u770B\u770B\u6548\u679C\uFF1A</p><p><img src="https://raw.githubusercontent.com/CoderWDD/myImages/main/blog_images/VeryCapture_20220608174713.gif" alt="" loading="lazy"></p></li><li><p>\u518D\u6765\u770B\u770B\u6DFB\u52A0\u4E86\u5E03\u5C40\u5927\u5C0F\u52A8\u753B\u7684\u6548\u679C\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Preview</span>
<span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> <span class="token function">AnimationTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">val</span> expand <span class="token operator">=</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token function">Column</span><span class="token punctuation">(</span>
        modifier <span class="token operator">=</span> Modifier
            <span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">Text</span><span class="token punctuation">(</span>
            text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u521D\u59CB\u5185\u5BB9\u6DE1\u51FA\uFF0C\u7136\u540E\u76EE\u6807\u5185\u5BB9\u6DE1\u5165\uFF08\u6B64\u884C\u4E3A\u79F0\u4E3A\u6DE1\u51FA\u540E\u6DE1\u5165\uFF09\u3002&quot;</span></span> <span class="token operator">+</span>
                    <span class="token string-literal singleline"><span class="token string">&quot;\u60A8\u53EF\u4EE5\u4E3A transitionSpec \u53C2\u6570\u6307\u5B9A ContentTransform \u5BF9\u8C61\uFF0C\u4EE5\u81EA&quot;</span></span> <span class="token operator">+</span>
                    <span class="token string-literal singleline"><span class="token string">&quot;\u5B9A\u4E49\u6B64\u52A8\u753B\u884C\u4E3A\u3002\u60A8\u53EF\u4EE5\u4F7F\u7528 with infix \u51FD\u6570\u6765\u7EC4\u5408 EnterTransition \u4E0E &quot;</span></span> <span class="token operator">+</span>
                    <span class="token string-literal singleline"><span class="token string">&quot;ExitTransition\uFF0C\u4EE5\u521B\u5EFA ContentTransform\u3002\u60A8\u53EF\u4EE5\u5C06 SizeTransform &quot;</span></span> <span class="token operator">+</span>
                    <span class="token string-literal singleline"><span class="token string">&quot;\u5E94\u7528\u4E8E ContentTransform\uFF0C\u65B9\u6CD5\u662F\u4F7F\u7528 using infix \u51FD\u6570\u9644\u52A0\u8BE5\u4FEE\u9970\u7B26\u3002&quot;</span></span><span class="token punctuation">,</span>
            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">animateContentSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// \u5173\u952E\u5C5E\u6027\uFF0C\u7ED9\u5185\u5BB9\u53D8\u5316\u6DFB\u52A0\u52A8\u753B</span>
            maxLines <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>expand<span class="token punctuation">.</span>value<span class="token punctuation">)</span> Int<span class="token punctuation">.</span>MAX_VALUE <span class="token keyword">else</span> <span class="token number">1</span> <span class="token comment">// \u6839\u636E\u662F\u5426\u5C55\u5F00\u8BBE\u7F6E\u6700\u5927\u884C\u6570</span>
        <span class="token punctuation">)</span>

        <span class="token function">Button</span><span class="token punctuation">(</span>onClick <span class="token operator">=</span> <span class="token punctuation">{</span> expand<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token operator">!</span>expand<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">Text</span><span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span>expand<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token string-literal singleline"><span class="token string">&quot;\u6536\u8D77&quot;</span></span> <span class="token keyword">else</span> <span class="token string-literal singleline"><span class="token string">&quot;\u5168\u6587&quot;</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u770B\u770B\u6548\u679C\uFF1A</p><p><img src="https://raw.githubusercontent.com/CoderWDD/myImages/main/blog_images/VeryCapture_20220608175032.gif" alt="" loading="lazy"></p></li></ul></li><li><p>\u4E0B\u9762\u770B\u770B <code>animateContentSize</code> \u7684\u5B9A\u4E49\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">fun</span> Modifier<span class="token punctuation">.</span><span class="token function">animateContentSize</span><span class="token punctuation">(</span>
    animationSpec<span class="token operator">:</span> FiniteAnimationSpec<span class="token operator">&lt;</span>IntSize<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token function">spring</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    finishedListener<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>initialValue<span class="token operator">:</span> IntSize<span class="token punctuation">,</span> targetValue<span class="token operator">:</span> IntSize<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit<span class="token punctuation">)</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token keyword">null</span>
<span class="token punctuation">)</span><span class="token operator">:</span> Modifier <span class="token operator">=</span> <span class="token function">composed</span><span class="token punctuation">(</span>
    inspectorInfo <span class="token operator">=</span> debugInspectorInfo <span class="token punctuation">{</span>
        name <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;animateContentSize&quot;</span></span>
        properties<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;animationSpec&quot;</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> animationSpec
        properties<span class="token punctuation">[</span><span class="token string-literal singleline"><span class="token string">&quot;finishedListener&quot;</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> finishedListener
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// TODO: Listener could be a fun interface after 1.4</span>
    <span class="token keyword">val</span> scope <span class="token operator">=</span> <span class="token function">rememberCoroutineScope</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">val</span> animModifier <span class="token operator">=</span> <span class="token function">remember</span><span class="token punctuation">(</span>scope<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">SizeAnimationModifier</span><span class="token punctuation">(</span>animationSpec<span class="token punctuation">,</span> scope<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    animModifier<span class="token punctuation">.</span>listener <span class="token operator">=</span> finishedListener
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">clipToBounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>animModifier<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230 <code>animateContentSize</code> \u5176\u5B9E\u662F <code>Modifier</code> \u7684\u4E00\u4E2A\u6269\u5C55\u65B9\u6CD5\uFF0C\u5176\u4E2D\u53C2\u6570 <code>animationSpec</code> \u662F\u8868\u793A\u7528\u4E8E\u52A8\u753B\u5C3A\u5BF8\u5927\u5C0F\u53D8\u5316\u7684\u52A8\u753B\uFF1B\u800C <code>finishedListener</code> \u5219\u662F\u4E00\u4E2A\u76D1\u542C\u5668\uFF0C\u5373\u5F53\u5E03\u5C40\u5927\u5C0F\u66F4\u6539\u52A8\u753B\u5B8C\u6210\u540E\u8FDB\u884C\u56DE\u8C03\uFF0C\u540C\u65F6\u5C06\u521D\u59CB\u503C\uFF08\u5373\u5F00\u59CB\u65F6\u7684\u5E03\u5C40\u5927\u5C0F\uFF09\u548C\u76EE\u6807\u503C\uFF08\u5373\u6700\u7EC8\u7684\u5E03\u5C40\u5927\u5C0F\uFF09\u4E5F\u4F20\u8FC7\u6765</p></li><li><p>\u518D\u770B\u5230\u4E0A\u9762 <code>animateContentSize</code> \u7684\u5B9A\u4E49\uFF0C\u5176\u4E2D <code>animationSpec</code> \u7684\u9ED8\u8BA4\u503C\u4E3A <code>spring()</code>\uFF0C\u800C <code>animationSpec</code> \u53C8\u662F\u7528\u4E8E\u5E03\u5C40\u5927\u5C0F\u53D8\u5316\u7684\u52A8\u753B\uFF0C\u56E0\u6B64\uFF0C\u5F88\u6709\u5FC5\u8981\u6765\u770B\u770B <code>spring()</code> \u7684\u6E90\u7801\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Stable</span>
<span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">&gt;</span> <span class="token function">spring</span><span class="token punctuation">(</span>
    dampingRatio<span class="token operator">:</span> Float <span class="token operator">=</span> Spring<span class="token punctuation">.</span>DampingRatioNoBouncy<span class="token punctuation">,</span>	<span class="token comment">// \u963B\u5C3C\u7CFB\u6570\uFF0C\u503C\u8D8A\u5C0F\uFF0C\u5F39\u529B\u8D8A\u5927\uFF0C\u5F39\u7C27\u6548\u679C\u8D8A\u660E\u663E\uFF0C\u9ED8\u8BA4\u65E0\u5F39\u529B</span>
    stiffness<span class="token operator">:</span> Float <span class="token operator">=</span> Spring<span class="token punctuation">.</span>StiffnessMedium<span class="token punctuation">,</span>	<span class="token comment">// \u8870\u51CF\u7CFB\u6570\uFF0C\u503C\u8D8A\u5927\uFF0C\u8870\u51CF\u7684\u8D8A\u5FEB\uFF0C\u4E5F\u5C31\u662F\u6298\u53E0\u7684\u901F\u5EA6\u8D8A\u5FEB\uFF0C\u9ED8\u8BA4\u8870\u51CF\u7CFB\u6570\u4E3A&quot;\u4E2D&quot;</span>
    visibilityThreshold<span class="token operator">:</span> T<span class="token operator">?</span> <span class="token operator">=</span> <span class="token keyword">null</span>	<span class="token comment">// \u53EF\u89C1\u6027\u9600\u503C\uFF0C\u5373\u51B3\u5B9A\u5176\u5230\u54EA\u91CC\u4F1A\u505C\u6B62\u52A8\u753B\u7684\u5206\u5272\u7EBF</span>
<span class="token punctuation">)</span><span class="token operator">:</span> SpringSpec<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span> <span class="token operator">=</span>
    <span class="token function">SpringSpec</span><span class="token punctuation">(</span>dampingRatio<span class="token punctuation">,</span> stiffness<span class="token punctuation">,</span> visibilityThreshold<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6240\u4EE5\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5BF9 <code>spring()</code> \u8FDB\u884C\u4E00\u4E9B\u5B9A\u5236\uFF0C\u4EE5\u5B9E\u73B0\u6539\u53D8\u5176\u52A8\u753B\u8FC7\u7A0B\u4E2D\u7684\u53C2\u6570</p></li></ul><h2 id="\u5E03\u5C40\u5207\u6362\u52A8\u753B" tabindex="-1"><a class="header-anchor" href="#\u5E03\u5C40\u5207\u6362\u52A8\u753B" aria-hidden="true">#</a> \u5E03\u5C40\u5207\u6362\u52A8\u753B</h2>`,3),q=a(`<li><p>\u5F15\u5165\uFF1A\u5F53\u5E03\u5C40\u53D1\u751F\u5207\u6362\u65F6\uFF0C\u5982\u679C\u8981\u901A\u8FC7\u52A8\u753B\u8FC7\u6E21\u5E94\u8BE5\u600E\u4E48\u529E\uFF1F\u8FD9\u65F6\u5019\u5C31\u53EF\u4EE5\u7528\u5230 Compose \u4E2D\u7684\u5E03\u5C40\u5207\u6362\u52A8\u753B <code>Crossfade</code>\uFF0C\u4ECE\u800C\u5B9E\u73B0\u6DE1\u5165\u6DE1\u51FA\u4E0D\u540C\u5E03\u5C40\u7684\u6548\u679C</p></li><li><p><code>Crossfade</code>\u7684\u65B9\u6CD5\u5B9A\u4E49\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">&gt;</span> <span class="token function">Crossfade</span><span class="token punctuation">(</span>
    targetState<span class="token operator">:</span> T<span class="token punctuation">,</span>	<span class="token comment">// \u8868\u793A\u76EE\u6807\u5E03\u5C40\u72B6\u6001\u7684\u952E\uFF0C\u53EF\u4EE5\u6839\u636E\u8FD9\u4E2A\u6765\u5224\u65AD\u5207\u6362\u5230\u54EA\u4E2A\u5C4F\u5E55</span>
    modifier<span class="token operator">:</span> Modifier <span class="token operator">=</span> Modifier<span class="token punctuation">,</span>
    animationSpec<span class="token operator">:</span> FiniteAnimationSpec<span class="token operator">&lt;</span>Float<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token function">tween</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>	<span class="token comment">//  \u52A8\u753B\u6548\u679C\uFF0Ctween()\u521B\u5EFA\u4E86\u4E00\u4E2A\u914D\u7F6E\u7ED9\u5B9A\u7684\u6301\u7EED\u65F6\u95F4\u3001\u5EF6\u8FDF\u548C\u7F13\u548C\u66F2\u7EBF\u7684\u8865\u95F4\u52A8\u753B</span>
    content<span class="token operator">:</span> <span class="token annotation builtin">@Composable</span> <span class="token punctuation">(</span>T<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit
<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token operator">..</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,2),B=s("\u4F7F\u7528\u5B9E\u4F8B\uFF1A\u53EF\u4EE5\u53C2\u8003"),R={href:"https://juejin.cn/post/7040359742207688718#heading-2",target:"_blank",rel:"noopener noreferrer"},F=s("\u6398\u91D1 - Compose\u4E2D\u7684\u7B80\u5355\u52A8\u753B\u4E4B\u5E03\u5C40\u5207\u6362\u52A8\u753B"),O=n("h2",{id:"\u8FC7\u6E21\u5230\u4F4E\u7EA7\u522B\u52A8\u753B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u8FC7\u6E21\u5230\u4F4E\u7EA7\u522B\u52A8\u753B","aria-hidden":"true"},"#"),s(" \u8FC7\u6E21\u5230\u4F4E\u7EA7\u522B\u52A8\u753B")],-1),P=n("p",null,"\u6CA1\u9519\uFF0C\u4E0A\u9762\u63D0\u53CA\u7684\u52A8\u753B\uFF0C\u90FD\u662F Compose \u4E2D\u5C01\u88C5\u597D\u7684\u9AD8\u7EA7\u522B\u52A8\u753B\uFF0C\u800C\u8FD9\u4E9B\u52A8\u753B\u5176\u5B9E\u90FD\u662F\u4ECE\u4F4E\u7EA7\u522B\u52A8\u753B\u7684\u57FA\u7840\u4E0A\u6784\u5EFA\u800C\u6765\u7684\uFF0C\u672C\u7740\u5B66\u4E60\u7684\u6001\u5EA6\uFF0C\u600E\u4E48\u80FD\u53EA\u4F1A\u7528\u522B\u4EBA\u5C01\u88C5\u7684\u4E1C\u897F\u5462\uFF0C\u4E0B\u9762\u5C31\u6765\u770B\u770B Compose \u4E2D\u7684\u4F4E\u7EA7\u522B\u52A8\u753B\uFF0C\u8FD9\u5728\u4EE5\u540E\u81EA\u5B9A\u4E49\u52A8\u753B\u4E2D\u975E\u5E38\u6709\u7528\u3002",-1),L=n("h2",{id:"\u5C5E\u6027\u52A8\u753B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5C5E\u6027\u52A8\u753B","aria-hidden":"true"},"#"),s(" \u5C5E\u6027\u52A8\u753B")],-1),W=a("<li><p>\u5927\u80CC\u666F\uFF1ACompose \u662F\u58F0\u660E\u5F0F\u7684\uFF0C\u4E0D\u4EC5\u4EC5\u662F\u5E03\u5C40\uFF0C\u8FDE\u52A8\u753B\u90FD\u662F\u58F0\u660E\u5F0F\u7684\uFF0C\u540C\u6837\u662F\u72B6\u6001\u9A71\u52A8UI\u6765\u5237\u65B0</p></li><li><p><code>animate*AsState</code> \u51FD\u6570\u662F\u6700\u7B80\u5355\u7684 API\uFF0C\u53EF\u5C06\u5373\u65F6\u503C\u53D8\u5316\u5448\u73B0\u4E3A\u52A8\u753B\u503C\u3002\u5B83\u7531 <code>Animatable</code> \u63D0\u4F9B\u652F\u6301\uFF0C\u540E\u8005\u662F\u4E00\u79CD\u57FA\u4E8E\u534F\u7A0B\u7684 API\uFF0C\u7528\u4E8E\u4E3A\u5355\u4E2A\u503C\u6DFB\u52A0\u52A8\u753B\u6548\u679C\u3002<code>updateTransition</code> \u53EF\u521B\u5EFA\u8FC7\u6E21\u5BF9\u8C61\uFF0C\u7528\u4E8E\u7BA1\u7406\u591A\u4E2A\u52A8\u753B\u503C\uFF0C\u5E76\u4E14\u6839\u636E\u72B6\u6001\u53D8\u5316\u8FD0\u884C\u8FD9\u4E9B\u503C\u3002<code>rememberInfiniteTransition</code> \u4E0E\u5176\u7C7B\u4F3C\uFF0C\u4E0D\u8FC7\uFF0C\u5B83\u4F1A\u521B\u5EFA\u4E00\u4E2A\u65E0\u9650\u8FC7\u6E21\u5BF9\u8C61\uFF0C\u4EE5\u7BA1\u7406\u591A\u4E2A\u65E0\u9650\u671F\u8FD0\u884C\u7684\u52A8\u753B\u3002\u6240\u6709\u8FD9\u4E9B API \u90FD\u662F\u53EF\u7EC4\u5408\u9879\uFF08<code>Animatable</code> \u9664\u5916\uFF09\uFF0C\u8FD9\u610F\u5473\u7740\u8FD9\u4E9B\u52A8\u753B\u53EF\u4EE5\u5728\u975E\u7EC4\u5408\u671F\u95F4\u521B\u5EFA\u3002</p></li>",2),N=s("\u503C\u5F97\u6CE8\u610F\u7684\u662F\uFF1A\u6240\u6709\u8FD9\u4E9B API \u90FD\u57FA\u4E8E\u66F4\u57FA\u7840\u7684 "),j=n("code",null,"Animation",-1),U=s(" API\u3002\u867D\u7136\u5927\u591A\u6570\u5E94\u7528\u4E0D\u4F1A\u76F4\u63A5\u4E0E "),H=n("code",null,"Animation",-1),K=s(" \u4E92\u52A8\uFF0C\u4F46 "),G=n("code",null,"Animation",-1),X=s(" \u7684\u67D0\u4E9B\u81EA\u5B9A\u4E49\u529F\u80FD\u53EF\u4EE5\u901A\u8FC7\u66F4\u9AD8\u7EA7\u522B\u7684 API \u83B7\u5F97\u3002\u5982\u9700\u8BE6\u7EC6\u4E86\u89E3 "),$=n("code",null,"AnimationVector",-1),J=s(" \u548C "),Q=n("code",null,"AnimationSpec",-1),Y=s("\uFF0C\u8BF7\u53C2\u9605"),Z={href:"https://developer.android.google.cn/jetpack/compose/animation?authuser=0#customize-animations",target:"_blank",rel:"noopener noreferrer"},nn=s("\u81EA\u5B9A\u4E49\u52A8\u753B"),sn=s("\u3002\u4E0B\u9762\u7ED9\u51FA\u5404\u4E2A\u52A8\u753B\u4E4B\u95F4\u7684\u4F9D\u8D56\u5173\u7CFB\u56FE\uFF1A"),an=n("p",null,[n("img",{src:"https://raw.githubusercontent.com/CoderWDD/myImages/main/blog_images/animation-low-level.svg",alt:"animation-low-level",loading:"lazy"})],-1),tn=a(`<li><p>\u4EE5 <code>animatDpAsState</code> \u4E3A\u4F8B\uFF0C\u5148\u770B\u5176\u5B9A\u4E49\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> <span class="token function">animateDpAsState</span><span class="token punctuation">(</span>
    targetValue<span class="token operator">:</span> Dp<span class="token punctuation">,</span>	<span class="token comment">// \u52A8\u753B\u7684\u76EE\u6807\u503C</span>
    animationSpec<span class="token operator">:</span> AnimationSpec<span class="token operator">&lt;</span>Dp<span class="token operator">&gt;</span> <span class="token operator">=</span> dpDefaultSpring<span class="token punctuation">,</span>		<span class="token comment">// \u52A8\u753B\u76F8\u5173\u914D\u7F6E</span>
    finishedListener<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Dp<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit<span class="token punctuation">)</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token keyword">null</span>	<span class="token comment">// \u5C06\u6700\u540E\u7684Dp\u503C\u56DE\u8C03</span>
<span class="token punctuation">)</span><span class="token operator">:</span> State<span class="token operator">&lt;</span>Dp<span class="token operator">&gt;</span> <span class="token punctuation">{</span> <span class="token operator">..</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u4F7F\u7528\u5B9E\u4F8B\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Preview</span>
<span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> <span class="token function">AnimationTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> isSmall <span class="token keyword">by</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token keyword">val</span> size<span class="token operator">:</span> Dp <span class="token keyword">by</span> <span class="token function">animateDpAsState</span><span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span>isSmall<span class="token punctuation">)</span> <span class="token number">40</span><span class="token punctuation">.</span>dp <span class="token keyword">else</span> <span class="token number">100</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">{</span>
        Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;myTag&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;AnimationTest: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">it</span></span><span class="token string">&quot;</span></span> <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token function">Column</span> <span class="token punctuation">(</span>modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">Button</span><span class="token punctuation">(</span>
            onClick <span class="token operator">=</span> <span class="token punctuation">{</span> isSmall <span class="token operator">=</span> <span class="token operator">!</span>isSmall<span class="token punctuation">}</span><span class="token punctuation">,</span>
            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>vertical <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Change Size Dp&quot;</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token function">Box</span><span class="token punctuation">(</span>modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Red<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u7684\u793A\u4F8B\u4E2D\uFF0C\u53EF\u4EE5\u770B\u5230\uFF0C\u6211\u4EEC\u65E0\u987B\u521B\u5EFA\u4EFB\u4F55\u52A8\u753B\u7C7B\u7684\u5B9E\u4F8B\uFF0C\u4E5F\u4E0D\u5FC5\u5904\u7406\u4E2D\u65AD\u3002\u7CFB\u7EDF\u4F1A\u5728\u540E\u53F0\u8C03\u7528\u70B9\u521B\u5EFA\u5E76\u8BB0\u5F55\u4E00\u4E2A\u52A8\u753B\u5BF9\u8C61\uFF08\u5373 Animatable \u5B9E\u4F8B\uFF09\uFF0C\u5E76\u5C06\u7B2C\u4E00\u4E2A\u76EE\u6807\u503C\u8BBE\u4E3A\u521D\u59CB\u503C\u3002\u6B64\u540E\uFF0C\u53EA\u8981\u6211\u4EEC\u4E3A\u6B64\u53EF\u7EC4\u5408\u9879\u63D0\u4F9B\u4E0D\u540C\u7684\u76EE\u6807\u503C\uFF0C\u7CFB\u7EDF\u5C31\u4F1A\u81EA\u52A8\u5F00\u59CB\u5411\u8BE5\u503C\u64AD\u653E\u52A8\u753B\u3002\u5982\u679C\u5DF2\u6709\u52A8\u753B\u5728\u64AD\u653E\uFF0C\u7CFB\u7EDF\u5C06\u4ECE\u5176\u5F53\u524D\u503C\uFF08\u548C\u901F\u5EA6\uFF09\u5F00\u59CB\u5411\u76EE\u6807\u503C\u64AD\u653E\u52A8\u753B\u3002\u5728\u64AD\u653E\u52A8\u753B\u671F\u95F4\uFF0C\u8FD9\u4E2A\u53EF\u7EC4\u5408\u9879\u4F1A\u91CD\u7EC4\uFF0C\u5E76\u8FD4\u56DE\u5DF2\u66F4\u65B0\u7684\u6BCF\u5E27\u52A8\u753B\u503C\u3002</p></li>`,2),en=n("h2",{id:"\u5E27\u52A8\u753B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5E27\u52A8\u753B","aria-hidden":"true"},"#"),s(" \u5E27\u52A8\u753B")],-1),on=a(`<li><p>\u5E27\u52A8\u753B\uFF1A\u662F\u4E00\u79CD\u52A8\u753B\u5F62\u5F0F\uFF0C\u4E5F\u5C31\u662F\u5728\u65F6\u95F4\u8F74\u4E0A\u9010\u5E27\u7ED8\u5236\u4E0D\u540C\u7684\u5185\u5BB9\uFF0C\u4F7F\u5176\u8FDE\u7EED\u64AD\u653E\u5F62\u6210\u52A8\u753B</p></li><li><p>\u5F15\u8BED\uFF1ACompose \u4E2D\u7684\u5E27\u52A8\u753B\u4F7F\u7528 <code>Animatable</code> \u6765\u5B9E\u73B0\uFF0C<code>Animatable</code> \u662F\u4E00\u4E2A\u503C\u5BB9\u5668\uFF0C\u5B83\u53EF\u4EE5\u5728\u901A\u8FC7 <code>animateTo</code> \u66F4\u6539\u503C\u65F6\u4E3A\u503C\u6DFB\u52A0\u52A8\u753B\u6548\u679C\u3002\u8BE5 API \u652F\u6301 <code>animate*AsState</code> \u7684\u5B9E\u73B0\u3002\u5B83\u53EF\u786E\u4FDD\u4E00\u81F4\u7684<strong>\u8FDE\u7EED\u6027\u548C\u4E92\u65A5\u6027</strong>\uFF0C\u8FD9\u610F\u5473\u7740<strong>\u503C\u53D8\u5316\u59CB\u7EC8\u662F\u8FDE\u7EED\u7684\uFF0C\u5E76\u4E14\u4F1A\u53D6\u6D88\u4EFB\u4F55\u6B63\u5728\u64AD\u653E\u7684\u52A8\u753B\u3002</strong></p></li><li><p>\u4F7F\u7528\u5B9E\u4F8B\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Preview</span>
<span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> <span class="token function">AnimationTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> ok <span class="token operator">=</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token keyword">val</span> color <span class="token operator">=</span> remember <span class="token punctuation">{</span>
        <span class="token function">Animatable</span><span class="token punctuation">(</span>
            initialValue <span class="token operator">=</span> Color<span class="token punctuation">.</span>Red<span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Animatable \u7684\u8BB8\u591A\u529F\u80FD\uFF08\u5305\u62EC animateTo\uFF09\u4EE5\u6302\u8D77\u51FD\u6570\u7684\u5F62\u5F0F\u63D0\u4F9B\u3002\u8FD9\u610F\u5473\u7740\uFF0C\u5B83\u4EEC\u9700\u8981\u5C01\u88C5\u5728\u9002\u5F53\u7684\u534F\u7A0B\u4F5C\u7528\u57DF\u5185</span>
    <span class="token function">LaunchedEffect</span><span class="token punctuation">(</span>ok<span class="token punctuation">)</span><span class="token punctuation">{</span>
        color<span class="token punctuation">.</span><span class="token function">animateTo</span><span class="token punctuation">(</span><span class="token keyword">if</span> <span class="token punctuation">(</span>ok<span class="token punctuation">.</span>value<span class="token punctuation">)</span> Color<span class="token punctuation">.</span>Blue <span class="token keyword">else</span> Color<span class="token punctuation">.</span>Green<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">Box</span><span class="token punctuation">(</span>modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">360</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9884\u89C8\u6548\u679C\u5982\u4E0B\uFF1A</p><p><img src="https://raw.githubusercontent.com/CoderWDD/myImages/main/blog_images/VeryCapture_20220608224617.gif" alt="" loading="lazy"></p><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u5728\u542F\u52A8\u9884\u89C8\u65F6\uFF0C\u754C\u9762\u7531\u7EA2\u8272\u53D8\u4E3A\u4E86\u7EFF\u8272</p></li>`,3),pn=n("p",null,"\u6CE8\u610F\uFF1A",-1),cn=a("<li>\u8FD9\u79CD\u52A8\u753B\u5B9E\u73B0\u652F\u6301\u4E0A\u4E00\u90E8\u5206\u63D0\u5230\u7684 <code>animate*AsState</code> API\u3002\u4E0E <code>animate*AsState</code> \u76F8\u6BD4\uFF0C\u4F7F\u7528 <code>Animatable</code> \u53EF\u4EE5\u76F4\u63A5\u5BF9\u4EE5\u4E0B\u51E0\u4E2A\u65B9\u9762\u8FDB\u884C\u66F4\u7CBE\u7EC6\u7684\u63A7\u5236\u3002\u9996\u5148\uFF0C<code>Animatable</code> \u7684\u521D\u59CB\u503C\u53EF\u4EE5\u4E0E\u7B2C\u4E00\u4E2A\u76EE\u6807\u503C\u4E0D\u540C\u3002\u4F8B\u5982\uFF0C\u4E0A\u9762\u7684\u4EE3\u7801\u793A\u4F8B\u9996\u5148\u663E\u793A\u4E00\u4E2A\u7070\u8272\u6846\uFF0C\u7136\u540E\u7ACB\u5373\u5F00\u59CB\u901A\u8FC7\u52A8\u753B\u5448\u73B0\u4E3A\u7EFF\u8272\u6216\u7EA2\u8272\u3002\u5176\u6B21\uFF0C<code>Animatable</code> \u5BF9\u5185\u5BB9\u503C\u63D0\u4F9B\u66F4\u591A\u64CD\u4F5C\uFF08\u5373 <code>snapTo</code> \u548C <code>animateDecay</code>\uFF09\u3002<code>snapTo</code> \u53EF\u7ACB\u5373\u5C06\u5F53\u524D\u503C\u8BBE\u4E3A\u76EE\u6807\u503C\u3002\u5982\u679C\u52A8\u753B\u672C\u8EAB\u4E0D\u662F\u552F\u4E00\u7684\u53EF\u4FE1\u6765\u6E90\uFF0C\u4E14\u5FC5\u987B\u4E0E\u5176\u4ED6\u72B6\u6001\uFF08\u5982\u89E6\u6478\u4E8B\u4EF6\uFF09\u540C\u6B65\uFF0C\u8BE5\u51FD\u6570\u5C31\u975E\u5E38\u6709\u7528\u3002<code>animateDecay</code> \u7528\u4E8E\u542F\u52A8\u64AD\u653E\u4ECE\u7ED9\u5B9A\u901F\u5EA6\u53D8\u6162\u7684\u52A8\u753B\u3002</li>",1),ln=n("code",null,"Animatable",-1),un=s(" \u4E3A "),rn=n("code",null,"Float",-1),dn=s(" \u548C "),kn=n("code",null,"Color",-1),vn=s(" \u63D0\u4F9B\u5F00\u7BB1\u5373\u7528\u7684\u652F\u6301\uFF0C\u4E0D\u8FC7\uFF0C\u901A\u8FC7\u63D0\u4F9B "),mn=n("code",null,"TwoWayConverter",-1),bn=s("\uFF0C\u53EF\u4F7F\u7528\u4EFB\u4F55\u6570\u636E\u7C7B\u578B\u3002\u5982\u9700\u4E86\u89E3\u8BE6\u60C5\uFF0C\u8BF7\u53C2\u9605 "),gn={href:"https://developer.android.google.cn/jetpack/compose/animation?authuser=0#animationvector",target:"_blank",rel:"noopener noreferrer"},fn=s("AnimationVector"),hn=s("\u3002"),yn=n("h2",{id:"\u591A\u52A8\u753B\u540C\u6B65",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u591A\u52A8\u753B\u540C\u6B65","aria-hidden":"true"},"#"),s(" \u591A\u52A8\u753B\u540C\u6B65")],-1),wn=n("li",null,[n("p",null,[s("\u5F15\u5165\uFF1A\u4E0A\u9762\u7684\u52A8\u753B\u90FD\u662F\u9488\u5BF9\u67D0\u4E00\u4E2A\u5177\u4F53\u52A8\u753B\u7684\uFF0C\u4F46\u662F\u5728\u5F00\u53D1\u4E2D\uFF0C\u901A\u5E38\u6709\u51E0\u4E2A\u52A8\u753B\u7EC4\u5408\u8D77\u6765\u914D\u5408\uFF0C\u5E76\u4FDD\u6301\u540C\u6B65\uFF0C\u4EE5\u6B64\u5B9E\u73B0\u7279\u5B9A\u7684\u52A8\u753B\u6548\u679C\u7684\u573A\u666F\uFF0C\u5219\u6B64\u65F6\u53EF\u4EE5\u7528 Compose \u63D0\u4F9B\u7684 "),n("code",null,"updateTransition"),s(" \u53EF\u7EC4\u5408\u9879\u6765\u5B9E\u73B0\u8BE5\u9700\u6C42")])],-1),_n=n("p",null,"\u6CE8\u610F\uFF1A",-1),Sn=a(`<li><p><code>Transition</code> \u53EF\u7BA1\u7406\u4E00\u4E2A\u6216\u591A\u4E2A\u52A8\u753B\u4F5C\u4E3A\u5176\u5B50\u9879\uFF0C\u5E76\u5728\u591A\u4E2A\u72B6\u6001\u4E4B\u95F4\u540C\u65F6\u8FD0\u884C\u8FD9\u4E9B\u52A8\u753B\u3002\u8FD9\u91CC\u7684\u72B6\u6001\u53EF\u4EE5\u662F\u4EFB\u4F55\u6570\u636E\u7C7B\u578B\uFF0C\u5728\u5F88\u591A\u60C5\u51B5\u4E0B\uFF0C\u60A8\u53EF\u4EE5\u4F7F\u7528\u81EA\u5B9A\u4E49 <code>enum</code> \u7C7B\u578B\u6765\u786E\u4FDD\u7C7B\u578B\u5B89\u5168\uFF0C\u5B9E\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">enum</span> <span class="token keyword">class</span> BoxState <span class="token punctuation">{</span>
    Collapsed<span class="token punctuation">,</span>
    Expanded
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>updateTransition</code> \u53EF\u521B\u5EFA\u5E76\u8BB0\u4F4F <code>Transition</code> \u7684\u5B9E\u4F8B\uFF0C\u5E76\u66F4\u65B0\u5176\u72B6\u6001\u3002</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">var</span> currentState <span class="token keyword">by</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span>BoxState<span class="token punctuation">.</span>Collapsed<span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token keyword">val</span> transition <span class="token operator">=</span> <span class="token function">updateTransition</span><span class="token punctuation">(</span>currentState<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u7136\u540E\uFF0C\u60A8\u53EF\u4EE5\u4F7F\u7528\u67D0\u4E2A <code>animate*</code> \u6269\u5C55\u51FD\u6570\u6765\u5B9A\u4E49\u6B64\u8FC7\u6E21\u6548\u679C\u4E2D\u7684\u5B50\u52A8\u753B\u3002\u4E3A\u6BCF\u4E2A\u72B6\u6001\u6307\u5B9A\u76EE\u6807\u503C\u3002\u8FD9\u4E9B <code>animate*</code> \u51FD\u6570\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u52A8\u753B\u503C\uFF0C\u5728\u52A8\u753B\u64AD\u653E\u8FC7\u7A0B\u4E2D\uFF0C\u5F53\u4F7F\u7528 <code>updateTransition</code> \u66F4\u65B0\u8FC7\u6E21\u72B6\u6001\u65F6\uFF0C\u8BE5\u503C\u5C06\u9010\u5E27\u66F4\u65B0\u3002</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> rect <span class="token keyword">by</span> transition<span class="token punctuation">.</span><span class="token function">animateRect</span> <span class="token punctuation">{</span> state <span class="token operator">-&gt;</span>
    <span class="token keyword">when</span> <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        BoxState<span class="token punctuation">.</span>Collapsed <span class="token operator">-&gt;</span> <span class="token function">Rect</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">,</span> <span class="token number">0f</span><span class="token punctuation">,</span> <span class="token number">100f</span><span class="token punctuation">,</span> <span class="token number">100f</span><span class="token punctuation">)</span>
        BoxState<span class="token punctuation">.</span>Expanded <span class="token operator">-&gt;</span> <span class="token function">Rect</span><span class="token punctuation">(</span><span class="token number">100f</span><span class="token punctuation">,</span> <span class="token number">100f</span><span class="token punctuation">,</span> <span class="token number">300f</span><span class="token punctuation">,</span> <span class="token number">300f</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">val</span> borderWidth <span class="token keyword">by</span> transition<span class="token punctuation">.</span><span class="token function">animateDp</span> <span class="token punctuation">{</span> state <span class="token operator">-&gt;</span>
    <span class="token keyword">when</span> <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        BoxState<span class="token punctuation">.</span>Collapsed <span class="token operator">-&gt;</span> <span class="token number">1</span><span class="token punctuation">.</span>dp
        BoxState<span class="token punctuation">.</span>Expanded <span class="token operator">-&gt;</span> <span class="token number">0</span><span class="token punctuation">.</span>dp
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,3),xn=s("\u60A8\u4E5F\u53EF\u4EE5\u4F20\u9012 "),Tn=n("code",null,"transitionSpec",-1),Cn=s(" \u53C2\u6570\uFF0C\u4E3A\u8FC7\u6E21\u72B6\u6001\u53D8\u5316\u7684\u6BCF\u4E2A\u7EC4\u5408\u6307\u5B9A\u4E0D\u540C\u7684 "),An=n("code",null,"AnimationSpec",-1),Dn=s("\u3002\u5982\u9700\u4E86\u89E3\u8BE6\u60C5\uFF0C\u8BF7\u53C2\u9605 "),Vn={href:"https://developer.android.google.cn/jetpack/compose/animation?authuser=0#animationspec",target:"_blank",rel:"noopener noreferrer"},Mn=s("AnimationSpec"),In=s("\u3002"),zn=a(`<div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> color <span class="token keyword">by</span> transition<span class="token punctuation">.</span><span class="token function">animateColor</span><span class="token punctuation">(</span>
    transitionSpec <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token keyword">when</span> <span class="token punctuation">{</span>
            BoxState<span class="token punctuation">.</span>Expanded isTransitioningTo BoxState<span class="token punctuation">.</span>Collapsed <span class="token operator">-&gt;</span>
                <span class="token function">spring</span><span class="token punctuation">(</span>stiffness <span class="token operator">=</span> <span class="token number">50f</span><span class="token punctuation">)</span>
            <span class="token keyword">else</span> <span class="token operator">-&gt;</span>
                <span class="token function">tween</span><span class="token punctuation">(</span>durationMillis <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span> state <span class="token operator">-&gt;</span>
    <span class="token keyword">when</span> <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        BoxState<span class="token punctuation">.</span>Collapsed <span class="token operator">-&gt;</span> MaterialTheme<span class="token punctuation">.</span>colors<span class="token punctuation">.</span>primary
        BoxState<span class="token punctuation">.</span>Expanded <span class="token operator">-&gt;</span> MaterialTheme<span class="token punctuation">.</span>colors<span class="token punctuation">.</span>background
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),En=a(`<li><p>\u8FC7\u6E21\u5230\u76EE\u6807\u72B6\u6001\u540E\uFF0C<code>Transition.currentState</code> \u5C06\u4E0E <code>Transition.targetState</code> \u76F8\u540C\u3002\u8FD9\u53EF\u4EE5\u7528\u4F5C\u6307\u793A\u662F\u5426\u5DF2\u5B8C\u6210\u8FC7\u6E21\u7684\u4FE1\u53F7\u3002</p><p>\u6709\u65F6\uFF0C\u6211\u4EEC\u4F1A\u5E0C\u671B\u521D\u59CB\u72B6\u6001\u4E0E\u7B2C\u4E00\u4E2A\u76EE\u6807\u72B6\u6001\u4E0D\u540C\u3002\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u7ED3\u5408\u4F7F\u7528 <code>updateTransition</code> \u548C <code>MutableTransitionState</code> \u6765\u5B9E\u73B0\u8FD9\u4E00\u70B9\u3002\u4F8B\u5982\uFF0C\u5B83\u5141\u8BB8\u6211\u4EEC\u5728\u4EE3\u7801\u8FDB\u5165\u7EC4\u5408\u9636\u6BB5\u540E\u7ACB\u5373\u5F00\u59CB\u64AD\u653E\u52A8\u753B\u3002</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token comment">// Start in collapsed state and immediately animate to expanded</span>
<span class="token keyword">var</span> currentState <span class="token operator">=</span> remember <span class="token punctuation">{</span> <span class="token function">MutableTransitionState</span><span class="token punctuation">(</span>BoxState<span class="token punctuation">.</span>Collapsed<span class="token punctuation">)</span> <span class="token punctuation">}</span>
currentState<span class="token punctuation">.</span>targetState <span class="token operator">=</span> BoxState<span class="token punctuation">.</span>Expanded
<span class="token keyword">val</span> transition <span class="token operator">=</span> <span class="token function">updateTransition</span><span class="token punctuation">(</span>currentState<span class="token punctuation">)</span>
<span class="token comment">// ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),qn=s("\u5BF9\u4E8E\u6D89\u53CA\u591A\u4E2A\u53EF\u7EC4\u5408\u51FD\u6570\u7684\u66F4\u590D\u6742\u7684\u8FC7\u6E21\uFF0C\u53EF\u4F7F\u7528 "),Bn={href:"https://developer.android.google.cn/reference/kotlin/androidx/compose/animation/core/Transition?authuser=0#(androidx.compose.animation.core.Transition).createChildTransition(kotlin.String,kotlin.Function1)",target:"_blank",rel:"noopener noreferrer"},Rn=n("code",null,"createChildTransition",-1),Fn=s(" \u6765\u521B\u5EFA\u5B50\u8FC7\u6E21\u3002\u6B64\u65B9\u6CD5\u5BF9\u4E8E\u5728\u590D\u6742\u7684\u53EF\u7EC4\u5408\u9879\u4E2D\u5206\u79BB\u591A\u4E2A\u5B50\u7EC4\u4EF6\u4E4B\u95F4\u7684\u5173\u6CE8\u70B9\u975E\u5E38\u6709\u7528\u3002\u7236\u8FC7\u6E21\u5C06\u4F1A\u77E5\u9053\u5B50\u8FC7\u6E21\u4E2D\u7684\u6240\u6709\u52A8\u753B\u503C\u3002"),On=a(`<div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">enum</span> <span class="token keyword">class</span> DialerState <span class="token punctuation">{</span> DialerMinimized<span class="token punctuation">,</span> NumberPad <span class="token punctuation">}</span>

<span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> <span class="token function">DialerButton</span><span class="token punctuation">(</span>isVisibleTransition<span class="token operator">:</span> Transition<span class="token operator">&lt;</span>Boolean<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \`isVisibleTransition\` spares the need for the content to know</span>
    <span class="token comment">// about other DialerStates. Instead, the content can focus on</span>
    <span class="token comment">// animating the state change between visible and not visible.</span>
<span class="token punctuation">}</span>

<span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> <span class="token function">NumberPad</span><span class="token punctuation">(</span>isVisibleTransition<span class="token operator">:</span> Transition<span class="token operator">&lt;</span>Boolean<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \`isVisibleTransition\` spares the need for the content to know</span>
    <span class="token comment">// about other DialerStates. Instead, the content can focus on</span>
    <span class="token comment">// animating the state change between visible and not visible.</span>
<span class="token punctuation">}</span>

<span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> <span class="token function">Dialer</span><span class="token punctuation">(</span>dialerState<span class="token operator">:</span> DialerState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> transition <span class="token operator">=</span> <span class="token function">updateTransition</span><span class="token punctuation">(</span>dialerState<span class="token punctuation">)</span>
    Box <span class="token punctuation">{</span>
        <span class="token comment">// Creates separate child transitions of Boolean type for NumberPad</span>
        <span class="token comment">// and DialerButton for any content animation between visible and</span>
        <span class="token comment">// not visible</span>
        <span class="token function">NumberPad</span><span class="token punctuation">(</span>
            transition<span class="token punctuation">.</span><span class="token function">createChildTransition</span> <span class="token punctuation">{</span>
                it <span class="token operator">==</span> DialerState<span class="token punctuation">.</span>NumberPad
            <span class="token punctuation">}</span>
        <span class="token punctuation">)</span>
        <span class="token function">DialerButton</span><span class="token punctuation">(</span>
            transition<span class="token punctuation">.</span><span class="token function">createChildTransition</span> <span class="token punctuation">{</span>
                it <span class="token operator">==</span> DialerState<span class="token punctuation">.</span>DialerMinimized
            <span class="token punctuation">}</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Pn=n("h3",{id:"\u5C06-animatedvisibility-\u4E0E-animatedcontent-\u914D\u5408\u4F7F\u7528",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5C06-animatedvisibility-\u4E0E-animatedcontent-\u914D\u5408\u4F7F\u7528","aria-hidden":"true"},"#"),s(" \u5C06 AnimatedVisibility \u4E0E AnimatedContent \u914D\u5408\u4F7F\u7528\uFF1A")],-1),Ln={href:"https://developer.android.google.cn/reference/kotlin/androidx/compose/animation/package-summary?authuser=0#(androidx.compose.animation.core.Transition).AnimatedVisibility(kotlin.Function1,androidx.compose.ui.Modifier,androidx.compose.animation.EnterTransition,androidx.compose.animation.ExitTransition,kotlin.Function1)",target:"_blank",rel:"noopener noreferrer"},Wn=n("code",null,"AnimatedVisibility",-1),Nn=s(" \u548C "),jn={href:"https://developer.android.google.cn/reference/kotlin/androidx/compose/animation/package-summary?authuser=0#(androidx.compose.animation.core.Transition).AnimatedContent(androidx.compose.ui.Modifier,kotlin.Function1,androidx.compose.ui.Alignment,kotlin.Function2)",target:"_blank",rel:"noopener noreferrer"},Un=n("code",null,"AnimatedContent",-1),Hn=a(" \u53EF\u7528\u4F5C <code>Transition</code> \u7684\u6269\u5C55\u51FD\u6570\u3002<code>Transition.AnimatedVisibility</code> \u548C <code>Transition.AnimatedContent</code> \u7684 <code>targetState</code> \u6E90\u81EA <code>Transition</code>\uFF0C\u4F1A\u5728 <code>Transition</code> \u7684 <code>targetState</code> \u53D1\u751F\u53D8\u5316\u65F6\u89C6\u9700\u8981\u89E6\u53D1\u8FDB\u5165/\u9000\u51FA\u8FC7\u6E21\u3002\u8FD9\u4E9B\u6269\u5C55\u51FD\u6570\u5141\u8BB8\u5C06\u539F\u672C\u4F4D\u4E8E <code>AnimatedVisibility</code> \u6216 <code>AnimatedContent</code> \u5185\u7684\u6240\u6709 enter/exit/sizeTransform \u52A8\u753B\u63D0\u5347\u5230 <code>Transition</code> \u4E2D\u3002\u501F\u52A9\u8FD9\u4E9B\u6269\u5C55\u51FD\u6570\uFF0C\u53EF\u4EE5\u4ECE\u5916\u90E8\u89C2\u5BDF <code>AnimatedVisibility</code>/<code>AnimatedContent</code> \u7684\u72B6\u6001\u53D8\u5316\u3002\u6B64\u7248\u672C\u7684 <code>AnimatedVisibility</code> \u63A5\u53D7\u4E00\u4E2A lambda\uFF0C\u5B83\u5C06\u7236\u8FC7\u6E21\u7684\u76EE\u6807\u72B6\u6001\u8F6C\u6362\u4E3A\u5E03\u5C14\u503C\uFF0C\u800C\u4E0D\u662F\u63A5\u53D7\u5E03\u5C14\u503C <code>visible</code> \u53C2\u6570\u3002",29),Kn=a(`<div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">var</span> selected <span class="token keyword">by</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token comment">// Animates changes when \`selected\` is changed.</span>
<span class="token keyword">val</span> transition <span class="token operator">=</span> <span class="token function">updateTransition</span><span class="token punctuation">(</span>selected<span class="token punctuation">)</span>
<span class="token keyword">val</span> borderColor <span class="token keyword">by</span> transition<span class="token punctuation">.</span><span class="token function">animateColor</span> <span class="token punctuation">{</span> isSelected <span class="token operator">-&gt;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isSelected<span class="token punctuation">)</span> Color<span class="token punctuation">.</span>Magenta <span class="token keyword">else</span> Color<span class="token punctuation">.</span>White
<span class="token punctuation">}</span>
<span class="token keyword">val</span> elevation <span class="token keyword">by</span> transition<span class="token punctuation">.</span><span class="token function">animateDp</span> <span class="token punctuation">{</span> isSelected <span class="token operator">-&gt;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isSelected<span class="token punctuation">)</span> <span class="token number">10</span><span class="token punctuation">.</span>dp <span class="token keyword">else</span> <span class="token number">2</span><span class="token punctuation">.</span>dp
<span class="token punctuation">}</span>
<span class="token function">Surface</span><span class="token punctuation">(</span>
    onClick <span class="token operator">=</span> <span class="token punctuation">{</span> selected <span class="token operator">=</span> <span class="token operator">!</span>selected <span class="token punctuation">}</span><span class="token punctuation">,</span>
    shape <span class="token operator">=</span> <span class="token function">RoundedCornerShape</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">,</span>
    border <span class="token operator">=</span> <span class="token function">BorderStroke</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">.</span>dp<span class="token punctuation">,</span> borderColor<span class="token punctuation">)</span><span class="token punctuation">,</span>
    elevation <span class="token operator">=</span> elevation
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Column</span><span class="token punctuation">(</span>modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">fillMaxWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">Text</span><span class="token punctuation">(</span>text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Hello, world!&quot;</span></span><span class="token punctuation">)</span>
        <span class="token comment">// AnimatedVisibility as a part of the transition.</span>
        transition<span class="token punctuation">.</span><span class="token function">AnimatedVisibility</span><span class="token punctuation">(</span>
            visible <span class="token operator">=</span> <span class="token punctuation">{</span> targetSelected <span class="token operator">-&gt;</span> targetSelected <span class="token punctuation">}</span><span class="token punctuation">,</span>
            enter <span class="token operator">=</span> <span class="token function">expandVertically</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            exit <span class="token operator">=</span> <span class="token function">shrinkVertically</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">Text</span><span class="token punctuation">(</span>text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;It is fine today.&quot;</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// AnimatedContent as a part of the transition.</span>
        transition<span class="token punctuation">.</span><span class="token function">AnimatedContent</span> <span class="token punctuation">{</span> targetState <span class="token operator">-&gt;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>targetState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">Text</span><span class="token punctuation">(</span>text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Selected&quot;</span></span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token function">Icon</span><span class="token punctuation">(</span>imageVector <span class="token operator">=</span> Icons<span class="token punctuation">.</span>Default<span class="token punctuation">.</span>Phone<span class="token punctuation">,</span> contentDescription <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Phone&quot;</span></span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5C01\u88C5-transition-\u5E76\u4F7F\u5176\u53EF\u91CD\u590D\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u5C01\u88C5-transition-\u5E76\u4F7F\u5176\u53EF\u91CD\u590D\u4F7F\u7528" aria-hidden="true">#</a> \u5C01\u88C5 Transition \u5E76\u4F7F\u5176\u53EF\u91CD\u590D\u4F7F\u7528\uFF1A</h3><ul><li><p>\u5BF9\u4E8E\u7B80\u5355\u7684\u7528\u4F8B\uFF0C\u5728\u4E0E\u754C\u9762\u76F8\u540C\u7684\u53EF\u7EC4\u5408\u9879\u4E2D\u5B9A\u4E49\u8FC7\u6E21\u52A8\u753B\u662F\u4E00\u79CD\u975E\u5E38\u6709\u6548\u7684\u9009\u62E9\u65B9\u6848\u3002\u4F46\u662F\uFF0C\u5728\u5904\u7406\u5177\u6709\u5927\u91CF\u52A8\u753B\u503C\u7684\u590D\u6742\u7EC4\u4EF6\u65F6\uFF0C\u60A8\u53EF\u80FD\u4F1A\u5E0C\u671B\u5C06\u52A8\u753B\u5B9E\u73B0\u4E0E\u53EF\u7EC4\u5408\u754C\u9762\u5206\u5F00\u3002</p><p>\u4E3A\u6B64\uFF0C\u60A8\u53EF\u4EE5\u521B\u5EFA\u4E00\u4E2A\u7C7B\u6765\u4FDD\u5B58\u6240\u6709\u52A8\u753B\u503C\uFF0C\u540C\u65F6\u521B\u5EFA\u4E00\u4E2A\u201Cupdate\u201D\u51FD\u6570\u6765\u8FD4\u56DE\u8BE5\u7C7B\u7684\u5B9E\u4F8B\u3002\u8FC7\u6E21\u5B9E\u73B0\u53EF\u63D0\u53D6\u5230\u65B0\u7684\u72EC\u7ACB\u51FD\u6570\u4E2D\u3002\u5F53\u60A8\u9700\u8981\u96C6\u4E2D\u5904\u7406\u52A8\u753B\u903B\u8F91\u6216\u4F7F\u590D\u6742\u52A8\u753B\u53EF\u91CD\u590D\u4F7F\u7528\u65F6\uFF0C\u8FD9\u79CD\u6A21\u5F0F\u5F88\u6709\u7528\u3002</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">enum</span> <span class="token keyword">class</span> BoxState <span class="token punctuation">{</span> Collapsed<span class="token punctuation">,</span> Expanded <span class="token punctuation">}</span>

<span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> <span class="token function">AnimatingBox</span><span class="token punctuation">(</span>boxState<span class="token operator">:</span> BoxState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> transitionData <span class="token operator">=</span> <span class="token function">updateTransitionData</span><span class="token punctuation">(</span>boxState<span class="token punctuation">)</span>
    <span class="token comment">// UI tree</span>
    <span class="token function">Box</span><span class="token punctuation">(</span>
        modifier <span class="token operator">=</span> Modifier
            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>transitionData<span class="token punctuation">.</span>color<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span>transitionData<span class="token punctuation">.</span>size<span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// Holds the animation values.</span>
<span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token function">TransitionData</span><span class="token punctuation">(</span>
    color<span class="token operator">:</span> State<span class="token operator">&lt;</span>Color<span class="token operator">&gt;</span><span class="token punctuation">,</span>
    size<span class="token operator">:</span> State<span class="token operator">&lt;</span>Dp<span class="token operator">&gt;</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> color <span class="token keyword">by</span> color
    <span class="token keyword">val</span> size <span class="token keyword">by</span> size
<span class="token punctuation">}</span>

<span class="token comment">// Create a Transition and return its animation values.</span>
<span class="token annotation builtin">@Composable</span>
<span class="token keyword">private</span> <span class="token keyword">fun</span> <span class="token function">updateTransitionData</span><span class="token punctuation">(</span>boxState<span class="token operator">:</span> BoxState<span class="token punctuation">)</span><span class="token operator">:</span> TransitionData <span class="token punctuation">{</span>
    <span class="token keyword">val</span> transition <span class="token operator">=</span> <span class="token function">updateTransition</span><span class="token punctuation">(</span>boxState<span class="token punctuation">)</span>
    <span class="token keyword">val</span> color <span class="token operator">=</span> transition<span class="token punctuation">.</span><span class="token function">animateColor</span> <span class="token punctuation">{</span> state <span class="token operator">-&gt;</span>
        <span class="token keyword">when</span> <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            BoxState<span class="token punctuation">.</span>Collapsed <span class="token operator">-&gt;</span> Color<span class="token punctuation">.</span>Gray
            BoxState<span class="token punctuation">.</span>Expanded <span class="token operator">-&gt;</span> Color<span class="token punctuation">.</span>Red
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">val</span> size <span class="token operator">=</span> transition<span class="token punctuation">.</span><span class="token function">animateDp</span> <span class="token punctuation">{</span> state <span class="token operator">-&gt;</span>
        <span class="token keyword">when</span> <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            BoxState<span class="token punctuation">.</span>Collapsed <span class="token operator">-&gt;</span> <span class="token number">64</span><span class="token punctuation">.</span>dp
            BoxState<span class="token punctuation">.</span>Expanded <span class="token operator">-&gt;</span> <span class="token number">128</span><span class="token punctuation">.</span>dp
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">remember</span><span class="token punctuation">(</span>transition<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">TransitionData</span><span class="token punctuation">(</span>color<span class="token punctuation">,</span> size<span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="\u5DE5\u5177\u652F\u6301" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u5177\u652F\u6301" aria-hidden="true">#</a> \u5DE5\u5177\u652F\u6301</h3>`,4),Gn=s("Android Studio \u652F\u6301\u5728 "),Xn={href:"https://developer.android.google.cn/jetpack/compose/tooling?authuser=0#animations",target:"_blank",rel:"noopener noreferrer"},$n=s("Animation Preview"),Jn=s(" \u4E2D\u68C0\u67E5\u8FC7\u6E21\u6548\u679C\u3002"),Qn=a(`<ul><li>\u9010\u5E27\u9884\u89C8\u8FC7\u6E21\u6548\u679C</li><li>\u68C0\u67E5\u8FC7\u6E21\u6548\u679C\u4E2D\u6240\u6709\u52A8\u753B\u7684\u503C</li><li>\u9884\u89C8\u4EFB\u4F55\u521D\u59CB\u72B6\u6001\u4E0E\u76EE\u6807\u72B6\u6001\u4E4B\u95F4\u7684\u8FC7\u6E21</li></ul><p>\u542F\u52A8 Animation Preview \u540E\uFF0C\u60A8\u4F1A\u770B\u5230\u201CAnimations\u201D\u7A97\u683C\uFF0C\u5E76\u53EF\u4EE5\u5728\u5176\u4E2D\u8FD0\u884C\u9884\u89C8\u4E2D\u5305\u542B\u7684\u4EFB\u4F55\u8FC7\u6E21\u6548\u679C\u3002\u8FC7\u6E21\u6548\u679C\u53CA\u5176\u6BCF\u4E2A\u52A8\u753B\u503C\u5747\u6807\u6709\u9ED8\u8BA4\u540D\u79F0\u3002\u60A8\u53EF\u4EE5\u901A\u8FC7\u5728 <code>updateTransition</code> \u548C <code>animate*</code> \u51FD\u6570\u4E2D\u6307\u5B9A <code>label</code> \u53C2\u6570\u6765\u81EA\u5B9A\u4E49\u6807\u7B7E\u3002</p><p><img src="https://raw.githubusercontent.com/CoderWDD/myImages/main/blog_images/animation-preview-overview.png" alt="Animation Preview \u9762\u677F" loading="lazy"></p><h2 id="\u591A\u52A8\u753B\u91CD\u590D" tabindex="-1"><a class="header-anchor" href="#\u591A\u52A8\u753B\u91CD\u590D" aria-hidden="true">#</a> \u591A\u52A8\u753B\u91CD\u590D</h2><ul><li><p>\u5F15\u5165\uFF1A\u5982\u679C\u9700\u8981\u8BA9\u52A8\u753B\u91CD\u590D\u64AD\u653E\uFF0C\u76F4\u5230\u67D0\u4E2A\u65F6\u673A\u518D\u505C\u6B62\uFF0C\u5982\u7F51\u7EDC\u52A0\u8F7D\u65F6\u91CD\u590D\u64AD\u653E\u4E00\u4E2A\u52A8\u753B\uFF0C\u52A0\u8F7D\u5B8C\u6BD5\u505C\u6B62\u64AD\u653E\u52A8\u753B\uFF0C\u5219\u53EF\u4EE5\u7528 Compose \u4E2D\u6784\u5EFA\u91CD\u590D\u52A8\u753B\u7684\u65B9\u6CD5 <code>InfiniteTransition </code></p></li><li><p>\u503C\u5F97\u6CE8\u610F\u7684\u662F\uFF1A<code>InfiniteTransition</code> \u53EF\u4EE5\u50CF <code>Transition</code> \u4E00\u6837\u4FDD\u5B58\u4E00\u4E2A\u6216\u591A\u4E2A\u5B50\u52A8\u753B\uFF0C\u4F46\u662F\uFF0C\u8FD9\u4E9B\u52A8\u753B\u4E00\u8FDB\u5165\u7EC4\u5408\u9636\u6BB5\u5C31\u5F00\u59CB\u8FD0\u884C\uFF0C\u9664\u975E\u88AB\u79FB\u9664\uFF0C\u5426\u5219\u4E0D\u4F1A\u505C\u6B62\u3002</p></li><li><p>\u4F7F\u7528\u5B9E\u4F8B\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Preview</span>
<span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> <span class="token function">AnimationTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> infiniteTransition <span class="token operator">=</span> <span class="token function">rememberInfiniteTransition</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">val</span> color <span class="token keyword">by</span> infiniteTransition<span class="token punctuation">.</span><span class="token function">animateColor</span><span class="token punctuation">(</span>
        initialValue <span class="token operator">=</span> Color<span class="token punctuation">.</span>Red<span class="token punctuation">,</span>
        targetValue <span class="token operator">=</span> Color<span class="token punctuation">.</span>Green<span class="token punctuation">,</span>
        animationSpec <span class="token operator">=</span> <span class="token function">infiniteRepeatable</span><span class="token punctuation">(</span>
            animation <span class="token operator">=</span> <span class="token function">tween</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> easing <span class="token operator">=</span> LinearEasing<span class="token punctuation">)</span><span class="token punctuation">,</span>
            repeatMode <span class="token operator">=</span> RepeatMode<span class="token punctuation">.</span>Reverse
        <span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
    <span class="token function">Box</span><span class="token punctuation">(</span>Modifier<span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u7684\u4F8B\u5B50\u53EF\u4EE5\u770B\u51FA\uFF0C\u5728 Compose \u4E2D\u521B\u5EFA <code>InfiniteTransition</code> \u5B9E\u4F8B\u9700\u8981\u4F7F\u7528 <code>rememberInfiniteTransition</code>\uFF0C\u901A\u8FC7<code>animateColor</code>\u3001<code>animatedFloat</code>\u6216<code>animatedValue</code>\u6765\u6DFB\u52A0\u5B50\u52A8\u753B\uFF0C\u7136\u540E\u8BBE\u7F6E <code>infiniteRepeatable</code> \u6307\u5B9A\u52A8\u753B\u89C4\u8303\u3002</p><p>\u6548\u679C\u5982\u4E0B\uFF1A</p><p><img src="https://raw.githubusercontent.com/CoderWDD/myImages/main/blog_images/VeryCapture_20220608230751.gif" alt="" loading="lazy"></p></li></ul><h2 id="targetbasedanimation" tabindex="-1"><a class="header-anchor" href="#targetbasedanimation" aria-hidden="true">#</a> TargetBasedAnimation</h2><p><code>TargetBasedAnimation</code> \u662F\u6211\u4EEC\u76EE\u524D\u770B\u5230\u7684\u6700\u4F4E\u7EA7\u522B\u7684\u52A8\u753B API\u3002\u5176\u4ED6 API \u53EF\u6EE1\u8DB3\u5927\u591A\u6570\u7528\u4F8B\u7684\u9700\u8981\uFF0C\u4F46\u4F7F\u7528 <code>TargetBasedAnimation</code> \u53EF\u4EE5\u76F4\u63A5\u8BA9\u60A8\u81EA\u5DF1\u63A7\u5236\u52A8\u753B\u7684\u64AD\u653E\u65F6\u95F4\u3002\u5728\u4E0B\u9762\u7684\u793A\u4F8B\u4E2D\uFF0C<code>TargetAnimation</code> \u7684\u64AD\u653E\u65F6\u95F4\u5C06\u6839\u636E <code>withFrameNanos</code> \u63D0\u4F9B\u7684\u5E27\u65F6\u95F4\u624B\u52A8\u63A7\u5236\u3002</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> anim <span class="token operator">=</span> remember <span class="token punctuation">{</span>
    <span class="token function">TargetBasedAnimation</span><span class="token punctuation">(</span>
        animationSpec <span class="token operator">=</span> <span class="token function">tween</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        typeConverter <span class="token operator">=</span> Float<span class="token punctuation">.</span>VectorConverter<span class="token punctuation">,</span>
        initialValue <span class="token operator">=</span> <span class="token number">200f</span><span class="token punctuation">,</span>
        targetValue <span class="token operator">=</span> <span class="token number">1000f</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> playTime <span class="token keyword">by</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>

<span class="token function">LaunchedEffect</span><span class="token punctuation">(</span>anim<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> startTime <span class="token operator">=</span> withFrameNanos <span class="token punctuation">{</span> it <span class="token punctuation">}</span>

    <span class="token keyword">do</span> <span class="token punctuation">{</span>
        playTime <span class="token operator">=</span> withFrameNanos <span class="token punctuation">{</span> it <span class="token punctuation">}</span> <span class="token operator">-</span> startTime
        <span class="token keyword">val</span> animationValue <span class="token operator">=</span> anim<span class="token punctuation">.</span><span class="token function">getValueFromNanos</span><span class="token punctuation">(</span>playTime<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">someCustomCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u81EA\u5B9A\u4E49\u52A8\u753B" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u52A8\u753B" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u52A8\u753B</h2><h3 id="\u52A8\u753B\u89C4\u683C-animationspec" tabindex="-1"><a class="header-anchor" href="#\u52A8\u753B\u89C4\u683C-animationspec" aria-hidden="true">#</a> \u52A8\u753B\u89C4\u683C----AnimationSpec</h3><ul><li><p>\u4F5C\u7528\uFF1A\u7528\u6765\u5B58\u50A8\u52A8\u753B\u89C4\u683C\uFF0C\u5305\u62EC\u8981\u8FDB\u884C\u52A8\u753B\u5904\u7406\u7684\u6570\u636E\u7C7B\u578B\u3001\u5C06\u6570\u636E\u8F6C\u6362\u4E3A\u52A8\u753B\u540E\u5C06\u4F7F\u7528\u7684\u52A8\u753B\u914D\u7F6E\u3002</p></li><li><p>\u6CE8\u610F\uFF1A<code>AnimationSpec</code>\u662F\u4E00\u4E2A\u63A5\u53E3\uFF0C\u56E0\u6B64\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u4E0D\u540C\u7C7B\u578B\u7684 <code>AnimationSpec</code> \u6765\u521B\u5EFA\u4E0D\u540C\u7C7B\u578B\u7684\u52A8\u753B\u3002</p></li><li><p>Compose \u4E3A\u6211\u4EEC\u5B9E\u73B0\u7684\u4E00\u4E0B\u5E38\u7528\u7684\u52A8\u753B\u89C4\u683C\uFF1A</p><ul><li><p>\u57FA\u4E8E\u7269\u7406\u7279\u6027\u7684\u52A8\u753B----spring\uFF1A</p><ul><li><p>\u5B9A\u4E49\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Stable</span>
<span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">&gt;</span> <span class="token function">spring</span><span class="token punctuation">(</span>
    dampingRatio<span class="token operator">:</span> Float <span class="token operator">=</span> Spring<span class="token punctuation">.</span>DampingRatioNoBouncy<span class="token punctuation">,</span>	<span class="token comment">// \u963B\u5C3C\u7CFB\u6570\uFF0C\u503C\u8D8A\u5C0F\uFF0C\u5F39\u529B\u8D8A\u5927\uFF0C\u5F39\u7C27\u6548\u679C\u8D8A\u660E\u663E\uFF0C\u9ED8\u8BA4\u65E0\u5F39\u529B</span>
    stiffness<span class="token operator">:</span> Float <span class="token operator">=</span> Spring<span class="token punctuation">.</span>StiffnessMedium<span class="token punctuation">,</span>	<span class="token comment">// \u8870\u51CF\u7CFB\u6570\uFF0C\u503C\u8D8A\u5927\uFF0C\u8870\u51CF\u7684\u8D8A\u5FEB\uFF0C\u4E5F\u5C31\u662F\u6298\u53E0\u7684\u901F\u5EA6\u8D8A\u5FEB\uFF0C\u9ED8\u8BA4\u8870\u51CF\u7CFB\u6570\u4E3A&quot;\u4E2D&quot;</span>
    visibilityThreshold<span class="token operator">:</span> T<span class="token operator">?</span> <span class="token operator">=</span> <span class="token keyword">null</span>	<span class="token comment">// \u53EF\u89C1\u6027\u9600\u503C\uFF0C\u5373\u51B3\u5B9A\u5176\u5230\u54EA\u91CC\u4F1A\u505C\u6B62\u52A8\u753B\u7684\u5206\u5272\u7EBF</span>
<span class="token punctuation">)</span><span class="token operator">:</span> SpringSpec<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span> <span class="token operator">=</span>
    <span class="token function">SpringSpec</span><span class="token punctuation">(</span>dampingRatio<span class="token punctuation">,</span> stiffness<span class="token punctuation">,</span> visibilityThreshold<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u5B9E\u524D\u9762\u5DF2\u7ECF\u6709\u770B\u8FC7\u8FD9\u4E2A\u4EE3\u7801\u4E86\uFF0C\u8FD9\u91CC\u53EA\u662F\u4E3A\u4E86\u65B9\u4FBF\u67E5\u770B\uFF0C\u518D\u7C98\u8D34\u4E00\u904D\u800C\u5DF2\u3002</p></li><li><p><code>spring</code> \u53EF\u5728\u8D77\u59CB\u503C\u548C\u7ED3\u675F\u503C\u4E4B\u95F4\u521B\u5EFA\u57FA\u4E8E\u7269\u7406\u7279\u6027\u7684\u52A8\u753B\u3002\u5B83\u63A5\u53D7 2 \u4E2A\u53C2\u6570\uFF1A<code>dampingRatio</code> \u548C <code>stiffness</code>\u3002</p><ul><li><p><code>dampingRatio</code> \u5B9A\u4E49\u5F39\u7C27\u7684\u5F39\u6027\u3002\u9ED8\u8BA4\u503C\u4E3A <code>Spring.DampingRatioNoBouncy</code>\u3002</p><p><img src="https://raw.githubusercontent.com/CoderWDD/myImages/main/blog_images/animation-spring.gif" alt="\u5C55\u793A\u4E0D\u540C\u963B\u5C3C\u7CFB\u6570\u7684\u884C\u4E3A\u7684\u52A8\u753B\u56FE\u7247" loading="lazy"></p></li><li><p><code>stiffness</code> \u5B9A\u4E49\u5F39\u7C27\u5E94\u5411\u7ED3\u675F\u503C\u79FB\u52A8\u7684\u901F\u5EA6\u3002\u9ED8\u8BA4\u503C\u4E3A <code>Spring.StiffnessMedium</code>\u3002</p></li></ul></li><li><p>\u4F7F\u7528\u5B9E\u4F8B\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> value <span class="token keyword">by</span> <span class="token function">animateFloatAsState</span><span class="token punctuation">(</span>
    targetValue <span class="token operator">=</span> <span class="token number">1f</span><span class="token punctuation">,</span>
    animationSpec <span class="token operator">=</span> <span class="token function">spring</span><span class="token punctuation">(</span>
        dampingRatio <span class="token operator">=</span> Spring<span class="token punctuation">.</span>DampingRatioHighBouncy<span class="token punctuation">,</span>
        stiffness <span class="token operator">=</span> Spring<span class="token punctuation">.</span>StiffnessMedium
    <span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u76F8\u6BD4\u57FA\u4E8E\u65F6\u957F\u7684 <code>AnimationSpec</code> \u7C7B\u578B\uFF0C<code>spring</code> \u53EF\u4EE5\u66F4\u6D41\u7545\u5730\u5904\u7406\u4E2D\u65AD\uFF0C\u56E0\u4E3A\u5B83\u53EF\u4EE5\u5728\u76EE\u6807\u503C\u5728\u52A8\u753B\u4E2D\u53D8\u5316\u65F6\u4FDD\u8BC1\u901F\u5EA6\u7684\u8FDE\u7EED\u6027\u3002</p></li></ul></li><li><p>\u6E10\u53D8\u52A8\u753B----tween\uFF1A</p><ul><li><p>\u4F5C\u7528\uFF1A\u7528\u6765\u521B\u5EFA\u4F7F\u7528\u7ED9\u5B9A\u7684\u6301\u7EED\u65F6\u95F4\u3001\u5EF6\u8FDF\u4EE5\u53CA\u7F13\u548C\u66F2\u7EBF\u914D\u7F6E\u7684 tween \u89C4\u8303</p></li><li><p>\u5B9A\u4E49\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Stable</span>
<span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">&gt;</span> <span class="token function">tween</span><span class="token punctuation">(</span>
    durationMillis<span class="token operator">:</span> Int <span class="token operator">=</span> DefaultDurationMillis<span class="token punctuation">,</span>	<span class="token comment">// \u5728\u6307\u5B9A\u7684\u65F6\u95F4\u5185\u4F7F\u7528\u7F13\u548C\u66F2\u7EBF\u5728\u8D77\u59CB\u503C\u548C\u7ED3\u675F\u503C\u4E4B\u95F4\u6DFB\u52A0\u52A8\u753B\u6548\u679C</span>
    delayMillis<span class="token operator">:</span> Int <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>	<span class="token comment">// \u8868\u793A\u63A8\u8FDF\u52A8\u753B\u64AD\u653E\u7684\u5F00\u59CB\u65F6\u95F4</span>
    easing<span class="token operator">:</span> Easing <span class="token operator">=</span> FastOutSlowInEasing	<span class="token comment">// \u7528\u4E8E\u5728\u5F00\u59CB\u548C\u7ED3\u675F\u4E4B\u95F4\u8FDB\u884C\u63D2\u503C\u7684\u7F13\u52A8\u66F2\u7EBF\uFF0C\u5177\u4F53\u53EF\u770B Easing \u7684\u6E90\u7801</span>
<span class="token punctuation">)</span><span class="token operator">:</span> TweenSpec<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token function">TweenSpec</span><span class="token punctuation">(</span>durationMillis<span class="token punctuation">,</span> delayMillis<span class="token punctuation">,</span> easing<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u4F7F\u7528\u5B9E\u4F8B\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> value <span class="token keyword">by</span> <span class="token function">animateFloatAsState</span><span class="token punctuation">(</span>
    targetValue <span class="token operator">=</span> <span class="token number">1f</span><span class="token punctuation">,</span>
    animationSpec <span class="token operator">=</span> <span class="token function">tween</span><span class="token punctuation">(</span>
        durationMillis <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">,</span>
        delayMillis <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">,</span>
        easing <span class="token operator">=</span> LinearOutSlowInEasing
    <span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>\u5E27\u52A8\u753B----keyframes\uFF1A</p><ul><li><p>\u4F5C\u7528\uFF1A\u6839\u636E\u5728\u52A8\u753B\u65F6\u957F\u5185\u7684\u4E0D\u540C\u65F6\u95F4\u6233\u4E2D\u6307\u5B9A\u7684\u5FEB\u7167\u503C\u6DFB\u52A0\u52A8\u753B\u6548\u679C\u3002</p></li><li><p>\u503C\u5F97\u6CE8\u610F\u7684\u662F\uFF1A\u5728\u4EFB\u4F55\u7ED9\u5B9A\u65F6\u95F4\uFF0C\u52A8\u753B\u503C\u90FD\u5C06\u63D2\u503C\u5230\u4E24\u4E2A\u5173\u952E\u5E27\u503C\u4E4B\u95F4\u3002\u5BF9\u4E8E\u5176\u4E2D\u6BCF\u4E2A\u5173\u952E\u5E27\uFF0C\u60A8\u90FD\u53EF\u4EE5\u6307\u5B9A Easing \u6765\u786E\u5B9A\u63D2\u503C\u66F2\u7EBF\u3002</p></li><li><p>\u5B9A\u4E49\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Stable</span>
<span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">&gt;</span> <span class="token function">keyframes</span><span class="token punctuation">(</span>
    <span class="token keyword">init</span><span class="token operator">:</span> KeyframesSpec<span class="token punctuation">.</span>KeyframesSpecConfig<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit	<span class="token comment">// \u7528\u4E8E\u52A8\u753B\u521D\u59CB\u5316</span>
<span class="token punctuation">)</span><span class="token operator">:</span> KeyframesSpec<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">KeyframesSpec</span><span class="token punctuation">(</span>KeyframesSpec<span class="token punctuation">.</span>KeyframesSpecConfig<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">init</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u4F7F\u7528\u5B9E\u4F8B\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> value <span class="token keyword">by</span> <span class="token function">animateFloatAsState</span><span class="token punctuation">(</span>
    targetValue <span class="token operator">=</span> <span class="token number">1f</span><span class="token punctuation">,</span>
    animationSpec <span class="token operator">=</span> keyframes <span class="token punctuation">{</span>
        durationMillis <span class="token operator">=</span> <span class="token number">375</span>
        <span class="token number">0.0f</span> at <span class="token number">0</span> with LinearOutSlowInEasing <span class="token comment">// for 0-15 ms</span>
        <span class="token number">0.2f</span> at <span class="token number">15</span> with FastOutLinearInEasing <span class="token comment">// for 15-75 ms</span>
        <span class="token number">0.4f</span> at <span class="token number">75</span> <span class="token comment">// ms</span>
        <span class="token number">0.4f</span> at <span class="token number">225</span> <span class="token comment">// ms</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>\u91CD\u590D\u6709\u9650\u52A8\u753B----repeatable\uFF1A</p><ul><li><p>\u4F5C\u7528\uFF1A\u53CD\u590D\u8FD0\u884C\u57FA\u4E8E\u65F6\u957F\u7684\u52A8\u753B\uFF08\u4F8B\u5982 <code>tween</code> \u6216 <code>keyframes</code>\uFF09\uFF0C\u76F4\u81F3\u8FBE\u5230\u6307\u5B9A\u7684\u8FED\u4EE3\u8BA1\u6570\u3002</p></li><li><p>\u5B9A\u4E49\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Stable</span>
<span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">&gt;</span> <span class="token function">repeatable</span><span class="token punctuation">(</span>
    iterations<span class="token operator">:</span> Int<span class="token punctuation">,</span>	<span class="token comment">// \u52A8\u753B\u7684\u91CD\u590D\u6B21\u6570</span>
    animation<span class="token operator">:</span> DurationBasedAnimationSpec<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span><span class="token punctuation">,</span>	<span class="token comment">// \u5C06\u8981\u91CD\u590D\u7684\u52A8\u753B</span>
    repeatMode<span class="token operator">:</span> RepeatMode <span class="token operator">=</span> RepeatMode<span class="token punctuation">.</span>Restart<span class="token punctuation">,</span>	<span class="token comment">// \u6307\u5B9A\u52A8\u753B\u662F\u4ECE\u5F00\u59CB\u8FD8\u662F\u4ECE\u7ED3\u5C3E\u5F00\u59CB\u91CD\u590D\u64AD\u653E</span>
    initialStartOffset<span class="token operator">:</span> StartOffset <span class="token operator">=</span> <span class="token function">StartOffset</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>	
<span class="token punctuation">)</span><span class="token operator">:</span> RepeatableSpec<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span> <span class="token operator">=</span>
    <span class="token function">RepeatableSpec</span><span class="token punctuation">(</span>iterations<span class="token punctuation">,</span> animation<span class="token punctuation">,</span> repeatMode<span class="token punctuation">,</span> initialStartOffset<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u4F7F\u7528\u5B9E\u4F8B\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> value <span class="token keyword">by</span> <span class="token function">animateFloatAsState</span><span class="token punctuation">(</span>
    targetValue <span class="token operator">=</span> <span class="token number">1f</span><span class="token punctuation">,</span>
    animationSpec <span class="token operator">=</span> <span class="token function">repeatable</span><span class="token punctuation">(</span>
        iterations <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span>
        animation <span class="token operator">=</span> <span class="token function">tween</span><span class="token punctuation">(</span>durationMillis <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        repeatMode <span class="token operator">=</span> RepeatMode<span class="token punctuation">.</span>Reverse
    <span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>\u91CD\u590D\u65E0\u9650\u52A8\u753B----infiniteRepeatable\uFF1A</p><ul><li><p>\u4F5C\u7528\uFF1A\u65E0\u9650\u6B21\u91CD\u590D\u64AD\u653E\u52A8\u753B</p></li><li><p>\u5B9A\u4E49\uFF1A\u53C2\u6570\u542B\u4E49\u4E0E <strong>\u91CD\u590D\u6709\u9650\u52A8\u753B----repeatable</strong>\u76F8\u540C</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Stable</span>
<span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">&gt;</span> <span class="token function">infiniteRepeatable</span><span class="token punctuation">(</span>
    animation<span class="token operator">:</span> DurationBasedAnimationSpec<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span><span class="token punctuation">,</span>
    repeatMode<span class="token operator">:</span> RepeatMode <span class="token operator">=</span> RepeatMode<span class="token punctuation">.</span>Restart<span class="token punctuation">,</span>
    initialStartOffset<span class="token operator">:</span> StartOffset <span class="token operator">=</span> <span class="token function">StartOffset</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token operator">:</span> InfiniteRepeatableSpec<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span> <span class="token operator">=</span>
    <span class="token function">InfiniteRepeatableSpec</span><span class="token punctuation">(</span>animation<span class="token punctuation">,</span> repeatMode<span class="token punctuation">,</span> initialStartOffset<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u4F7F\u7528\u5B9E\u4F8B\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> value <span class="token keyword">by</span> <span class="token function">animateFloatAsState</span><span class="token punctuation">(</span>
    targetValue <span class="token operator">=</span> <span class="token number">1f</span><span class="token punctuation">,</span>
    animationSpec <span class="token operator">=</span> <span class="token function">infiniteRepeatable</span><span class="token punctuation">(</span>
        animation <span class="token operator">=</span> <span class="token function">tween</span><span class="token punctuation">(</span>durationMillis <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        repeatMode <span class="token operator">=</span> RepeatMode<span class="token punctuation">.</span>Reverse
    <span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>\u63D0\u524D\u7ED3\u675F\u52A8\u753B----snap\uFF1A</p><ul><li><p>\u4F5C\u7528\uFF1A\u63D0\u524D\u7ED3\u675F\u52A8\u753B\u7684\u64AD\u653E</p></li><li><p>\u503C\u5F97\u6CE8\u610F\u7684\u662F\uFF1A<code>snap</code> \u662F\u7279\u6B8A\u7684 <code>AnimationSpec</code>\uFF0C\u5B83\u4F1A\u7ACB\u5373\u5C06\u503C\u5207\u6362\u5230\u7ED3\u675F\u503C\u3002\u60A8\u53EF\u4EE5\u6307\u5B9A <code>delayMillis</code> \u6765\u5EF6\u8FDF\u52A8\u753B\u64AD\u653E\u7684\u5F00\u59CB\u65F6\u95F4\u3002</p></li><li><p>\u5B9A\u4E49\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Stable</span>
<span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">&gt;</span> <span class="token function">snap</span><span class="token punctuation">(</span>delayMillis<span class="token operator">:</span> Int <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> SnapSpec<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span><span class="token punctuation">(</span>delayMillis<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u4F7F\u7528\u5B9E\u4F8B\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> value <span class="token keyword">by</span> <span class="token function">animateFloatAsState</span><span class="token punctuation">(</span>
    targetValue <span class="token operator">=</span> <span class="token number">1f</span><span class="token punctuation">,</span>
    animationSpec <span class="token operator">=</span> <span class="token function">snap</span><span class="token punctuation">(</span>delayMillis <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul></li></ul><h2 id="\u77E2\u91CF\u52A8\u753B-animationvector" tabindex="-1"><a class="header-anchor" href="#\u77E2\u91CF\u52A8\u753B-animationvector" aria-hidden="true">#</a> \u77E2\u91CF\u52A8\u753B----AnimationVector</h2><ul><li><p>\u5F15\u5165\uFF1A\u5927\u591A\u6570 Compose \u52A8\u753B API \u90FD\u652F\u6301\u5C06 <code>Float</code>\u3001<code>Color</code>\u3001<code>Dp</code> \u4EE5\u53CA\u5176\u4ED6\u57FA\u672C\u6570\u636E\u7C7B\u578B\u4F5C\u4E3A\u5F00\u7BB1\u5373\u7528\u7684\u52A8\u753B\u503C\uFF0C\u4F46\u6709\u65F6\u60A8\u9700\u8981\u4E3A\u5176\u4ED6\u6570\u636E\u7C7B\u578B\uFF08\u5305\u62EC\u60A8\u7684\u81EA\u5B9A\u4E49\u7C7B\u578B\uFF09\u6DFB\u52A0\u52A8\u753B\u6548\u679C\u3002\u800C\u4E8B\u5B9E\u4E0A\uFF0C\u5728\u52A8\u753B\u64AD\u653E\u671F\u95F4\uFF0C\u4EFB\u4F55\u52A8\u753B\u503C\u90FD\u8868\u793A\u4E3A <code>AnimationVector</code>\u3002\u6240\u4EE5\uFF0C\u95EE\u9898\u8F6C\u6362\u4E3A\u5982\u4F55\u5C06\u5176\u4ED6\u6570\u636E\u7C7B\u578B\u8F6C\u6362\u4E3A <code>AnimationVector</code>\u5373\u53EF\u3002\u81F3\u4E8E\u65B9\u6CD5\u4E5F\u5F88\u7B80\u5355\uFF0C\u5C31\u662F\u4F7F\u7528\u76F8\u5E94\u7684 <code>TwoWayConverter</code> \u5373\u53EF\u5C06\u503C\u8F6C\u6362\u4E3A <code>AnimationVector</code>\uFF0C\u53CD\u4E4B\u4EA6\u7136\uFF0C\u8FD9\u6837\u4E00\u6765\uFF0C\u6838\u5FC3\u52A8\u753B\u7CFB\u7EDF\u5C31\u53EF\u4EE5\u7EDF\u4E00\u5BF9\u5176\u8FDB\u884C\u5904\u7406\u3002</p></li><li><p>\u5E38\u89C4\u8F6C\u6362\u4E3E\u4F8B\uFF1A</p><ul><li><p><code>Int</code> \u8868\u793A\u4E3A\u5305\u542B\u5355\u4E2A\u6D6E\u70B9\u503C\u7684 <code>AnimationVector1D</code>\u3002\u7528\u4E8E <code>Int</code> \u7684 <code>TwoWayConverter</code> \u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> IntToVector<span class="token operator">:</span> TwoWayConverter<span class="token operator">&lt;</span>Int<span class="token punctuation">,</span> AnimationVector1D<span class="token operator">&gt;</span> <span class="token operator">=</span>
    <span class="token function">TwoWayConverter</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token function">AnimationVector1D</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> it<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>Color</code> \u5B9E\u9645\u4E0A\u662F red\u3001green\u3001blue \u548C alpha \u8FD9 4 \u4E2A\u503C\u7684\u96C6\u5408\uFF0C\u56E0\u6B64\uFF0C<code>Color</code> \u53EF\u8F6C\u6362\u4E3A\u5305\u542B 4 \u4E2A\u6D6E\u70B9\u503C\u7684 <code>AnimationVector4D</code>\u3002\u901A\u8FC7\u8FD9\u79CD\u65B9\u5F0F\uFF0C\u52A8\u753B\u4E2D\u4F7F\u7528\u7684\u6BCF\u79CD\u6570\u636E\u7C7B\u578B\u90FD\u53EF\u4EE5\u6839\u636E\u5176\u7EF4\u5EA6\u8F6C\u6362\u4E3A <code>AnimationVector1D</code>\u3001<code>AnimationVector2D</code>\u3001<code>AnimationVector3D</code> \u6216 <code>AnimationVector4D</code>\u3002\u8FD9\u6837\u53EF\u4E3A\u5BF9\u8C61\u7684\u4E0D\u540C\u7EC4\u4EF6\u5355\u72EC\u6DFB\u52A0\u52A8\u753B\u6548\u679C\uFF0C\u4E14\u6BCF\u4E2A\u7EC4\u4EF6\u90FD\u6709\u81EA\u5DF1\u7684\u901F\u5EA6\u8F68\u8FF9\u3002\u60A8\u53EF\u4EE5\u4F7F\u7528 <code>Color.VectorConverter</code>\u3001<code>Dp.VectorConverter</code> \u7B49\u8BBF\u95EE\u9488\u5BF9\u57FA\u672C\u6570\u636E\u7C7B\u578B\u7684\u5185\u7F6E\u8F6C\u6362\u5668\u3002</p></li></ul></li><li><p>\u81EA\u5B9A\u4E49\u8F6C\u6362\uFF1A</p><ul><li>\u5982\u9700\u652F\u6301\u4F5C\u4E3A\u52A8\u753B\u503C\u7684\u65B0\u6570\u636E\u7C7B\u578B\uFF0C\u60A8\u53EF\u4EE5\u521B\u5EFA\u81EA\u5DF1\u7684 <code>TwoWayConverter</code> \u5E76\u5C06\u5176\u63D0\u4F9B\u7ED9 API\u3002\u4F8B\u5982\uFF0C\u60A8\u53EF\u4EE5\u4F7F\u7528 <code>animateValueAsState</code> \u4E3A\u81EA\u5B9A\u4E49\u6570\u636E\u7C7B\u578B\u6DFB\u52A0\u52A8\u753B\u6548\u679C\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</li></ul><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">MySize</span><span class="token punctuation">(</span><span class="token keyword">val</span> width<span class="token operator">:</span> Dp<span class="token punctuation">,</span> <span class="token keyword">val</span> height<span class="token operator">:</span> Dp<span class="token punctuation">)</span>

<span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> <span class="token function">MyAnimation</span><span class="token punctuation">(</span>targetSize<span class="token operator">:</span> MySize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> animSize<span class="token operator">:</span> MySize <span class="token keyword">by</span> animateValueAsState<span class="token operator">&lt;</span>MySize<span class="token punctuation">,</span> AnimationVector2D<span class="token operator">&gt;</span><span class="token punctuation">(</span>
        targetSize<span class="token punctuation">,</span>
        <span class="token function">TwoWayConverter</span><span class="token punctuation">(</span>
            convertToVector <span class="token operator">=</span> <span class="token punctuation">{</span> size<span class="token operator">:</span> MySize <span class="token operator">-&gt;</span>
                <span class="token comment">// Extract a float value from each of the \`Dp\` fields.</span>
                <span class="token function">AnimationVector2D</span><span class="token punctuation">(</span>size<span class="token punctuation">.</span>width<span class="token punctuation">.</span>value<span class="token punctuation">,</span> size<span class="token punctuation">.</span>height<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            convertFromVector <span class="token operator">=</span> <span class="token punctuation">{</span> vector<span class="token operator">:</span> AnimationVector2D <span class="token operator">-&gt;</span>
                <span class="token function">MySize</span><span class="token punctuation">(</span>vector<span class="token punctuation">.</span>v1<span class="token punctuation">.</span>dp<span class="token punctuation">,</span> vector<span class="token punctuation">.</span>v2<span class="token punctuation">.</span>dp<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\u5B9A\u4E49\u4E86\u4E00\u4E2A\u6570\u636E\u7C7B <code>MySize</code>\uFF0C\u5B83\u6709\u4E24\u4E2A\u53C2\u6570\uFF1Awidth \u548C height\u3002\u7531\u4E8E <code>MySize</code> \u6709\u4E24\u4E2A\u53C2\u6570\uFF0C\u6240\u4EE5\u53EF\u4EE5\u8F6C\u6362\u4E3A\u5305\u542B\u4E24\u4E2A\u6D6E\u70B9\u503C\u7684 <code>AnimationVector2D</code>\uFF0C\u8FD9\u6837\u5C31\u4E3A <code>MySize</code> \u72EC\u7ACB\u6DFB\u52A0\u4E86\u52A8\u753B\u6548\u679C\u3002</p></li></ul><h2 id="\u5982\u4F55\u9009\u62E9\u5408\u9002\u7684\u52A8\u753B" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u9009\u62E9\u5408\u9002\u7684\u52A8\u753B" aria-hidden="true">#</a> \u5982\u4F55\u9009\u62E9\u5408\u9002\u7684\u52A8\u753B</h2><ul><li><p>\u4E0B\u9762\u7684\u56FE\u8868\u53EF\u4EE5\u5E2E\u52A9\u60A8\u786E\u5B9A\u8981\u4F7F\u7528\u54EA\u79CD API \u6765\u5B9E\u73B0\u60A8\u7684\u52A8\u753B\u6548\u679C\u3002</p><ul><li>\u5982\u679C\u60A8\u8981\u4E3A\u5E03\u5C40\u4E2D\u7684\u5185\u5BB9\u53D8\u5316\u6DFB\u52A0\u52A8\u753B\u6548\u679C\uFF1A <ul><li>\u5982\u679C\u60A8\u8981\u4E3A\u51FA\u73B0\u548C\u6D88\u5931\u6DFB\u52A0\u52A8\u753B\u6548\u679C\uFF1A <ul><li>\u4F7F\u7528 <code>AnimatedVisibility</code>\u3002</li></ul></li><li>\u6839\u636E\u72B6\u6001\u4EA4\u6362\u5185\u5BB9\uFF1A <ul><li>\u5982\u679C\u60A8\u8981\u4E3A\u5185\u5BB9\u6DFB\u52A0\u6DE1\u5165\u6DE1\u51FA\u6548\u679C\uFF1A <ul><li>\u4F7F\u7528 <code>Crossfade</code>\u3002</li></ul></li><li>\u5426\u5219\u4F7F\u7528 <code>AnimatedContent</code>\u3002</li></ul></li><li>\u5426\u5219\u4F7F\u7528 <code>Modifier.animateContentSize</code>\u3002</li></ul></li><li>\u5982\u679C\u52A8\u753B\u6548\u679C\u57FA\u4E8E\u72B6\u6001\uFF1A <ul><li>\u5982\u679C\u5728\u7EC4\u5408\u671F\u95F4\u5448\u73B0\u52A8\u753B\u6548\u679C\uFF1A <ul><li>\u5982\u679C\u52A8\u753B\u6548\u679C\u65E0\u9650\u5FAA\u73AF\uFF1A <ul><li>\u4F7F\u7528 <code>rememberInfiniteTransition</code>\u3002</li></ul></li><li>\u5982\u679C\u60A8\u8981\u540C\u65F6\u4E3A\u591A\u4E2A\u503C\u6DFB\u52A0\u52A8\u753B\u6548\u679C\uFF1A <ul><li>\u4F7F\u7528 <code>updateTransition</code>\u3002</li></ul></li><li>\u5426\u5219\u4F7F\u7528 <code>animate*AsState</code>\u3002</li></ul></li></ul></li><li>\u5982\u679C\u60A8\u8981\u5BF9\u52A8\u753B\u64AD\u653E\u65F6\u95F4\u8FDB\u884C\u7CBE\u7EC6\u63A7\u5236\uFF1A <ul><li>\u4F7F\u7528 <code>Animation</code>\u3002</li></ul></li><li>\u5982\u679C\u52A8\u753B\u662F\u552F\u4E00\u53EF\u4FE1\u6765\u6E90\uFF1A <ul><li>\u4F7F\u7528 <code>Animatable</code>\u3002</li></ul></li><li>\u5426\u5219\uFF0C\u8BF7\u4F7F\u7528 <code>AnimationState</code> \u6216 <code>animate</code>\u3002</li></ul><p><img src="https://raw.githubusercontent.com/CoderWDD/myImages/main/blog_images/animation-flowchart.svg" alt="animation-flowchart" loading="lazy"></p></li></ul><h2 id="\u53C2\u8003-\u63A8\u8350\u8D44\u6599" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003-\u63A8\u8350\u8D44\u6599" aria-hidden="true">#</a> \u53C2\u8003/\u63A8\u8350\u8D44\u6599</h2>`,16),Yn={href:"https://developer.android.google.cn/jetpack/compose/animation?authuser=0#overview",target:"_blank",rel:"noopener noreferrer"},Zn=s("\u5B98\u65B9\u6587\u6863"),ns={href:"https://juejin.cn/post/7040359742207688718",target:"_blank",rel:"noopener noreferrer"},ss=s("\u6398\u91D1-Compose\u4E2D\u7684\u7B80\u5355\u52A8\u753B"),as={href:"https://blog.csdn.net/qq_17766199/article/details/124936353",target:"_blank",rel:"noopener noreferrer"},ts=s("CSDN - Compose \u4ECE\u5165\u95E8\u5230\u5165\u95E8");function es(os,ps){const t=p("ExternalLinkIcon");return i(),c(l,null,[r,n("ul",null,[d,n("li",null,[n("p",null,[k,v,m,b,g,f,h,n("a",y,[w,e(t)]),_]),S]),n("li",null,[x,n("p",null,[T,C,n("a",A,[D,e(t)]),V,M,I]),z])]),E,n("ul",null,[q,n("li",null,[n("p",null,[B,n("a",R,[F,e(t)])])])]),O,P,L,n("ul",null,[W,n("li",null,[n("p",null,[N,j,U,H,K,G,X,$,J,Q,Y,n("a",Z,[nn,e(t)]),sn]),an]),tn]),en,n("ul",null,[on,n("li",null,[pn,n("ul",null,[cn,n("li",null,[ln,un,rn,dn,kn,vn,mn,bn,n("a",gn,[fn,e(t)]),hn])])])]),yn,n("ul",null,[wn,n("li",null,[_n,n("ul",null,[Sn,n("li",null,[n("p",null,[xn,Tn,Cn,An,Dn,n("a",Vn,[Mn,e(t)]),In]),zn]),En,n("li",null,[n("p",null,[qn,n("a",Bn,[Rn,e(t)]),Fn]),On])])])]),Pn,n("p",null,[n("a",Ln,[Wn,e(t)]),Nn,n("a",jn,[Un,e(t)]),Hn]),Kn,n("p",null,[Gn,n("a",Xn,[$n,e(t)]),Jn]),Qn,n("p",null,[n("a",Yn,[Zn,e(t)])]),n("p",null,[n("a",ns,[ss,e(t)])]),n("p",null,[n("a",as,[ts,e(t)])])],64)}var ls=o(u,[["render",es],["__file","Compose\u52A8\u753B.html.vue"]]);export{ls as default};
