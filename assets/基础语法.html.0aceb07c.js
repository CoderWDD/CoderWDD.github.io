import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{e as s}from"./app.e3832148.js";const a={},t=s(`<h1 id="\u57FA\u7840\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840\u8BED\u6CD5" aria-hidden="true">#</a> \u57FA\u7840\u8BED\u6CD5</h1><p>\u8BB0\u5F55Kotlin\u7684\u57FA\u672C\u8BED\u6CD5\uFF0C\u5E2E\u52A9\u5FEB\u901F\u5165\u95E8\u4E0A\u624B\uFF0C\u9700\u8981\u5BF9\u7F16\u7A0B\u57FA\u7840\u6982\u5FF5\u6709\u4E00\u5B9A\u4E86\u89E3\u3002</p><h2 id="\u53D8\u91CF\u3001\u5E38\u91CF" tabindex="-1"><a class="header-anchor" href="#\u53D8\u91CF\u3001\u5E38\u91CF" aria-hidden="true">#</a> \u53D8\u91CF\u3001\u5E38\u91CF</h2><ul><li><p>\u57FA\u672C\u4F7F\u7528\uFF1A<code>keyword name : type = value</code></p><ul><li><p>\u5E38\u91CF\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> a<span class="token operator">:</span> Int <span class="token operator">=</span> <span class="token number">1</span>  <span class="token comment">// immediate assignment</span>
<span class="token keyword">val</span> b <span class="token operator">=</span> <span class="token number">2</span>   	<span class="token comment">// \`Int\` type is inferred</span>
<span class="token keyword">val</span> c<span class="token operator">:</span> Int  	<span class="token comment">// Type required when no initializer is provided</span>
c <span class="token operator">=</span> <span class="token number">3</span>       	<span class="token comment">// deferred assignment</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u53D8\u91CF\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">5</span> <span class="token comment">// \`Int\` type is inferred</span>
x <span class="token operator">+=</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h2 id="\u53D8\u91CF\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u53D8\u91CF\u7C7B\u578B" aria-hidden="true">#</a> \u53D8\u91CF\u7C7B\u578B</h2><ul><li><p>\u6982\u5FF5\uFF1AKotlin\u53EA\u63D0\u4F9B<code>\u5F15\u7528\u7C7B\u578B</code>\u8FD9\u4E00\u79CD\u6570\u636E\u7C7B\u578B\uFF0C\u4F46\u662F\uFF0CKotlin\u7F16\u8BD1\u5668\u4F1A\u5728Java\u5B57\u8282\u7801\u4E2D\u6539\u7528\u57FA\u672C\u6570\u636E\u7C7B\u578B\uFF0C\u4EE5\u63D0\u9AD8\u5176\u6027\u80FD</p></li><li><p>\u57FA\u672C\u6570\u636E\u7C7B\u578B\uFF1A</p><table><thead><tr><th style="text-align:center;">\u7C7B\u578B</th><th style="text-align:center;">\u4F4D\u5BBD\u5EA6</th></tr></thead><tbody><tr><td style="text-align:center;">Double</td><td style="text-align:center;">64</td></tr><tr><td style="text-align:center;">Float</td><td style="text-align:center;">32</td></tr><tr><td style="text-align:center;">Long</td><td style="text-align:center;">64</td></tr><tr><td style="text-align:center;">Int</td><td style="text-align:center;">32</td></tr><tr><td style="text-align:center;">Short</td><td style="text-align:center;">16</td></tr><tr><td style="text-align:center;">Byte</td><td style="text-align:center;">8</td></tr></tbody></table></li><li><p>Nothing\u7C7B\u578B\uFF1A</p><ul><li>TODO\u51FD\u6570\u7684\u4EFB\u52A1\u5C31\u662F\u629B\u51FA\u5F02\u5E38\uFF0C\u6C38\u8FDC\u4E0D\u4F1A\u8FD0\u884C\u6210\u529F\uFF0C\u8FD4\u56DENothing\u7C7B\u578B</li></ul></li></ul><h2 id="\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> \u8868\u8FBE\u5F0F</h2><ul><li><p>\u6761\u4EF6\u8868\u8FBE\u5F0F<code>if</code>\uFF1A</p><ul><li><p>\u5E38\u89C4\u5E94\u7528\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">fun</span> <span class="token function">max</span><span class="token punctuation">(</span>a<span class="token operator">:</span> Int<span class="token punctuation">,</span>b<span class="token operator">:</span> Int<span class="token punctuation">)</span><span class="token operator">:</span> Int<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b<span class="token punctuation">)</span> <span class="token keyword">return</span> a
    <span class="token keyword">else</span> <span class="token keyword">return</span> b
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u4F5C\u4E3A\u6761\u4EF6\u8868\u8FBE\u5F0F\uFF1A<strong>kotlin\u6CA1\u6709\u4E09\u76EE\u8FD0\u7B97\u7B26\uFF0C\u7528if\u8868\u8FBE\u5F0F\u4EE3\u66FF</strong></p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">fun</span> <span class="token function">max</span><span class="token punctuation">(</span>a<span class="token operator">:</span> Int<span class="token punctuation">,</span>b<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b<span class="token punctuation">)</span> <span class="token keyword">else</span> b
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li><li><p>\u6761\u4EF6\u8868\u8FBE\u5F0F<code>when</code>\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">when</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token number">1</span> <span class="token operator">-&gt;</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;x == 1&quot;</span></span><span class="token punctuation">)</span>
    <span class="token number">2</span> <span class="token operator">-&gt;</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;x == 2&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">else</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;x is neither 1 nor 2&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570" aria-hidden="true">#</a> \u51FD\u6570</h2><ul><li><p>\u5B9A\u4E49\uFF1A<code>fun name(parameters): ReturnType{}</code></p></li><li><p>\u6848\u4F8B\uFF1A</p><ul><li><p>\u5E38\u89C4\u5B9A\u4E49\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">fun</span> <span class="token function">sum</span><span class="token punctuation">(</span>a<span class="token operator">:</span> Int<span class="token punctuation">,</span> b<span class="token operator">:</span> Int<span class="token punctuation">)</span><span class="token operator">:</span> Int <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u51FD\u6570\u4F53\u4E3A\u8868\u8FBE\u5F0F\uFF1A<strong>\u6B64\u65F6\u8FD4\u56DE\u503C\u7C7B\u578B\u4F1A\u81EA\u52A8\u63A8\u65AD</strong></p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">fun</span> <span class="token function">sum</span><span class="token punctuation">(</span>a<span class="token operator">:</span> Int<span class="token punctuation">,</span> b<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token operator">=</span> a <span class="token operator">+</span> b
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>\u5E26\u7F3A\u7701\u503C\u7684\u51FD\u6570\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">fun</span> <span class="token function">printInfo</span><span class="token punctuation">(</span>name<span class="token operator">:</span> String <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;name&quot;</span></span><span class="token punctuation">,</span>age<span class="token operator">:</span> Int <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
    <span class="token function">print</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Kotlin\u7684\u51FD\u6570\u53C2\u6570\u53EF\u4EE5\u7528\u5F62\u53C2\u540D\u6307\u5B9A,<code>\u53EF\u4EE5\u4E0D\u6309\u987A\u5E8F</code>\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">fun</span> <span class="token function">printInfo</span><span class="token punctuation">(</span>name<span class="token operator">:</span> String <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;name&quot;</span></span><span class="token punctuation">,</span>age<span class="token operator">:</span> Int <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
    <span class="token function">print</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8C03\u7528</span>
<span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">printInfo</span><span class="token punctuation">(</span>age <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">,</span>name <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;happy&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>\u53EF\u53D8\u957F\u53C2\u6570\u51FD\u6570\uFF1A<strong>\u7528<code>vararg</code>\u8FDB\u884C\u6807\u8BC6</strong></p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">fun</span> <span class="token function">vars</span><span class="token punctuation">(</span><span class="token keyword">vararg</span> v<span class="token operator">:</span> Int<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span>vt <span class="token keyword">in</span> v<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">print</span><span class="token punctuation">(</span>vt<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D4B\u8BD5</span>
<span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">vars</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>  <span class="token comment">// \u8F93\u51FA12345</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>TODO\u51FD\u6570\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token comment">// \u539F\u578B</span>
<span class="token keyword">public</span> <span class="token keyword">inline</span> <span class="token keyword">fun</span> <span class="token function">TODO</span><span class="token punctuation">(</span>reason<span class="token operator">:</span> String<span class="token punctuation">)</span><span class="token operator">:</span> Nothing <span class="token operator">=</span> <span class="token keyword">throw</span> NotImplementedError<span class="token punctuation">;</span>

<span class="token comment">// \u6D4B\u8BD5</span>
<span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">TODO</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;no reason&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    i<span class="token operator">++</span>
    <span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u533F\u540D\u51FD\u6570\uFF1A<code>\u5982\u679C\u6709\u8FD4\u56DE\u503C\uFF0C\u9ED8\u8BA4\u4F1A\u8FD4\u56DE\u6700\u540E\u4E00\u4E2A\u8BED\u53E5\u7684\u503C</code></p><ul><li><p>\u533F\u540D\u51FD\u6570\u6CA1\u6709\u53C2\u6570\u65F6\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> total<span class="token operator">:</span> Int <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Mississippi&quot;</span></span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">println</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span>
    <span class="token comment">// \u533F\u540D\u51FD\u6570\uFF0Clambda</span>
    <span class="token keyword">val</span> totals<span class="token operator">:</span> Int <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Mississippi&quot;</span></span><span class="token punctuation">.</span><span class="token function">count</span> <span class="token punctuation">{</span> letter <span class="token operator">-&gt;</span> letter <span class="token operator">==</span> <span class="token char">&#39;s&#39;</span> <span class="token punctuation">}</span>
    <span class="token function">println</span><span class="token punctuation">(</span>totals<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u533F\u540D\u51FD\u6570\u5E26\u53C2\u6570\u65F6\uFF0C\u5219\u53C2\u6570\u7684\u7C7B\u578B\u653E\u5728\u533F\u540D\u51FD\u6570\u7684\u7C7B\u578B\u5B9A\u4E49\u4E2D\uFF0C\u53C2\u6570\u540D\u653E\u5728\u51FD\u6570\u5B9A\u4E49\u4E2D\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> countS<span class="token operator">:</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Int <span class="token operator">=</span> <span class="token punctuation">{</span> str<span class="token operator">-&gt;</span>
        str<span class="token punctuation">.</span><span class="token function">count</span> <span class="token punctuation">{</span> letter<span class="token operator">-&gt;</span>letter <span class="token operator">==</span> <span class="token char">&#39;s&#39;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token function">countS</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Mississippi&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>it</code>\u5173\u952E\u5B57\uFF1A\u5B9A\u4E49<strong>\u53EA\u6709\u4E00\u4E2A\u53C2\u6570</strong>\u7684\u533F\u540D\u51FD\u6570\u65F6\uFF0C\u53EF\u4EE5\u7528<code>it</code>\u5173\u952E\u5B57\u8868\u793A\u53C2\u6570\u540D\u3002</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> countS<span class="token operator">:</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Int <span class="token operator">=</span> <span class="token punctuation">{</span>
        it<span class="token punctuation">.</span><span class="token function">count</span> <span class="token punctuation">{</span> letter<span class="token operator">-&gt;</span>letter <span class="token operator">==</span> <span class="token char">&#39;s&#39;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token function">countS</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Mississippi&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>lambda\uFF1A</p><ul><li><p>\u4F18\u7F3A\u70B9\uFF1A</p><ul><li>\u597D\u5904\uFF1A\u66F4\u7075\u6D3B\u3001\u7F16\u5199\u66F4\u9AD8\u6548</li><li>\u574F\u5904\uFF1A\u5728JVM\u4E0A\uFF0Clambda\u4F1A\u4EE5\u5BF9\u8C61\u5B9E\u4F8B\u7684\u5F62\u5F0F\u5B58\u5728\uFF0CJVM\u4F1A\u4E3A\u6240\u6709\u540Clambda\u6253\u4EA4\u9053\u7684\u53D8\u91CF\u5206\u914D\u5185\u5B58\uFF0C\u5BFC\u81F4\u5185\u5B58\u5F00\u9500\u53D8\u5927\uFF0C\u53EF\u80FD\u5E26\u6765\u4E25\u91CD\u7684\u6027\u80FD\u95EE\u9898</li></ul></li><li><p>\u89E3\u51B3\u65B9\u6848\uFF1A<code>\u51FD\u6570\u5185\u8054\uFF1Ainline</code></p><ul><li>\u89E3\u51B3\u539F\u7406\uFF1A\u51FD\u6570\u5185\u8054\u53EF\u4EE5\u8BB2lambda\u76F4\u63A5\u590D\u5236\u5230\u9700\u8981\u7528\u5230\u7684\u5730\u65B9\uFF0C\u907F\u514D\u4E86\u5185\u5B58\u5F00\u9500</li><li>\u6CE8\uFF1A\u4F7F\u7528<strong>lambda\u7684\u9012\u5F52\u51FD\u6570\u4E0D\u80FD\u4F7F\u7528\u5185\u8054</strong>\uFF0C\u5426\u5219\u4F1A\u5BFC\u81F4\u65E0\u9650\u590D\u5236\u7C98\u8D34\uFF0C\u5185\u5B58\u7206\u70B8\u90FD\u662F\u6709\u53EF\u80FD\u7684\uFF0C\u56E0\u6B64\u5F53\u8FD9\u4E48\u4F7F\u7528\u65F6\uFF0C\u7F16\u8BD1\u5668\u4F1A\u53D1\u51FA\u8B66\u544A</li></ul></li><li><p>\u8303\u4F8B\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> getDiscountWords <span class="token operator">=</span> <span class="token punctuation">{</span>goodsName<span class="token operator">:</span>String<span class="token punctuation">,</span>hour<span class="token operator">:</span>Int <span class="token operator">-&gt;</span>
        <span class="token keyword">val</span> currentYear <span class="token operator">=</span> <span class="token number">2017</span>
        <span class="token string-literal singleline"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">currentYear</span></span><span class="token string"> year </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">goodsName</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">hour</span></span><span class="token string">&quot;</span></span>
    <span class="token punctuation">}</span>
    <span class="token function">showOnBoard</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;happy&quot;</span></span><span class="token punctuation">,</span> getDiscountWords<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">fun</span> <span class="token function">showOnBoard</span><span class="token punctuation">(</span>goodsName<span class="token operator">:</span>String<span class="token punctuation">,</span>getDiscountWords<span class="token operator">:</span> <span class="token punctuation">(</span>String<span class="token punctuation">,</span>Int<span class="token punctuation">)</span><span class="token operator">-&gt;</span>String<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">val</span> hour<span class="token operator">:</span>Int <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">..</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">shuffled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">last</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token function">getDiscountWords</span><span class="token punctuation">(</span>goodsName<span class="token punctuation">,</span>hour<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>\u51FD\u6570\u5F15\u7528\uFF1A</p><ul><li><p>\u5F15\u5165\uFF1A\u8981\u628A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u4F20\u7ED9\u5176\u4ED6\u51FD\u6570\u4F7F\u7528\uFF0C\u9664\u4E86\u4F20lambda\u8868\u8FBE\u5F0F\uFF0C kotlin\u8FD8\u63D0\u4F9B\u4E86\u5176\u4ED6\u65B9\u6CD5\uFF0C<strong>\u5373\u4F20\u9012\u51FD\u6570\u5F15\u7528</strong>\uFF0C\u51FD\u6570\u5F15\u7528\u53EF\u4EE5\u628A\u4E00\u4E2A\u5177\u540D\u51FD\u6570\u8F6C\u6362\u6210\u4E00\u4E2A\u503C\u53C2\uFF0C<strong>\u4F7F\u7528lambda\u8868\u8FBE\u5F0F\u7684\u5730\u65B9\uFF0C\u90FD\u53EF\u4EE5\u4F7F\u7528\u51FD\u6570\u5F15\u7528\u3002</strong></p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">showOnBoard</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;happy&quot;</span></span><span class="token punctuation">,</span> <span class="token operator">::</span>getDiscountWords<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">fun</span> <span class="token function">showOnBoard</span><span class="token punctuation">(</span>goodsName<span class="token operator">:</span>String<span class="token punctuation">,</span>getDiscountWords<span class="token operator">:</span> <span class="token punctuation">(</span>String<span class="token punctuation">,</span>Int<span class="token punctuation">)</span><span class="token operator">-&gt;</span>String<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">val</span> hour<span class="token operator">:</span>Int <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">..</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">shuffled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">last</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token function">getDiscountWords</span><span class="token punctuation">(</span>goodsName<span class="token punctuation">,</span>hour<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">fun</span> <span class="token function">getDiscountWords</span><span class="token punctuation">(</span>goodsName<span class="token operator">:</span> String<span class="token punctuation">,</span>hour<span class="token operator">:</span> Int<span class="token punctuation">)</span><span class="token operator">:</span> String<span class="token punctuation">{</span>
    <span class="token keyword">val</span> currentYear <span class="token operator">=</span> <span class="token number">2017</span>
    <span class="token keyword">return</span> <span class="token string-literal singleline"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">currentYear</span></span><span class="token string"> year </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">goodsName</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">hour</span></span><span class="token string">&quot;</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ul><h2 id="\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#\u5FAA\u73AF" aria-hidden="true">#</a> \u5FAA\u73AF</h2><ul><li><p><code>for</code>\u5FAA\u73AF\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> items <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;apple&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;banana&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;kiwifruit&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>item <span class="token keyword">in</span> items<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">println</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>while</code>\u5FAA\u73AF\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> items <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;apple&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;banana&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;kiwifruit&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> items<span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;item at </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">index</span></span><span class="token string"> is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">items<span class="token punctuation">[</span>index<span class="token punctuation">]</span></span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    index<span class="token operator">++</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u5FAA\u73AF\u63A7\u5236\u8DF3\u8F6C\uFF1A</p><ul><li>\u8DF3\u51FA\u5F53\u524D\u5FAA\u73AF\u4F53\uFF1A<code>break</code></li><li>\u7ED3\u675F\u672C\u6B21\u5FAA\u73AF\uFF0C\u8FDB\u5165\u4E0B\u4E00\u6B21\u5FAA\u73AF\uFF1A<code>continue</code></li></ul></li></ul><h2 id="\u96C6\u5408\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u96C6\u5408\u7C7B" aria-hidden="true">#</a> \u96C6\u5408\u7C7B</h2><ul><li><p>\u5E38\u89C1\u96C6\u5408\u7C7B\uFF1A<code>\u5217\u8868\uFF08List\uFF09</code>\u3001<code>\u96C6\uFF08Set\uFF09</code>\u3001<code>\u6620\u5C04\uFF08Map\uFF09</code></p></li><li><p>\u5206\u7C7B\uFF1A\u53EF\u53D8\u96C6\u5408\u7C7B\u3001\u4E0D\u53EF\u53D8\u96C6\u5408\u7C7B</p><ul><li>\u53EF\u53D8\u96C6\u5408\uFF1A<code>Mutable</code>\uFF0C\u53EF\u5199\u5165\u3001\u5220\u9664\u3001\u4FEE\u6539\u3001\u8BFB\u53D6\u6570\u636E</li><li>\u4E0D\u53EF\u53D8\u96C6\u5408\uFF1A<code>Immutable</code>\uFF0C\u53EA\u80FD\u8BFB\u53D6\u6570\u636E</li></ul></li><li><p>\u53EF\u53D8\u96C6\u5408\u7C7B\uFF1A</p><ul><li><p>\u521B\u5EFA\u65B9\u6CD5\uFF1A<code>listOf()</code>\u3001<code>setOf()</code>\u3001<code>mapOf()</code></p></li><li><p>\u4F7F\u7528\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> list <span class="token operator">=</span> <span class="token function">listOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> <span class="token keyword">set</span> <span class="token operator">=</span> <span class="token function">setOf</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span>
<span class="token keyword">val</span> map <span class="token operator">=</span> <span class="token function">mapOf</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">to</span> <span class="token string-literal singleline"><span class="token string">&quot;a&quot;</span></span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token keyword">to</span> <span class="token string-literal singleline"><span class="token string">&quot;b&quot;</span></span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token keyword">to</span> <span class="token string-literal singleline"><span class="token string">&quot;c&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>\u4E0D\u53EF\u53D8\u96C6\u5408\uFF1A</p><ul><li><p>\u521B\u5EFA\u65B9\u6CD5\uFF1A<code>MutableListOf()</code>,<code>MutableSetOf()</code>,<code>MutableMapOf()</code></p></li><li><p>\u4F7F\u7528\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> mutableList <span class="token operator">=</span> <span class="token function">mutableListOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;a&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;b&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;c&quot;</span></span><span class="token punctuation">)</span>  <span class="token comment">//\u521B\u5EFA\u53EF\u53D8MutableList</span>
<span class="token keyword">val</span> mutableSet <span class="token operator">=</span> <span class="token function">mutableSetOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;a&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;b&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;c&quot;</span></span><span class="token punctuation">)</span> <span class="token comment">//\u521B\u5EFA\u53EF\u53D8\u7684MutableSet</span>
<span class="token keyword">val</span> mutableMap <span class="token operator">=</span> <span class="token function">mutableMapOf</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">to</span> <span class="token string-literal singleline"><span class="token string">&quot;X&quot;</span></span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token keyword">to</span> <span class="token string-literal singleline"><span class="token string">&quot;Y&quot;</span></span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token keyword">to</span> <span class="token string-literal singleline"><span class="token string">&quot;Z&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>\u904D\u5386\u96C6\u5408\u7684\u5143\u7D20\uFF1A<strong>List\u3001Set\u7C7B \u7EE7\u627F\u4E86 <code>Iterable</code> \u63A5\u53E3\uFF0C\u6269\u5C55\u4E86 <code>forEach()</code> \u51FD\u6570\u6765\u904D\u5386\u5143\u7D20\uFF1BMap\u7C7B\u4E5F\u6269\u5C55\u4E86 <code>forEach()</code> \u51FD\u6570\u6765\u904D\u5386\u5143\u7D20</strong></p><ul><li><p><code>foreach</code>\uFF1A<strong><code>it</code>\u8868\u793A\u5F53\u524D\u5143\u7D20</strong></p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code>list<span class="token punctuation">.</span><span class="token function">forEach</span> <span class="token punctuation">{</span>
     <span class="token function">println</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">set</span><span class="token punctuation">.</span><span class="token function">forEach</span> <span class="token punctuation">{</span>
     <span class="token function">println</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

map<span class="token punctuation">.</span><span class="token function">forEach</span> <span class="token punctuation">{</span>
     <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;K = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">it<span class="token punctuation">.</span>key</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, V = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">it<span class="token punctuation">.</span>value</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>for\u5FAA\u73AF</code>\uFF1A<strong>for \u53EF\u4EE5\u5FAA\u73AF\u904D\u5386\u4EFB\u4F55\u63D0\u4F9B\u4E86<code>Iterator</code>\u7684\u5BF9\u8C61</strong></p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">for</span> <span class="token punctuation">(</span>item <span class="token keyword">in</span> collection<span class="token punctuation">)</span> <span class="token function">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul></li></ul>`,14);function p(e,o){return t}var c=n(a,[["render",p],["__file","\u57FA\u7840\u8BED\u6CD5.html.vue"]]);export{c as default};
