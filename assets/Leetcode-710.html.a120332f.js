import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{r as e,o as l,c as i,a as n,d as p,F as c,b as s,e as o}from"./app.0603fa35.js";const u={},d=n("h2",{id:"\u9898\u76EE",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE","aria-hidden":"true"},"#"),s(" \u9898\u76EE")],-1),k=n("h3",{id:"\u94FE\u63A5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u94FE\u63A5","aria-hidden":"true"},"#"),s(" \u94FE\u63A5")],-1),r={href:"https://leetcode.cn/problems/random-pick-with-blacklist/",target:"_blank",rel:"noopener noreferrer"},v=s("Leetcode-710 \u9ED1\u540D\u5355\u4E2D\u7684\u968F\u673A\u6570"),m=o(`<h3 id="\u9898\u610F" tabindex="-1"><a class="header-anchor" href="#\u9898\u610F" aria-hidden="true">#</a> \u9898\u610F</h3><ul><li><p>\u7ED9\u5B9A\u4E00\u4E2A\u6574\u6570 n \u548C\u4E00\u4E2A \u65E0\u91CD\u590D \u9ED1\u540D\u5355\u6574\u6570\u6570\u7EC4 blacklist \u3002\u8BBE\u8BA1\u4E00\u79CD\u7B97\u6CD5\uFF0C\u4ECE [0, n - 1] \u8303\u56F4\u5185\u7684\u4EFB\u610F\u6574\u6570\u4E2D\u9009\u53D6\u4E00\u4E2A \u672A\u52A0\u5165 \u9ED1\u540D\u5355 blacklist \u7684\u6574\u6570\u3002\u4EFB\u4F55\u5728\u4E0A\u8FF0\u8303\u56F4\u5185\u4E14\u4E0D\u5728\u9ED1\u540D\u5355 blacklist \u4E2D\u7684\u6574\u6570\u90FD\u5E94\u8BE5\u6709 \u540C\u7B49\u7684\u53EF\u80FD\u6027 \u88AB\u8FD4\u56DE\u3002</p></li><li><p>\u4F18\u5316\u4F60\u7684\u7B97\u6CD5\uFF0C\u4F7F\u5B83\u6700\u5C0F\u5316\u8C03\u7528\u8BED\u8A00 \u5185\u7F6E \u968F\u673A\u51FD\u6570\u7684\u6B21\u6570\u3002</p></li><li><p>\u5B9E\u73B0 Solution \u7C7B:</p><ul><li>Solution(int n, int[] blacklist) \u521D\u59CB\u5316\u6574\u6570 n \u548C\u88AB\u52A0\u5165\u9ED1\u540D\u5355 blacklist \u7684\u6574\u6570</li><li>int pick() \u8FD4\u56DE\u4E00\u4E2A\u8303\u56F4\u4E3A [0, n - 1] \u4E14\u4E0D\u5728\u9ED1\u540D\u5355 blacklist \u4E2D\u7684\u968F\u673A\u6574\u6570</li></ul></li></ul><h3 id="\u63D0\u793A" tabindex="-1"><a class="header-anchor" href="#\u63D0\u793A" aria-hidden="true">#</a> \u63D0\u793A</h3><ul><li>1 &lt;= n &lt;= 10<sup>9</sup></li><li>0 &lt;= blacklist.length &lt;= min(10<sup>5</sup>, n - 1)</li><li>0 &lt;= blacklist[i] &lt; n</li><li>blacklist \u4E2D\u6240\u6709\u503C\u90FD\u4E0D\u540C</li><li>pick \u6700\u591A\u88AB\u8C03\u7528 2 * 10<sup>4</sup> \u6B21</li></ul><h3 id="\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a> \u793A\u4F8B</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165
[&quot;Solution&quot;, &quot;pick&quot;, &quot;pick&quot;, &quot;pick&quot;, &quot;pick&quot;, &quot;pick&quot;, &quot;pick&quot;, &quot;pick&quot;]
[[7, [2, 3, 5]], [], [], [], [], [], [], []]
\u8F93\u51FA
[null, 0, 4, 1, 6, 1, 0, 4]

\u89E3\u91CA
Solution solution = new Solution(7, [2, 3, 5]);
solution.pick(); // \u8FD4\u56DE0\uFF0C\u4EFB\u4F55[0,1,4,6]\u7684\u6574\u6570\u90FD\u53EF\u4EE5\u3002\u6CE8\u610F\uFF0C\u5BF9\u4E8E\u6BCF\u4E00\u4E2Apick\u7684\u8C03\u7528\uFF0C
                 // 0\u30011\u30014\u548C6\u7684\u8FD4\u56DE\u6982\u7387\u5FC5\u987B\u76F8\u7B49(\u5373\u6982\u7387\u4E3A1/4)\u3002
solution.pick(); // \u8FD4\u56DE 4
solution.pick(); // \u8FD4\u56DE 1
solution.pick(); // \u8FD4\u56DE 6
solution.pick(); // \u8FD4\u56DE 1
solution.pick(); // \u8FD4\u56DE 0
solution.pick(); // \u8FD4\u56DE 4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u5206\u6790" aria-hidden="true">#</a> \u5206\u6790</h2><ul><li>\u56E0\u4E3A\u9ED1\u540D\u5355 blacklist \u4E2D\u7684\u6570\uFF0C\u90FD\u662F\u5728 0~n \u4E4B\u95F4\uFF0C\u53EA\u662F\u5176\u6570\u5B57\u662F\u5206\u6563\u7684\u3002\u95EE\u9898\u5C31\u8F6C\u6362\u4E3A\u5728 0~n \u4E4B\u95F4\u627E\u4E0D\u5728 blacklist[] \u4E2D\u7684\u6570\uFF0C\u5E76\u968F\u673A\u8FD4\u56DE\u5373\u53EF</li><li>blacklist \u4E2D\u7684\u6570\u662F\u65E0\u89C4\u5F8B\u7684\uFF0C\u6240\u4EE5\u9700\u8981\u7528 map \u6765\u5B58\u50A8\uFF0C\u53C8 Random \u7C7B\u53EA\u80FD\u751F\u6210\u4E00\u6BB5\u533A\u95F4\u5185\u7684\u968F\u673A\u6570\uFF0C\u6240\u4EE5\uFF0C\u5982\u679C\u6211\u4EEC\u53EF\u4EE5\u5C06 blacklist \u4E2D\u7684\u6570\u90FD\u7EDF\u4E00\u5212\u5206\u5230\u4E00\u4E2A\u533A\u95F4\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u7528\u603B\u7684\u533A\u95F4\u957F\u5EA6 n\uFF0C\u51CF\u53BB blacklist \u6240\u5728\u533A\u95F4\uFF0C\u7136\u540E\u76F4\u63A5\u8C03\u7528\u968F\u673A\u51FD\u6570\u53D6\u503C\u5373\u53EF\u4E86</li><li>\u6240\u4EE5\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5C06 blacklist \u4E2D\u7684\u6570\uFF0C\u90FD\u653E\u5230\u603B\u533A\u95F4 [0,n] \u7684\u540E\u534A\u6BB5[m,n]\uFF0C\u7136\u540E\u5728 [0,m] \u4E2D\u968F\u673A\u8FD4\u56DE\u4E00\u4E2A\u6570\u5373\u53EF\uFF0C\u4E0B\u9762\u6765\u770B\u770B\u5177\u4F53\u505A\u6CD5\uFF1A <ul><li>\u5982\u679C blacklist[i] \u672C\u8EAB\u5C31\u662F [m,n] \u4E4B\u95F4\uFF0C\u5219\u4E0D\u7528\u5904\u7406</li><li>\u5982\u679C blacklist[i] \u5728 [0,m] \u4E4B\u95F4\uFF0C\u5219\u610F\u5473\u7740\u9700\u8981\u5C06\u5176\u79FB\u5230 [m,n] \u4E4B\u4E2D\uFF0C\u8FD9\u91CC\u53EF\u4EE5\u7528\u4E00\u4E2Amap\uFF0C\u6765\u8BB0\u5F55\u5C06 blacklist[i] \u79FB\u52A8\u5230\u54EA\u91CC\uFF0C\u4E5F\u5C31\u662F\u5C06\u539F\u59CB\u4F4D\u7F6E\u548C\u79FB\u52A8\u4E4B\u540E\u7684\u4F4D\u7F6E\u505A\u4E86\u4E00\u4E2A\u6620\u5C04\uFF0C\u6240\u4EE5\u5C31\u4E0D\u9700\u8981\u771F\u6B63\u53BB\u6267\u884C\u79FB\u52A8\u7684\u64CD\u4F5C\u4E86</li></ul></li></ul><h3 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> map <span class="token punctuation">;</span>
    <span class="token class-name">Random</span> random<span class="token punctuation">;</span>
    <span class="token keyword">int</span> bound<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">Solution</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> blacklist<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> blacklist<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        bound <span class="token operator">=</span> n <span class="token operator">-</span> m<span class="token punctuation">;</span>
        <span class="token comment">// \u7528black\u6765\u8BB0\u5F55\u539F\u672C\u5C31\u5728blacklist\u4E2D\u7684\u6570\uFF0C\u4FBF\u4E8E\u540E\u9762\u5728\u9700\u8981\u8FDB\u884C\u79FB\u52A8blacklist[i]\u7684\u65F6\u5019\uFF0C\u5224\u65AD\u8BE5\u4F4D\u7F6E\u662F\u5426\u5DF2\u7ECF\u88AB\u5360\u636E\u4E86</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> black <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> b <span class="token operator">:</span> blacklist<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">&gt;=</span> bound<span class="token punctuation">)</span><span class="token punctuation">{</span>
                black<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
		<span class="token comment">// w \u8868\u793A\u53EF\u4EE5\u79FB\u52A8\u7684\u4F4D\u7F6E</span>
        <span class="token keyword">int</span> w <span class="token operator">=</span> bound<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> b <span class="token operator">:</span> blacklist<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">&lt;</span> bound<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span>black<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token operator">++</span>w<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">// \u5C06\u9700\u8981\u79FB\u52A8\u7684\u6570\u4E0E\u79FB\u52A8\u5230\u7684\u76EE\u6807\u4F4D\u7F6E\u8FDB\u884C\u6620\u5C04</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token operator">++</span>w<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">pick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u76F4\u63A5\u5728[0,m]\u4E4B\u95F4\u968F\u673A\u53D6\u6570\u5373\u53EF</span>
        <span class="token keyword">int</span> x <span class="token operator">=</span> random<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>bound<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> map<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(n, blacklist);
 * int param_1 = obj.pick();
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10);function b(h,w){const a=e("ExternalLinkIcon");return l(),i(c,null,[d,k,n("p",null,[n("a",r,[v,p(a)])]),m],64)}var g=t(u,[["render",b],["__file","Leetcode-710.html.vue"]]);export{g as default};
