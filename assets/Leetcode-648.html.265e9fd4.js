import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{o as p,c as e,a as n,d as o,b as s,e as c,r as l}from"./app.6a921662.js";const i={},u=n("h2",{id:"\u9898\u76EE",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9898\u76EE","aria-hidden":"true"},"#"),s(" \u9898\u76EE")],-1),r=n("h3",{id:"\u94FE\u63A5",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u94FE\u63A5","aria-hidden":"true"},"#"),s(" \u94FE\u63A5")],-1),k={href:"https://leetcode.cn/problems/replace-words/",target:"_blank",rel:"noopener noreferrer"},d=s("Leetcode-648 \u5355\u8BCD\u66FF\u6362"),v=c(`<h3 id="\u9898\u610F" tabindex="-1"><a class="header-anchor" href="#\u9898\u610F" aria-hidden="true">#</a> \u9898\u610F</h3><ul><li><p>\u5728\u82F1\u8BED\u4E2D\uFF0C\u6211\u4EEC\u6709\u4E00\u4E2A\u53EB\u505A <code>\u8BCD\u6839(root)</code> \u7684\u6982\u5FF5\uFF0C\u53EF\u4EE5\u8BCD\u6839<strong>\u540E\u9762</strong>\u6DFB\u52A0\u5176\u4ED6\u4E00\u4E9B\u8BCD\u7EC4\u6210\u53E6\u4E00\u4E2A\u8F83\u957F\u7684\u5355\u8BCD\u2014\u2014\u6211\u4EEC\u79F0\u8FD9\u4E2A\u8BCD\u4E3A <code>\u7EE7\u627F\u8BCD</code>(successor)\u3002\u4F8B\u5982\uFF0C\u8BCD\u6839 <code>an</code>\uFF0C\u8DDF\u968F\u7740\u5355\u8BCD <code>other</code>(\u5176\u4ED6)\uFF0C\u53EF\u4EE5\u5F62\u6210\u65B0\u7684\u5355\u8BCD <code>another</code>(\u53E6\u4E00\u4E2A)\u3002</p></li><li><p>\u73B0\u5728\uFF0C\u7ED9\u5B9A\u4E00\u4E2A\u7531\u8BB8\u591A<strong>\u8BCD\u6839</strong>\u7EC4\u6210\u7684\u8BCD\u5178 <code>dictionary</code> \u548C\u4E00\u4E2A\u7528\u7A7A\u683C\u5206\u9694\u5355\u8BCD\u5F62\u6210\u7684\u53E5\u5B50 <code>sentence</code>\u3002\u4F60\u9700\u8981\u5C06\u53E5\u5B50\u4E2D\u7684\u6240\u6709<strong>\u7EE7\u627F\u8BCD</strong>\u7528<strong>\u8BCD\u6839</strong>\u66FF\u6362\u6389\u3002\u5982\u679C<strong>\u7EE7\u627F\u8BCD</strong>\u6709\u8BB8\u591A\u53EF\u4EE5\u5F62\u6210\u5B83\u7684<strong>\u8BCD\u6839</strong>\uFF0C\u5219\u7528<strong>\u6700\u77ED</strong>\u7684\u8BCD\u6839\u66FF\u6362\u5B83\u3002</p></li><li><p>\u4F60\u9700\u8981\u8F93\u51FA\u66FF\u6362\u4E4B\u540E\u7684\u53E5\u5B50\u3002</p></li></ul><h3 id="\u63D0\u793A" tabindex="-1"><a class="header-anchor" href="#\u63D0\u793A" aria-hidden="true">#</a> \u63D0\u793A</h3><ul><li><code>1 &lt;= dictionary.length &lt;= 1000</code></li><li><code>1 &lt;= dictionary[i].length &lt;= 100</code></li><li><code>dictionary[i] \u4EC5\u7531\u5C0F\u5199\u5B57\u6BCD\u7EC4\u6210\u3002</code></li><li><code>1 &lt;= sentence.length &lt;= 10^6</code></li><li><code>sentence \u4EC5\u7531\u5C0F\u5199\u5B57\u6BCD\u548C\u7A7A\u683C\u7EC4\u6210\u3002</code></li><li><code>sentence \u4E2D\u5355\u8BCD\u7684\u603B\u91CF\u5728\u8303\u56F4 [1, 1000] \u5185\u3002</code></li><li><code>sentence \u4E2D\u6BCF\u4E2A\u5355\u8BCD\u7684\u957F\u5EA6\u5728\u8303\u56F4 [1, 1000] \u5185\u3002</code></li><li><code>sentence \u4E2D\u5355\u8BCD\u4E4B\u95F4\u7531\u4E00\u4E2A\u7A7A\u683C\u9694\u5F00\u3002</code></li><li><code>sentence \u6CA1\u6709\u524D\u5BFC\u6216\u5C3E\u968F\u7A7A\u683C\u3002</code></li></ul><h3 id="\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a> \u793A\u4F8B</h3><ul><li><p>\u793A\u4F8B\u4E00\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1Adictionary = [&quot;cat&quot;,&quot;bat&quot;,&quot;rat&quot;], sentence = &quot;the cattle was rattled by the battery&quot;
\u8F93\u51FA\uFF1A&quot;the cat was rat by the bat&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u793A\u4F8B\u4E8C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1Adictionary = [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;], sentence = &quot;aadsfasf absbs bbab cadsfafs&quot;
\u8F93\u51FA\uFF1A&quot;a a b c&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u5206\u6790" aria-hidden="true">#</a> \u5206\u6790</h2><ul><li>\u7531\u9898\u76EE\u4E2D\u7684 <code>\u8BCD\u6839</code>\uFF0C\u5F88\u5BB9\u6613\u5C31\u80FD\u8054\u60F3\u5230 <strong>\u5B57\u5178\u6811</strong>\uFF0C\u4E0B\u9762\u5206\u6790\u5982\u4F55\u7528 <strong>\u5B57\u5178\u6811</strong> \u89E3\u51B3\u672C\u9898</li><li>\u5C06\u7ED9\u5B9A\u7684 <code>\u5B57\u5178</code>\uFF0C\u4FDD\u5B58\u8FDB <strong>\u5B57\u5178\u6811</strong>\uFF0C\u5E76\u5C06\u6BCF\u4E2A\u8BCD\u6839\u7ED3\u5C3E\u8FDB\u884C\u6807\u8BB0</li><li>\u628A\u7ED9\u5B9A\u7684 <code>sentence</code> \u7684\u6BCF\u4E2A\u5355\u8BCD\u5230\u5B57\u5178\u6811\u4E2D\u8FDB\u884C\u67E5\u627E\uFF0C\u5982\u679C\u80FD\u627E\u5230\u8BCD\u6839\uFF0C\u5C31\u8FD4\u56DE\u8BCD\u6839\uFF0C\u5982\u679C\u627E\u4E0D\u5230\uFF0C\u7ED3\u679C\u5C31\u662F\u8BE5\u5355\u8BCD\u672C\u8EAB</li></ul><h2 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u56E0\u4E3A dictionary.length \u4E3A 1000\uFF0Cdictionary[i].length \u4E3A100\uFF0C\u6240\u4EE5idx\u6700\u5927\u53EF\u80FD\u5230100000</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> son <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">100010</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cnt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">100010</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">replaceWords</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> dictionary<span class="token punctuation">,</span> <span class="token class-name">String</span> sentence<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> str <span class="token operator">:</span> dictionary<span class="token punctuation">)</span> <span class="token function">insert</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strs <span class="token operator">=</span> sentence<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">StringBuilder</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> strs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">String</span> ans <span class="token operator">=</span> <span class="token function">query</span><span class="token punctuation">(</span>strs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5982\u679C\u627E\u4E0D\u5230\u5B57\u6839\uFF0C\u5C31\u662F\u52A0\u539F\u5355\u8BCD</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ans<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>strs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">else</span> res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!=</span> strs<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> res<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">int</span> p <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>u<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            u <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>son<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                son<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">++</span>idx<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            p <span class="token operator">=</span> son<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5355\u8BCD\u7ED3\u5C3E\u505A\u6807\u8BB0</span>
        cnt<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">String</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">int</span> p <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>u<span class="token punctuation">;</span>
        <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            u <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5982\u679C\u5DF2\u7ECF\u627E\u5230\u5B57\u6839</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>cnt<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5982\u679C\u627E\u4E00\u534A\u5C31\u53D1\u73B0\u6CA1\u6709\u8BE5\u5355\u8BCD\u6216\u5B57\u6839</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>son<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            p <span class="token operator">=</span> son<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5982\u679C\u6574\u4E2A\u5355\u8BCD\u90FD\u80FD\u627E\u5230</span>
        <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10);function m(b,h){const a=l("ExternalLinkIcon");return p(),e("div",null,[u,r,n("p",null,[n("a",k,[d,o(a)])]),v])}var y=t(i,[["render",m],["__file","Leetcode-648.html.vue"]]);export{y as default};
