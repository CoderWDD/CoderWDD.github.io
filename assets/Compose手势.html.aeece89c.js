import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,o as c,c as i,a as n,d as t,F as l,e as p,b as s}from"./app.3b7dd8a9.js";const u={},r=p(`<h2 id="\u70B9\u51FB\u3001\u62D6\u62FD\u4E8B\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u70B9\u51FB\u3001\u62D6\u62FD\u4E8B\u4EF6" aria-hidden="true">#</a> \u70B9\u51FB\u3001\u62D6\u62FD\u4E8B\u4EF6</h2><h3 id="\u7B80\u5355\u7684\u70B9\u51FB\u4E8B\u4EF6-clickable" tabindex="-1"><a class="header-anchor" href="#\u7B80\u5355\u7684\u70B9\u51FB\u4E8B\u4EF6-clickable" aria-hidden="true">#</a> \u7B80\u5355\u7684\u70B9\u51FB\u4E8B\u4EF6----clickable</h3><ul><li><p>Compose \u4E2D\u7684\u7B80\u5355\u70B9\u51FB\u4E8B\u4EF6\uFF0C\u53EF\u4EE5\u901A\u8FC7 Modifier \u8FDB\u884C\u8BBE\u7F6E\uFF0C\u4E0B\u9762\u7ED9\u51FA\u4E00\u4E2A\u7B80\u5355\u7684\u793A\u4F8B\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Preview</span>
<span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> <span class="token function">GesturesTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> count <span class="token operator">=</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">count<span class="token punctuation">.</span>value</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Red<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clickable</span> <span class="token punctuation">{</span> 
        count<span class="token punctuation">.</span>value <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="\u66F4\u7075\u6D3B\u5730\u63A7\u5236\u4E8B\u4EF6-pointerinput" tabindex="-1"><a class="header-anchor" href="#\u66F4\u7075\u6D3B\u5730\u63A7\u5236\u4E8B\u4EF6-pointerinput" aria-hidden="true">#</a> \u66F4\u7075\u6D3B\u5730\u63A7\u5236\u4E8B\u4EF6----pointerInput</h3><ul><li><p>\u76F8\u6BD4\u4E8E\u5728 Android View \u4E2D\u9700\u8981\u91CD\u5199 onTouch \u65B9\u6CD5\u6765\u5177\u4F53\u63A7\u5236\u70B9\u51FB\u4E8B\u4EF6\uFF0C \u800C\u5728 Compose \u4E2D\uFF0C\u53EA\u9700\u8981\u901A\u8FC7 Modifier \u7684\u6269\u5C55\u51FD\u6570 pointerInput \u5C31\u80FD\u8F7B\u677E\u5B8C\u6210</p></li><li><p>\u4E0B\u9762\u6765\u770B\u770B <code>pointerInput</code> \u7684\u5B9A\u4E49\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">fun</span> Modifier<span class="token punctuation">.</span><span class="token function">pointerInput</span><span class="token punctuation">(</span>
    key1<span class="token operator">:</span> Any<span class="token operator">?</span><span class="token punctuation">,</span>
    block<span class="token operator">:</span> <span class="token keyword">suspend</span> PointerInputScope<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> Unit
<span class="token punctuation">)</span><span class="token operator">..</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C <code>pointerInput</code> \u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u7C7B\u578B\u4E3A PointerInputScope \uFF0C\u4E0B\u9762\u6765\u770B\u770B\u5176\u5B9A\u4E49\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">interface</span> PointerInputScope <span class="token operator">:</span> Density <span class="token punctuation">{</span>

    <span class="token keyword">val</span> size<span class="token operator">:</span> IntSize

    <span class="token keyword">val</span> extendedTouchPadding<span class="token operator">:</span> Size
        <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> Size<span class="token punctuation">.</span>Zero

    <span class="token keyword">val</span> viewConfiguration<span class="token operator">:</span> ViewConfiguration

    <span class="token annotation builtin">@Suppress</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;GetterSetterNames&quot;</span></span><span class="token punctuation">)</span>
    <span class="token annotation builtin">@get:Suppress</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;GetterSetterNames&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> interceptOutOfBoundsChildEvents<span class="token operator">:</span> Boolean
        <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">false</span>
        <span class="token keyword">set</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token operator">&lt;</span>R<span class="token operator">&gt;</span> <span class="token function">awaitPointerEventScope</span><span class="token punctuation">(</span>
        block<span class="token operator">:</span> <span class="token keyword">suspend</span> AwaitPointerEventScope<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> R
    <span class="token punctuation">)</span><span class="token operator">:</span> R
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u7684\u4EE3\u7801\u53EF\u4EE5\u770B\u51FA\uFF0C<code>PointerInputScope </code> \u5176\u5B9E\u662F\u4E00\u4E2A\u63A5\u53E3\uFF0C\u8FD9\u91CC\u4E5F\u53EF\u4EE5\u901A\u8FC7 DSL \u7684\u65B9\u6CD5\u6765\u8BBE\u7F6E\u53C2\u6570</p></li><li><p>\u4E0B\u9762\u6765\u770B\u770B\u5982\u4F55\u4F7F\u7528\u5B83\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Preview</span>
<span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> <span class="token function">GesturesTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> count <span class="token operator">=</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">count<span class="token punctuation">.</span>value</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Red<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pointerInput</span><span class="token punctuation">(</span>Unit<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">detectTapGestures</span><span class="token punctuation">(</span>
        onPress <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">/* \u624B\u52BF\u5F00\u59CB\u65F6\u8C03\u7528 */</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        onDoubleTap <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">/* \u53CC\u51FB\u8C03\u7528 */</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        onLongPress <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">/* \u957F\u6309\u8C03\u7528 */</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        onTap <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">/* \u5355\u51FB\u8C03\u7528 */</span> <span class="token punctuation">}</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">detectDragGestures</span><span class="token punctuation">(</span>
            onDragStart <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">/* \u62D6\u62FD\u5F00\u59CB\u65F6\u8C03\u7528 */</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            onDragEnd <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">/* \u62D6\u62FD\u7ED3\u675F\u65F6\u8C03\u7528 */</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            onDragCancel <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">/* \u62D6\u62FD\u53D6\u6D88\u65F6\u8C03\u7528 */</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            onDrag <span class="token operator">=</span> <span class="token punctuation">{</span> change<span class="token punctuation">,</span> dragAmount <span class="token operator">-&gt;</span> <span class="token punctuation">{</span> <span class="token comment">/* \u62D6\u62FD\u8FC7\u7A0B\u4E2D\u8C03\u7528 */</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u4E0D\u7BA1\u662F\u70B9\u51FB\u4E8B\u4EF6\u8FD8\u662F\u62D6\u62FD\u4E8B\u4EF6\uFF0C\u90FD\u6709\u76F8\u5E94\u7684\u56DE\u8C03\u53EF\u4EE5\u4F7F\u7528\uFF0C\u53EA\u80FD\u8BF4\u771F\u7684\u5F88\u65B9\u4FBF\u4E86</p></li><li><p>\u4E00\u4E2A\u7B80\u5355\u4F8B\u5B50\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Preview</span>
<span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> <span class="token function">GesturesTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Box</span><span class="token punctuation">(</span>modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> offsetX <span class="token keyword">by</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
        <span class="token keyword">var</span> offsetY <span class="token keyword">by</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>

        <span class="token function">Box</span><span class="token punctuation">(</span>
            Modifier
                <span class="token punctuation">.</span><span class="token function">offset</span> <span class="token punctuation">{</span> <span class="token function">IntOffset</span><span class="token punctuation">(</span>offsetX<span class="token punctuation">.</span><span class="token function">roundToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> offsetY<span class="token punctuation">.</span><span class="token function">roundToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
                <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Blue<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">pointerInput</span><span class="token punctuation">(</span>Unit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    detectDragGestures <span class="token punctuation">{</span> change<span class="token punctuation">,</span> dragAmount <span class="token operator">-&gt;</span>
                        change<span class="token punctuation">.</span><span class="token function">consumeAllChanges</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        offsetX <span class="token operator">+=</span> dragAmount<span class="token punctuation">.</span>x
                        offsetY <span class="token operator">+=</span> dragAmount<span class="token punctuation">.</span>y
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9884\u89C8\u6548\u679C\uFF1A</p><p><img src="https://raw.githubusercontent.com/CoderWDD/myImages/main/blog_images/20220609062302.png" alt="" loading="lazy"></p></li></ul><h2 id="\u6EDA\u52A8\u4E8B\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u6EDA\u52A8\u4E8B\u4EF6" aria-hidden="true">#</a> \u6EDA\u52A8\u4E8B\u4EF6</h2><ul><li>\u63D0\u9192\uFF1A\u5982\u679C\u60A8\u6709\u5927\u91CF\u6570\u636E\u9700\u8981\u663E\u793A\u5728\u5217\u8868\u4E2D\uFF0C\u8BF7\u4F18\u5148\u8003\u8651\u4F7F\u7528 <code>LazyColumn</code> \u548C <code>LazyRow</code> \u800C\u4E0D\u662F\u4F7F\u7528\u8FD9\u4E9B API\u3002<code>LazyColumn</code> \u548C <code>LazyRow</code> \u5177\u6709\u6EDA\u52A8\u529F\u80FD\uFF0C\u5B83\u4EEC\u7684\u6548\u7387\u8FDC\u9AD8\u4E8E\u6EDA\u52A8\u4FEE\u9970\u7B26\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u4EC5\u5728\u9700\u8981\u65F6\u7EC4\u5408\u5404\u4E2A\u9879\u3002</li></ul><h3 id="\u6EDA\u52A8\u4FEE\u9970\u7B26-verticalscroll-\u548C-horizontalscroll" tabindex="-1"><a class="header-anchor" href="#\u6EDA\u52A8\u4FEE\u9970\u7B26-verticalscroll-\u548C-horizontalscroll" aria-hidden="true">#</a> \u6EDA\u52A8\u4FEE\u9970\u7B26\uFF1A <code>verticalScroll</code> \u548C <code>horizontalScroll</code></h3><ul><li><p>\u5F53\u754C\u9762\u4E2D\u5185\u5BB9\u592A\u591A\uFF0C\u5BFC\u81F4\u663E\u793A\u4E0D\u5B8C\u65F6\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4F7F\u7528 <code>verticalScroll</code> \u548C <code>horizontalScroll</code> \u4FEE\u9970\u7B26\uFF0C\u8BA9\u7528\u6237\u5728\u5143\u7D20\u5185\u5BB9\u8FB9\u754C\u5927\u4E8E\u6700\u5927\u5C3A\u5BF8\u7EA6\u675F\u65F6\u6EDA\u52A8\u5143\u7D20\u3002</p></li><li><p>\u4F7F\u7528\u6848\u4F8B\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> <span class="token function">ScrollBoxes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Column</span><span class="token punctuation">(</span>
        modifier <span class="token operator">=</span> Modifier
            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>LightGray<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">verticalScroll</span><span class="token punctuation">(</span><span class="token function">rememberScrollState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>	<span class="token comment">// \u501F\u52A9 ScrollState\uFF0C\u60A8\u53EF\u4EE5\u66F4\u6539\u6EDA\u52A8\u4F4D\u7F6E\u6216\u83B7\u53D6\u5F53\u524D\u72B6\u6001\u3002</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Item </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">it</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9884\u89C8\u6548\u679C\uFF1A</p><p><img src="https://raw.githubusercontent.com/CoderWDD/myImages/main/blog_images/20220609063005.png" alt="" loading="lazy"></p></li></ul><h3 id="\u53EF\u6EDA\u52A8\u4FEE\u9970\u7B26-scrollable" tabindex="-1"><a class="header-anchor" href="#\u53EF\u6EDA\u52A8\u4FEE\u9970\u7B26-scrollable" aria-hidden="true">#</a> \u53EF\u6EDA\u52A8\u4FEE\u9970\u7B26\uFF1A<code>scrollable</code></h3>`,10),k=s("\u4E0E\u6EDA\u52A8\u4FEE\u9970\u7B26\u4E0D\u540C\uFF0C "),d=n("code",null,"scrollable",-1),v=s(" \u53EF\u68C0\u6D4B\u6EDA\u52A8\u624B\u52BF\uFF0C\u4F46\u4E0D\u4F1A\u504F\u79FB\u5176\u5185\u5BB9\u3002\u5FC5\u987B\u6709 "),m={href:"https://developer.android.com/reference/kotlin/androidx/compose/foundation/gestures/ScrollableState?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"ScrollableState",-1),f=s("\uFF0C\u6B64\u4FEE\u9970\u7B26\u624D\u80FD\u6B63\u5E38\u5DE5\u4F5C\u3002\u6784\u9020 "),g=n("code",null,"ScrollableState",-1),h=s(" \u65F6\uFF0C\u60A8\u5FC5\u987B\u63D0\u4F9B\u4E00\u4E2A "),y=n("code",null,"consumeScrollDelta",-1),w=s(" \u51FD\u6570\uFF0C\u8BE5\u51FD\u6570\u5C06\u5728\u6BCF\u4E2A\u6EDA\u52A8\u6B65\u9AA4\u8C03\u7528\uFF08\u901A\u8FC7\u624B\u52BF\u8F93\u5165\u3001\u6D41\u7545\u6EDA\u52A8\u6216\u5FEB\u901F\u6ED1\u52A8\uFF09\uFF0C\u5E76\u4E14\u589E\u91CF\u4EE5\u50CF\u7D20\u4E3A\u5355\u4F4D\u3002\u8BE5\u51FD\u6570\u5FC5\u987B\u8FD4\u56DE\u6240\u6D88\u8017\u7684\u6EDA\u52A8\u8DDD\u79BB\uFF0C\u4EE5\u786E\u4FDD\u5728\u5B58\u5728\u5177\u6709 "),S=n("code",null,"scrollable",-1),_=s(" \u4FEE\u9970\u7B26\u7684\u5D4C\u5957\u5143\u7D20\u65F6\uFF0C\u53EF\u4EE5\u6B63\u786E\u4F20\u64AD\u76F8\u5E94\u4E8B\u4EF6\u3002"),x=p(`<li><p><code>scrollable</code> \u4FEE\u9970\u7B26**\u4E0D\u4F1A\u5F71\u54CD\u5B83\u6240\u5E94\u7528\u5230\u7684\u5143\u7D20\u7684\u5E03\u5C40\u3002**\u8FD9\u610F\u5473\u7740\uFF0C\u5BF9\u5143\u7D20\u5E03\u5C40\u6216\u5176\u5B50\u7EA7\u8FDB\u884C\u7684\u4EFB\u4F55\u66F4\u6539\u90FD\u5FC5\u987B\u901A\u8FC7\u7531 <code>ScrollableState</code> \u63D0\u4F9B\u7684\u589E\u91CF\u8FDB\u884C\u5904\u7406\u3002\u53E6\u5916\u8BF7\u52A1\u5FC5\u6CE8\u610F\uFF0C<code>scrollable</code> \u4E0D\u4F1A\u8003\u8651\u5B50\u7EA7\u7684\u5E03\u5C40\uFF0C\u8FD9\u610F\u5473\u7740\u5B83\u65E0\u9700\u6D4B\u91CF\u5B50\u7EA7\uFF0C\u5373\u53EF\u4F20\u64AD\u6EDA\u52A8\u589E\u91CF\u3002</p></li><li><p>\u4EE5\u4E0B\u4EE3\u7801\u6BB5\u53EF\u68C0\u6D4B\u624B\u52BF\u5E76\u663E\u793A\u504F\u79FB\u91CF\u7684\u6570\u503C\uFF0C\u4F46\u4E0D\u4F1A\u504F\u79FB\u4EFB\u4F55\u5143\u7D20\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> <span class="token function">ScrollableSample</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// actual composable state</span>
    <span class="token keyword">var</span> offset <span class="token keyword">by</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token function">Box</span><span class="token punctuation">(</span>
        Modifier
            <span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">scrollable</span><span class="token punctuation">(</span>
                orientation <span class="token operator">=</span> Orientation<span class="token punctuation">.</span>Vertical<span class="token punctuation">,</span>
                <span class="token comment">// Scrollable state: describes how to consume</span>
                <span class="token comment">// scrolling delta and update offset</span>
                state <span class="token operator">=</span> rememberScrollableState <span class="token punctuation">{</span> delta <span class="token operator">-&gt;</span>
                    offset <span class="token operator">+=</span> delta
                    delta
                <span class="token punctuation">}</span>
            <span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>LightGray<span class="token punctuation">)</span><span class="token punctuation">,</span>
        contentAlignment <span class="token operator">=</span> Alignment<span class="token punctuation">.</span>Center
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">Text</span><span class="token punctuation">(</span>offset<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9884\u89C8\u6548\u679C\uFF1A</p><p><img src="https://raw.githubusercontent.com/CoderWDD/myImages/main/blog_images/20220609063721.png" alt="" loading="lazy"></p></li>`,2),C=p(`<h3 id="\u5D4C\u5957\u6EDA\u52A8" tabindex="-1"><a class="header-anchor" href="#\u5D4C\u5957\u6EDA\u52A8" aria-hidden="true">#</a> \u5D4C\u5957\u6EDA\u52A8</h3><ul><li><p>\u5F15\u5165\uFF1ACompose \u652F\u6301\u5D4C\u5957\u6EDA\u52A8\uFF0C\u53EF\u8BA9\u591A\u4E2A\u5143\u7D20\u5BF9\u4E00\u4E2A\u6EDA\u52A8\u624B\u52BF\u505A\u51FA\u56DE\u5E94\u3002\u5178\u578B\u7684\u5D4C\u5957\u6EDA\u52A8\u793A\u4F8B\u662F\u5728\u4E00\u4E2A\u5217\u8868\u4E2D\u5D4C\u5957\u53E6\u4E00\u4E2A\u5217\u8868</p></li><li><p>\u503C\u5F97\u6CE8\u610F\u7684\u662F\uFF1A\u65E0\u9700\u6211\u4EEC\u6267\u884C\u4EFB\u4F55\u64CD\u4F5C\uFF0C<strong>\u542F\u52A8\u6EDA\u52A8\u64CD\u4F5C\u7684\u624B\u52BF\u5C31\u4F1A\u81EA\u52A8\u4ECE\u5B50\u63A7\u5236\u4F20\u9012\u5230\u7236\u63A7\u4EF6</strong>\uFF0C\u8FD9\u6837\u4E00\u6765\uFF0C\u5F53\u5B50\u63A7\u4EF6\u6EDA\u52A8\u5230\u5E95\u90E8\u7684\u65F6\u5019\uFF0C\u624B\u52BF\u5C31\u4F1A\u7531\u5176\u7236\u63A7\u4EF6\u8FDB\u884C\u5904\u7406\u3002</p></li><li><p>\u4EE5\u4E0B\u793A\u4F8B\u663E\u793A\u7684\u5143\u7D20\u5E94\u7528\u4E86 <code>verticalScroll</code>\u4FEE\u9970\u7B26\uFF0C\u800C\u5176\u6240\u5728\u7684\u5BB9\u5668\u540C\u6837\u5E94\u7528\u4E86 <code>verticalScroll</code> \u4FEE\u9970\u7B26\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token keyword">val</span> gradient <span class="token operator">=</span> Brush<span class="token punctuation">.</span><span class="token function">verticalGradient</span><span class="token punctuation">(</span><span class="token number">0f</span> <span class="token keyword">to</span> Color<span class="token punctuation">.</span>Gray<span class="token punctuation">,</span> <span class="token number">1000f</span> <span class="token keyword">to</span> Color<span class="token punctuation">.</span>White<span class="token punctuation">)</span>
<span class="token function">Box</span><span class="token punctuation">(</span>
    modifier <span class="token operator">=</span> Modifier
        <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>LightGray<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">verticalScroll</span><span class="token punctuation">(</span><span class="token function">rememberScrollState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Column <span class="token punctuation">{</span>
        <span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">Box</span><span class="token punctuation">(</span>
                modifier <span class="token operator">=</span> Modifier
                    <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">verticalScroll</span><span class="token punctuation">(</span><span class="token function">rememberScrollState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">Text</span><span class="token punctuation">(</span>
                    <span class="token string-literal singleline"><span class="token string">&quot;Scroll here&quot;</span></span><span class="token punctuation">,</span>
                    modifier <span class="token operator">=</span> Modifier
                        <span class="token punctuation">.</span><span class="token function">border</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">.</span>dp<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>DarkGray<span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>brush <span class="token operator">=</span> gradient<span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span>
                <span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9884\u89C8\u6548\u679C\uFF1A</p><p><img src="https://raw.githubusercontent.com/CoderWDD/myImages/main/blog_images/20220609065140.png" alt="" loading="lazy"></p></li></ul><h2 id="\u6ED1\u52A8\u4E8B\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u6ED1\u52A8\u4E8B\u4EF6" aria-hidden="true">#</a> \u6ED1\u52A8\u4E8B\u4EF6</h2><ul><li><p>\u5F15\u5165\uFF1A\u5728 Compose \u4E2D\uFF0C\u6ED1\u52A8\u4E8B\u4EF6\u53EF\u4EE5\u4F7F\u7528\u4FEE\u9970\u7B26 <code>swipeable</code> \u6765\u5B9E\u73B0\uFF0C\u901A\u8FC7\u8BE5\u4FEE\u9970\u7B26\u6211\u4EEC\u53EF\u4EE5\u5B9E\u73B0\u5728\u62D6\u52A8\u5143\u7D20\u91CA\u653E\u540E\uFF0C\u53E6\u5176\u671D\u4E00\u4E2A\u65B9\u5411\u5B9A\u4E49\u7684\u4E24\u4E2A\u6216\u591A\u4E2A\u951A\u70B9\u5448\u73B0\u52A8\u753B\u6548\u679C\u3002</p></li><li><p>\u503C\u5F97\u6CE8\u610F\u7684\u662F\uFF1A<code>swipeable</code>\u4FEE\u9970\u7B26\u4E0D\u4F1A\u79FB\u52A8\u63A7\u4EF6\u4F4D\u7F6E\uFF0C\u53EA\u4F1A\u68C0\u6D4B\u624B\u52BF\u3002\u56E0\u6B64\uFF0C\u6211\u4EEC\u9700\u8981\u4FDD\u5B58\u5750\u6807\u70B9\u6765\u79FB\u52A8\u63A7\u4EF6\uFF0C\u4F8B\u5982\u901A\u8FC7 <code>offset</code> \u4FEE\u9970\u7B26\u79FB\u52A8\u63A7\u4EF6\u3002</p></li><li><p><code>swipeable</code> \u65B9\u6CD5\u7684\u5B9A\u4E49\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@ExperimentalMaterial3Api</span>
<span class="token keyword">internal</span> <span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">&gt;</span> Modifier<span class="token punctuation">.</span><span class="token function">swipeable</span><span class="token punctuation">(</span>
    state<span class="token operator">:</span> SwipeableState<span class="token operator">&lt;</span>T<span class="token operator">&gt;</span><span class="token punctuation">,</span>	<span class="token comment">// \u624B\u6ED1\u5F0F\u72B6\u6001\uFF0C\u8BE5\u72B6\u6001\u53EF\u4EE5\u901A\u8FC7 rememberSwipeableState() \u521B\u5EFA\u548C\u8BB0\u4F4F</span>
    anchors<span class="token operator">:</span> Map<span class="token operator">&lt;</span>Float<span class="token punctuation">,</span> T<span class="token operator">&gt;</span><span class="token punctuation">,</span>		<span class="token comment">// \u7528\u4E8E\u5C06\u951A\u70B9\u6620\u5C04\u5230\u72B6\u6001</span>
    orientation<span class="token operator">:</span> Orientation<span class="token punctuation">,</span>	<span class="token comment">// \u5B9A\u4E49\u6ED1\u52A8\u4E8B\u4EF6\u7684\u65B9\u5411</span>
    enabled<span class="token operator">:</span> Boolean <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    reverseDirection<span class="token operator">:</span> Boolean <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    interactionSource<span class="token operator">:</span> MutableInteractionSource<span class="token operator">?</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    thresholds<span class="token operator">:</span> <span class="token punctuation">(</span>from<span class="token operator">:</span> T<span class="token punctuation">,</span> <span class="token keyword">to</span><span class="token operator">:</span> T<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> ThresholdConfig <span class="token operator">=</span> <span class="token punctuation">{</span> _<span class="token punctuation">,</span> _ <span class="token operator">-&gt;</span> <span class="token function">FixedThreshold</span><span class="token punctuation">(</span><span class="token number">56</span><span class="token punctuation">.</span>dp<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    resistance<span class="token operator">:</span> ResistanceConfig<span class="token operator">?</span> <span class="token operator">=</span> <span class="token function">resistanceConfig</span><span class="token punctuation">(</span>anchors<span class="token punctuation">.</span>keys<span class="token punctuation">)</span><span class="token punctuation">,</span>
    velocityThreshold<span class="token operator">:</span> Dp <span class="token operator">=</span> VelocityThreshold
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u4F7F\u7528\u5B9E\u4F8B\uFF1A</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> <span class="token function">SwipeableSample</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">val</span> width <span class="token operator">=</span> <span class="token number">96</span><span class="token punctuation">.</span>dp
    <span class="token keyword">val</span> squareSize <span class="token operator">=</span> <span class="token number">48</span><span class="token punctuation">.</span>dp

    <span class="token keyword">val</span> swipeableState <span class="token operator">=</span> <span class="token function">rememberSwipeableState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">val</span> sizePx <span class="token operator">=</span> <span class="token function">with</span><span class="token punctuation">(</span>LocalDensity<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span> squareSize<span class="token punctuation">.</span><span class="token function">toPx</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token keyword">val</span> anchors <span class="token operator">=</span> <span class="token function">mapOf</span><span class="token punctuation">(</span><span class="token number">0f</span> <span class="token keyword">to</span> <span class="token number">0</span><span class="token punctuation">,</span> sizePx <span class="token keyword">to</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// Maps anchor points (in px) to states</span>

    <span class="token function">Box</span><span class="token punctuation">(</span>
        modifier <span class="token operator">=</span> Modifier
            <span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">swipeable</span><span class="token punctuation">(</span>
                state <span class="token operator">=</span> swipeableState<span class="token punctuation">,</span>
                anchors <span class="token operator">=</span> anchors<span class="token punctuation">,</span>
                thresholds <span class="token operator">=</span> <span class="token punctuation">{</span> _<span class="token punctuation">,</span> _ <span class="token operator">-&gt;</span> <span class="token function">FractionalThreshold</span><span class="token punctuation">(</span><span class="token number">0.3f</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                orientation <span class="token operator">=</span> Orientation<span class="token punctuation">.</span>Horizontal
            <span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>LightGray<span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">Box</span><span class="token punctuation">(</span>
            Modifier
                <span class="token punctuation">.</span><span class="token function">offset</span> <span class="token punctuation">{</span> <span class="token function">IntOffset</span><span class="token punctuation">(</span>swipeableState<span class="token punctuation">.</span>offset<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">roundToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
                <span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span>squareSize<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>DarkGray<span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9884\u89C8\u6548\u679C\uFF1A</p><p><img src="https://raw.githubusercontent.com/CoderWDD/myImages/main/blog_images/20220609070801.png" alt="" loading="lazy"></p></li></ul><h2 id="\u591A\u70B9\u89E6\u63A7-\u5E73\u79FB\u3001\u7F29\u653E\u3001\u65CB\u8F6C" tabindex="-1"><a class="header-anchor" href="#\u591A\u70B9\u89E6\u63A7-\u5E73\u79FB\u3001\u7F29\u653E\u3001\u65CB\u8F6C" aria-hidden="true">#</a> \u591A\u70B9\u89E6\u63A7\uFF1A\u5E73\u79FB\u3001\u7F29\u653E\u3001\u65CB\u8F6C</h2><p>\u5982\u9700\u68C0\u6D4B\u7528\u4E8E\u5E73\u79FB\u3001\u7F29\u653E\u548C\u65CB\u8F6C\u7684\u591A\u70B9\u89E6\u63A7\u624B\u52BF\uFF0C\u60A8\u53EF\u4EE5\u4F7F\u7528 <code>transformable</code> \u4FEE\u9970\u7B26\u3002\u6B64\u4FEE\u9970\u7B26\u672C\u8EAB\u4E0D\u4F1A\u8F6C\u6362\u5143\u7D20\uFF0C\u53EA\u4F1A\u68C0\u6D4B\u624B\u52BF\u3002</p><div class="language-kotlin ext-kt line-numbers-mode"><pre class="language-kotlin"><code><span class="token annotation builtin">@Composable</span>
<span class="token keyword">fun</span> <span class="token function">TransformableSample</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// set up all transformation states</span>
    <span class="token keyword">var</span> scale <span class="token keyword">by</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token number">1f</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token keyword">var</span> rotation <span class="token keyword">by</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span><span class="token number">0f</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token keyword">var</span> offset <span class="token keyword">by</span> remember <span class="token punctuation">{</span> <span class="token function">mutableStateOf</span><span class="token punctuation">(</span>Offset<span class="token punctuation">.</span>Zero<span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token keyword">val</span> state <span class="token operator">=</span> rememberTransformableState <span class="token punctuation">{</span> zoomChange<span class="token punctuation">,</span> offsetChange<span class="token punctuation">,</span> rotationChange <span class="token operator">-&gt;</span>
        scale <span class="token operator">*=</span> zoomChange
        rotation <span class="token operator">+=</span> rotationChange
        offset <span class="token operator">+=</span> offsetChange
    <span class="token punctuation">}</span>
    <span class="token function">Box</span><span class="token punctuation">(</span>
        Modifier
            <span class="token comment">// apply other transformations like rotation and zoom</span>
            <span class="token comment">// on the pizza slice emoji</span>
            <span class="token punctuation">.</span><span class="token function">graphicsLayer</span><span class="token punctuation">(</span>
                scaleX <span class="token operator">=</span> scale<span class="token punctuation">,</span>
                scaleY <span class="token operator">=</span> scale<span class="token punctuation">,</span>
                rotationZ <span class="token operator">=</span> rotation<span class="token punctuation">,</span>
                translationX <span class="token operator">=</span> offset<span class="token punctuation">.</span>x<span class="token punctuation">,</span>
                translationY <span class="token operator">=</span> offset<span class="token punctuation">.</span>y
            <span class="token punctuation">)</span>
            <span class="token comment">// add transformable to listen to multitouch transformation events</span>
            <span class="token comment">// after offset</span>
            <span class="token punctuation">.</span><span class="token function">transformable</span><span class="token punctuation">(</span>state <span class="token operator">=</span> state<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>Blue<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">fillMaxSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9884\u89C8\u6548\u679C\uFF1A</p><p><img src="https://raw.githubusercontent.com/CoderWDD/myImages/main/blog_images/20220609070911.png" alt="" loading="lazy"></p>`,9),z=s("\u5982\u679C\u60A8\u9700\u8981\u5C06\u7F29\u653E\u3001\u5E73\u79FB\u548C\u65CB\u8F6C\u4E0E\u5176\u4ED6\u624B\u52BF\u7ED3\u5408\u4F7F\u7528\uFF0C\u53EF\u4EE5\u4F7F\u7528 "),T={href:"https://developer.android.com/reference/kotlin/androidx/compose/foundation/gestures/package-summary?hl=zh-cn#(androidx.compose.ui.input.pointer.PointerInputScope).detectTransformGestures(kotlin.Boolean,kotlin.Function4)",target:"_blank",rel:"noopener noreferrer"},I=n("code",null,"PointerInputScope.detectTransformGestures",-1),D=s(" \u68C0\u6D4B\u5668\u3002"),M=n("h2",{id:"\u53C2\u8003-\u63A8\u8350\u8D44\u6599",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u53C2\u8003-\u63A8\u8350\u8D44\u6599","aria-hidden":"true"},"#"),s(" \u53C2\u8003/\u63A8\u8350\u8D44\u6599")],-1),B={href:"https://developer.android.com/jetpack/compose/gestures?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"},G=s("\u5B98\u65B9\u6587\u6863");function P(O,q){const a=o("ExternalLinkIcon");return c(),i(l,null,[r,n("ul",null,[n("li",null,[n("p",null,[k,d,v,n("a",m,[b,t(a)]),f,g,h,y,w,S,_])]),x]),C,n("p",null,[z,n("a",T,[I,t(a)]),D]),M,n("p",null,[n("a",B,[G,t(a)])])],64)}var E=e(u,[["render",P],["__file","Compose\u624B\u52BF.html.vue"]]);export{E as default};
